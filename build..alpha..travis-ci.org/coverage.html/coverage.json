{"/home/travis/build/npmtest/node-npmtest-github-api/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-github-api/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_github_api */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-github-api/lib.npmtest_github_api.js":{"path":"/home/travis/build/npmtest/node-npmtest-github-api/lib.npmtest_github_api.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":55}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":61}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_github_api */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_github_api = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_github_api = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-github-api/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-github-api/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":54}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":68},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-github-api && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_github_api */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_github_api","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_github_api.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_github_api.rollup.js'] =","            local.assetsDict['/assets.npmtest_github_api.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_github_api.__dirname + '/lib.npmtest_github_api.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-github-api/node_modules/github-api/dist/components/GitHub.js":{"path":"/home/travis/build/npmtest/node-npmtest-github-api/node_modules/github-api/dist/components/GitHub.js","s":{"1":1,"2":1,"3":1,"4":11,"5":11,"6":11,"7":11,"8":11,"9":11,"10":1,"11":1,"12":1,"13":1,"14":0,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":10,"38":1,"39":0,"40":0,"41":1,"42":1,"43":0,"44":0,"45":0,"46":0,"47":1,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":1,"63":1},"b":{"1":[11,11],"2":[11,0],"3":[1,0],"4":[0,1],"5":[0,10],"6":[10,10],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0]},"f":{"1":1,"2":1,"3":1,"4":10,"5":0,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},"fnMap":{"1":{"name":"(anonymous_1)","line":3,"loc":{"start":{"line":3,"column":19},"end":{"line":3,"column":31}}},"2":{"name":"defineProperties","line":3,"loc":{"start":{"line":3,"column":33},"end":{"line":3,"column":74}}},"3":{"name":"(anonymous_3)","line":3,"loc":{"start":{"line":3,"column":357},"end":{"line":3,"column":405}}},"4":{"name":"_interopRequireDefault","line":51,"loc":{"start":{"line":51,"column":0},"end":{"line":51,"column":37}}},"5":{"name":"_classCallCheck","line":53,"loc":{"start":{"line":53,"column":0},"end":{"line":53,"column":48}}},"6":{"name":"(anonymous_6)","line":58,"loc":{"start":{"line":58,"column":13},"end":{"line":58,"column":25}}},"7":{"name":"GitHub","line":65,"loc":{"start":{"line":65,"column":2},"end":{"line":65,"column":24}}},"8":{"name":"getGist","line":83,"loc":{"start":{"line":83,"column":11},"end":{"line":83,"column":32}}},"9":{"name":"getUser","line":96,"loc":{"start":{"line":96,"column":11},"end":{"line":96,"column":34}}},"10":{"name":"getOrganization","line":108,"loc":{"start":{"line":108,"column":11},"end":{"line":108,"column":50}}},"11":{"name":"getTeam","line":120,"loc":{"start":{"line":120,"column":11},"end":{"line":120,"column":36}}},"12":{"name":"getRepo","line":133,"loc":{"start":{"line":133,"column":11},"end":{"line":133,"column":40}}},"13":{"name":"getIssues","line":146,"loc":{"start":{"line":146,"column":11},"end":{"line":146,"column":42}}},"14":{"name":"search","line":158,"loc":{"start":{"line":158,"column":11},"end":{"line":158,"column":34}}},"15":{"name":"getRateLimit","line":169,"loc":{"start":{"line":169,"column":11},"end":{"line":169,"column":35}}},"16":{"name":"getMarkdown","line":180,"loc":{"start":{"line":180,"column":11},"end":{"line":180,"column":34}}},"17":{"name":"getProject","line":192,"loc":{"start":{"line":192,"column":11},"end":{"line":192,"column":35}}},"18":{"name":"_getFullName","line":205,"loc":{"start":{"line":205,"column":11},"end":{"line":205,"column":45}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":564}},"2":{"start":{"line":3,"column":33},"end":{"line":3,"column":349}},"3":{"start":{"line":3,"column":76},"end":{"line":3,"column":347}},"4":{"start":{"line":3,"column":117},"end":{"line":3,"column":143}},"5":{"start":{"line":3,"column":144},"end":{"line":3,"column":199}},"6":{"start":{"line":3,"column":200},"end":{"line":3,"column":231}},"7":{"start":{"line":3,"column":232},"end":{"line":3,"column":286}},"8":{"start":{"line":3,"column":259},"end":{"line":3,"column":286}},"9":{"start":{"line":3,"column":287},"end":{"line":3,"column":345}},"10":{"start":{"line":3,"column":350},"end":{"line":3,"column":559}},"11":{"start":{"line":3,"column":407},"end":{"line":3,"column":475}},"12":{"start":{"line":3,"column":423},"end":{"line":3,"column":475}},"13":{"start":{"line":3,"column":476},"end":{"line":3,"column":536}},"14":{"start":{"line":3,"column":493},"end":{"line":3,"column":536}},"15":{"start":{"line":3,"column":537},"end":{"line":3,"column":556}},"16":{"start":{"line":11,"column":0},"end":{"line":11,"column":30}},"17":{"start":{"line":13,"column":0},"end":{"line":13,"column":43}},"18":{"start":{"line":15,"column":0},"end":{"line":15,"column":30}},"19":{"start":{"line":17,"column":0},"end":{"line":17,"column":43}},"20":{"start":{"line":19,"column":0},"end":{"line":19,"column":32}},"21":{"start":{"line":21,"column":0},"end":{"line":21,"column":45}},"22":{"start":{"line":23,"column":0},"end":{"line":23,"column":34}},"23":{"start":{"line":25,"column":0},"end":{"line":25,"column":47}},"24":{"start":{"line":27,"column":0},"end":{"line":27,"column":40}},"25":{"start":{"line":29,"column":0},"end":{"line":29,"column":53}},"26":{"start":{"line":31,"column":0},"end":{"line":31,"column":42}},"27":{"start":{"line":33,"column":0},"end":{"line":33,"column":55}},"28":{"start":{"line":35,"column":0},"end":{"line":35,"column":46}},"29":{"start":{"line":37,"column":0},"end":{"line":37,"column":59}},"30":{"start":{"line":39,"column":0},"end":{"line":39,"column":30}},"31":{"start":{"line":41,"column":0},"end":{"line":41,"column":43}},"32":{"start":{"line":43,"column":0},"end":{"line":43,"column":38}},"33":{"start":{"line":45,"column":0},"end":{"line":45,"column":51}},"34":{"start":{"line":47,"column":0},"end":{"line":47,"column":36}},"35":{"start":{"line":49,"column":0},"end":{"line":49,"column":49}},"36":{"start":{"line":51,"column":0},"end":{"line":51,"column":95}},"37":{"start":{"line":51,"column":39},"end":{"line":51,"column":93}},"38":{"start":{"line":53,"column":0},"end":{"line":53,"column":153}},"39":{"start":{"line":53,"column":50},"end":{"line":53,"column":151}},"40":{"start":{"line":53,"column":92},"end":{"line":53,"column":149}},"41":{"start":{"line":58,"column":0},"end":{"line":217,"column":4}},"42":{"start":{"line":65,"column":2},"end":{"line":72,"column":3}},"43":{"start":{"line":66,"column":4},"end":{"line":66,"column":111}},"44":{"start":{"line":68,"column":4},"end":{"line":68,"column":34}},"45":{"start":{"line":70,"column":4},"end":{"line":70,"column":29}},"46":{"start":{"line":71,"column":4},"end":{"line":71,"column":29}},"47":{"start":{"line":81,"column":2},"end":{"line":214,"column":6}},"48":{"start":{"line":84,"column":6},"end":{"line":84,"column":65}},"49":{"start":{"line":97,"column":6},"end":{"line":97,"column":67}},"50":{"start":{"line":109,"column":6},"end":{"line":109,"column":83}},"51":{"start":{"line":121,"column":6},"end":{"line":121,"column":69}},"52":{"start":{"line":134,"column":6},"end":{"line":134,"column":98}},"53":{"start":{"line":147,"column":6},"end":{"line":147,"column":93}},"54":{"start":{"line":159,"column":6},"end":{"line":159,"column":70}},"55":{"start":{"line":170,"column":6},"end":{"line":170,"column":66}},"56":{"start":{"line":181,"column":6},"end":{"line":181,"column":65}},"57":{"start":{"line":193,"column":6},"end":{"line":193,"column":68}},"58":{"start":{"line":206,"column":6},"end":{"line":206,"column":26}},"59":{"start":{"line":208,"column":6},"end":{"line":210,"column":7}},"60":{"start":{"line":209,"column":8},"end":{"line":209,"column":37}},"61":{"start":{"line":212,"column":6},"end":{"line":212,"column":22}},"62":{"start":{"line":216,"column":2},"end":{"line":216,"column":16}},"63":{"start":{"line":219,"column":0},"end":{"line":219,"column":24}}},"branchMap":{"1":{"line":3,"type":"binary-expr","locations":[{"start":{"line":3,"column":168},"end":{"line":3,"column":189}},{"start":{"line":3,"column":193},"end":{"line":3,"column":198}}]},"2":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":232},"end":{"line":3,"column":232}},{"start":{"line":3,"column":232},"end":{"line":3,"column":232}}]},"3":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":407},"end":{"line":3,"column":407}},{"start":{"line":3,"column":407},"end":{"line":3,"column":407}}]},"4":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":476},"end":{"line":3,"column":476}},{"start":{"line":3,"column":476},"end":{"line":3,"column":476}}]},"5":{"line":51,"type":"cond-expr","locations":[{"start":{"line":51,"column":70},"end":{"line":51,"column":73}},{"start":{"line":51,"column":76},"end":{"line":51,"column":92}}]},"6":{"line":51,"type":"binary-expr","locations":[{"start":{"line":51,"column":46},"end":{"line":51,"column":49}},{"start":{"line":51,"column":53},"end":{"line":51,"column":67}}]},"7":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":50},"end":{"line":53,"column":50}},{"start":{"line":53,"column":50},"end":{"line":53,"column":50}}]},"8":{"line":66,"type":"cond-expr","locations":[{"start":{"line":66,"column":71},"end":{"line":66,"column":83}},{"start":{"line":66,"column":86},"end":{"line":66,"column":110}}]},"9":{"line":66,"type":"binary-expr","locations":[{"start":{"line":66,"column":18},"end":{"line":66,"column":38}},{"start":{"line":66,"column":42},"end":{"line":66,"column":68}}]},"10":{"line":71,"type":"binary-expr","locations":[{"start":{"line":71,"column":18},"end":{"line":71,"column":22}},{"start":{"line":71,"column":26},"end":{"line":71,"column":28}}]},"11":{"line":208,"type":"if","locations":[{"start":{"line":208,"column":6},"end":{"line":208,"column":6}},{"start":{"line":208,"column":6},"end":{"line":208,"column":6}}]}},"code":["'use strict';","","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }file","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * @copyright  2013 Michael Aufreiter (Development Seed) and 2016 Yahoo Inclicense    Licensed under {@link https://spdx.org/licenses/BSD-3-Clause-Clear.html BSD-3-Clause-Clear}ithub.js is freely distributableeslint valid-jsdoc: [\"error\", {\"requireReturnDescription\": false}] */","","var _Gist = require('./Gist');","","var _Gist2 = _interopRequireDefault(_Gist);","","var _User = require('./User');","","var _User2 = _interopRequireDefault(_User);","","var _Issue = require('./Issue');","","var _Issue2 = _interopRequireDefault(_Issue);","","var _Search = require('./Search');","","var _Search2 = _interopRequireDefault(_Search);","","var _RateLimit = require('./RateLimit');","","var _RateLimit2 = _interopRequireDefault(_RateLimit);","","var _Repository = require('./Repository');","","var _Repository2 = _interopRequireDefault(_Repository);","","var _Organization = require('./Organization');","","var _Organization2 = _interopRequireDefault(_Organization);","","var _Team = require('./Team');","","var _Team2 = _interopRequireDefault(_Team);","","var _Markdown = require('./Markdown');","","var _Markdown2 = _interopRequireDefault(_Markdown);","","var _Project = require('./Project');","","var _Project2 = _interopRequireDefault(_Project);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }","","/**"," * GitHub encapsulates the functionality to create various API wrapper objects."," */","var GitHub = function () {","  /**","   * Create a new GitHub.","   * @param {Requestable.auth} [auth] - the credentials to authenticate to Github. If auth is","   *                                  not provided requests will be made unauthenticated","   * @param {string} [apiBase=https://api.github.com] - the base Github API URL","   */","  function GitHub(auth) {","    var apiBase = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'https://api.github.com';","","    _classCallCheck(this, GitHub);","","    this.__apiBase = apiBase;","    this.__auth = auth || {};","  }","","  /**","   * Create a new Gist wrapper","   * @param {number} [id] - the id for the gist, leave undefined when creating a new gist","   * @return {Gist}","   */","","","  _createClass(GitHub, [{","    key: 'getGist',","    value: function getGist(id) {","      return new _Gist2.default(id, this.__auth, this.__apiBase);","    }","","    /**","     * Create a new User wrapper","     * @param {string} [user] - the name of the user to get information about","     *                        leave undefined for the authenticated user","     * @return {User}","     */","","  }, {","    key: 'getUser',","    value: function getUser(user) {","      return new _User2.default(user, this.__auth, this.__apiBase);","    }","","    /**","     * Create a new Organization wrapper","     * @param {string} organization - the name of the organization","     * @return {Organization}","     */","","  }, {","    key: 'getOrganization',","    value: function getOrganization(organization) {","      return new _Organization2.default(organization, this.__auth, this.__apiBase);","    }","","    /**","     * create a new Team wrapper","     * @param {string} teamId - the name of the team","     * @return {team}","     */","","  }, {","    key: 'getTeam',","    value: function getTeam(teamId) {","      return new _Team2.default(teamId, this.__auth, this.__apiBase);","    }","","    /**","     * Create a new Repository wrapper","     * @param {string} user - the user who owns the respository","     * @param {string} repo - the name of the repository","     * @return {Repository}","     */","","  }, {","    key: 'getRepo',","    value: function getRepo(user, repo) {","      return new _Repository2.default(this._getFullName(user, repo), this.__auth, this.__apiBase);","    }","","    /**","     * Create a new Issue wrapper","     * @param {string} user - the user who owns the respository","     * @param {string} repo - the name of the repository","     * @return {Issue}","     */","","  }, {","    key: 'getIssues',","    value: function getIssues(user, repo) {","      return new _Issue2.default(this._getFullName(user, repo), this.__auth, this.__apiBase);","    }","","    /**","     * Create a new Search wrapper","     * @param {string} query - the query to search for","     * @return {Search}","     */","","  }, {","    key: 'search',","    value: function search(query) {","      return new _Search2.default(query, this.__auth, this.__apiBase);","    }","","    /**","     * Create a new RateLimit wrapper","     * @return {RateLimit}","     */","","  }, {","    key: 'getRateLimit',","    value: function getRateLimit() {","      return new _RateLimit2.default(this.__auth, this.__apiBase);","    }","","    /**","     * Create a new Markdown wrapper","     * @return {Markdown}","     */","","  }, {","    key: 'getMarkdown',","    value: function getMarkdown() {","      return new _Markdown2.default(this.__auth, this.__apiBase);","    }","","    /**","     * Create a new Project wrapper","     * @param {string} id - the id of the project","     * @return {Markdown}","     */","","  }, {","    key: 'getProject',","    value: function getProject(id) {","      return new _Project2.default(id, this.__auth, this.__apiBase);","    }","","    /**","     * Computes the full repository name","     * @param {string} user - the username (or the full name)","     * @param {string} repo - the repository name, must not be passed if `user` is the full name","     * @return {string} the repository's full name","     */","","  }, {","    key: '_getFullName',","    value: function _getFullName(user, repo) {","      var fullname = user;","","      if (repo) {","        fullname = user + '/' + repo;","      }","","      return fullname;","    }","  }]);","","  return GitHub;","}();","","module.exports = GitHub;","//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkdpdEh1Yi5qcyJdLCJuYW1lcyI6WyJHaXRIdWIiLCJhdXRoIiwiYXBpQmFzZSIsIl9fYXBpQmFzZSIsIl9fYXV0aCIsImlkIiwidXNlciIsIm9yZ2FuaXphdGlvbiIsInRlYW1JZCIsInJlcG8iLCJfZ2V0RnVsbE5hbWUiLCJxdWVyeSIsImZ1bGxuYW1lIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7cWpCQUFBOzs7Ozs7QUFNQTs7QUFFQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7Ozs7Ozs7QUFFQTs7O0lBR01BLE07QUFDSDs7Ozs7O0FBTUEsa0JBQVlDLElBQVosRUFBc0Q7QUFBQSxRQUFwQ0MsT0FBb0MsdUVBQTFCLHdCQUEwQjs7QUFBQTs7QUFDbkQsU0FBS0MsU0FBTCxHQUFpQkQsT0FBakI7QUFDQSxTQUFLRSxNQUFMLEdBQWNILFFBQVEsRUFBdEI7QUFDRjs7QUFFRDs7Ozs7Ozs7OzRCQUtRSSxFLEVBQUk7QUFDVCxhQUFPLG1CQUFTQSxFQUFULEVBQWEsS0FBS0QsTUFBbEIsRUFBMEIsS0FBS0QsU0FBL0IsQ0FBUDtBQUNGOztBQUVEOzs7Ozs7Ozs7NEJBTVFHLEksRUFBTTtBQUNYLGFBQU8sbUJBQVNBLElBQVQsRUFBZSxLQUFLRixNQUFwQixFQUE0QixLQUFLRCxTQUFqQyxDQUFQO0FBQ0Y7O0FBRUQ7Ozs7Ozs7O29DQUtnQkksWSxFQUFjO0FBQzNCLGFBQU8sMkJBQWlCQSxZQUFqQixFQUErQixLQUFLSCxNQUFwQyxFQUE0QyxLQUFLRCxTQUFqRCxDQUFQO0FBQ0Y7O0FBRUQ7Ozs7Ozs7OzRCQUtRSyxNLEVBQVE7QUFDYixhQUFPLG1CQUFTQSxNQUFULEVBQWlCLEtBQUtKLE1BQXRCLEVBQThCLEtBQUtELFNBQW5DLENBQVA7QUFDRjs7QUFFRDs7Ozs7Ozs7OzRCQU1RRyxJLEVBQU1HLEksRUFBTTtBQUNqQixhQUFPLHlCQUFlLEtBQUtDLFlBQUwsQ0FBa0JKLElBQWxCLEVBQXdCRyxJQUF4QixDQUFmLEVBQThDLEtBQUtMLE1BQW5ELEVBQTJELEtBQUtELFNBQWhFLENBQVA7QUFDRjs7QUFFRDs7Ozs7Ozs7OzhCQU1VRyxJLEVBQU1HLEksRUFBTTtBQUNuQixhQUFPLG9CQUFVLEtBQUtDLFlBQUwsQ0FBa0JKLElBQWxCLEVBQXdCRyxJQUF4QixDQUFWLEVBQXlDLEtBQUtMLE1BQTlDLEVBQXNELEtBQUtELFNBQTNELENBQVA7QUFDRjs7QUFFRDs7Ozs7Ozs7MkJBS09RLEssRUFBTztBQUNYLGFBQU8scUJBQVdBLEtBQVgsRUFBa0IsS0FBS1AsTUFBdkIsRUFBK0IsS0FBS0QsU0FBcEMsQ0FBUDtBQUNGOztBQUVEOzs7Ozs7O21DQUllO0FBQ1osYUFBTyx3QkFBYyxLQUFLQyxNQUFuQixFQUEyQixLQUFLRCxTQUFoQyxDQUFQO0FBQ0Y7O0FBRUQ7Ozs7Ozs7a0NBSWM7QUFDWCxhQUFPLHVCQUFhLEtBQUtDLE1BQWxCLEVBQTBCLEtBQUtELFNBQS9CLENBQVA7QUFDRjs7QUFFRDs7Ozs7Ozs7K0JBS1dFLEUsRUFBSTtBQUNaLGFBQU8sc0JBQVlBLEVBQVosRUFBZ0IsS0FBS0QsTUFBckIsRUFBNkIsS0FBS0QsU0FBbEMsQ0FBUDtBQUNGOztBQUVEOzs7Ozs7Ozs7aUNBTWFHLEksRUFBTUcsSSxFQUFNO0FBQ3RCLFVBQUlHLFdBQVdOLElBQWY7O0FBRUEsVUFBSUcsSUFBSixFQUFVO0FBQ1BHLG1CQUFjTixJQUFkLFNBQXNCRyxJQUF0QjtBQUNGOztBQUVELGFBQU9HLFFBQVA7QUFDRjs7Ozs7O0FBR0pDLE9BQU9DLE9BQVAsR0FBaUJkLE1BQWpCIiwiZmlsZSI6IkdpdEh1Yi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGZpbGVcbiAqIEBjb3B5cmlnaHQgIDIwMTMgTWljaGFlbCBBdWZyZWl0ZXIgKERldmVsb3BtZW50IFNlZWQpIGFuZCAyMDE2IFlhaG9vIEluYy5cbiAqIEBsaWNlbnNlICAgIExpY2Vuc2VkIHVuZGVyIHtAbGluayBodHRwczovL3NwZHgub3JnL2xpY2Vuc2VzL0JTRC0zLUNsYXVzZS1DbGVhci5odG1sIEJTRC0zLUNsYXVzZS1DbGVhcn0uXG4gKiAgICAgICAgICAgICBHaXRodWIuanMgaXMgZnJlZWx5IGRpc3RyaWJ1dGFibGUuXG4gKi9cbi8qIGVzbGludCB2YWxpZC1qc2RvYzogW1wiZXJyb3JcIiwge1wicmVxdWlyZVJldHVybkRlc2NyaXB0aW9uXCI6IGZhbHNlfV0gKi9cblxuaW1wb3J0IEdpc3QgZnJvbSAnLi9HaXN0JztcbmltcG9ydCBVc2VyIGZyb20gJy4vVXNlcic7XG5pbXBvcnQgSXNzdWUgZnJvbSAnLi9Jc3N1ZSc7XG5pbXBvcnQgU2VhcmNoIGZyb20gJy4vU2VhcmNoJztcbmltcG9ydCBSYXRlTGltaXQgZnJvbSAnLi9SYXRlTGltaXQnO1xuaW1wb3J0IFJlcG9zaXRvcnkgZnJvbSAnLi9SZXBvc2l0b3J5JztcbmltcG9ydCBPcmdhbml6YXRpb24gZnJvbSAnLi9Pcmdhbml6YXRpb24nO1xuaW1wb3J0IFRlYW0gZnJvbSAnLi9UZWFtJztcbmltcG9ydCBNYXJrZG93biBmcm9tICcuL01hcmtkb3duJztcbmltcG9ydCBQcm9qZWN0IGZyb20gJy4vUHJvamVjdCc7XG5cbi8qKlxuICogR2l0SHViIGVuY2Fwc3VsYXRlcyB0aGUgZnVuY3Rpb25hbGl0eSB0byBjcmVhdGUgdmFyaW91cyBBUEkgd3JhcHBlciBvYmplY3RzLlxuICovXG5jbGFzcyBHaXRIdWIge1xuICAgLyoqXG4gICAgKiBDcmVhdGUgYSBuZXcgR2l0SHViLlxuICAgICogQHBhcmFtIHtSZXF1ZXN0YWJsZS5hdXRofSBbYXV0aF0gLSB0aGUgY3JlZGVudGlhbHMgdG8gYXV0aGVudGljYXRlIHRvIEdpdGh1Yi4gSWYgYXV0aCBpc1xuICAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbm90IHByb3ZpZGVkIHJlcXVlc3RzIHdpbGwgYmUgbWFkZSB1bmF1dGhlbnRpY2F0ZWRcbiAgICAqIEBwYXJhbSB7c3RyaW5nfSBbYXBpQmFzZT1odHRwczovL2FwaS5naXRodWIuY29tXSAtIHRoZSBiYXNlIEdpdGh1YiBBUEkgVVJMXG4gICAgKi9cbiAgIGNvbnN0cnVjdG9yKGF1dGgsIGFwaUJhc2UgPSAnaHR0cHM6Ly9hcGkuZ2l0aHViLmNvbScpIHtcbiAgICAgIHRoaXMuX19hcGlCYXNlID0gYXBpQmFzZTtcbiAgICAgIHRoaXMuX19hdXRoID0gYXV0aCB8fCB7fTtcbiAgIH1cblxuICAgLyoqXG4gICAgKiBDcmVhdGUgYSBuZXcgR2lzdCB3cmFwcGVyXG4gICAgKiBAcGFyYW0ge251bWJlcn0gW2lkXSAtIHRoZSBpZCBmb3IgdGhlIGdpc3QsIGxlYXZlIHVuZGVmaW5lZCB3aGVuIGNyZWF0aW5nIGEgbmV3IGdpc3RcbiAgICAqIEByZXR1cm4ge0dpc3R9XG4gICAgKi9cbiAgIGdldEdpc3QoaWQpIHtcbiAgICAgIHJldHVybiBuZXcgR2lzdChpZCwgdGhpcy5fX2F1dGgsIHRoaXMuX19hcGlCYXNlKTtcbiAgIH1cblxuICAgLyoqXG4gICAgKiBDcmVhdGUgYSBuZXcgVXNlciB3cmFwcGVyXG4gICAgKiBAcGFyYW0ge3N0cmluZ30gW3VzZXJdIC0gdGhlIG5hbWUgb2YgdGhlIHVzZXIgdG8gZ2V0IGluZm9ybWF0aW9uIGFib3V0XG4gICAgKiAgICAgICAgICAgICAgICAgICAgICAgIGxlYXZlIHVuZGVmaW5lZCBmb3IgdGhlIGF1dGhlbnRpY2F0ZWQgdXNlclxuICAgICogQHJldHVybiB7VXNlcn1cbiAgICAqL1xuICAgZ2V0VXNlcih1c2VyKSB7XG4gICAgICByZXR1cm4gbmV3IFVzZXIodXNlciwgdGhpcy5fX2F1dGgsIHRoaXMuX19hcGlCYXNlKTtcbiAgIH1cblxuICAgLyoqXG4gICAgKiBDcmVhdGUgYSBuZXcgT3JnYW5pemF0aW9uIHdyYXBwZXJcbiAgICAqIEBwYXJhbSB7c3RyaW5nfSBvcmdhbml6YXRpb24gLSB0aGUgbmFtZSBvZiB0aGUgb3JnYW5pemF0aW9uXG4gICAgKiBAcmV0dXJuIHtPcmdhbml6YXRpb259XG4gICAgKi9cbiAgIGdldE9yZ2FuaXphdGlvbihvcmdhbml6YXRpb24pIHtcbiAgICAgIHJldHVybiBuZXcgT3JnYW5pemF0aW9uKG9yZ2FuaXphdGlvbiwgdGhpcy5fX2F1dGgsIHRoaXMuX19hcGlCYXNlKTtcbiAgIH1cblxuICAgLyoqXG4gICAgKiBjcmVhdGUgYSBuZXcgVGVhbSB3cmFwcGVyXG4gICAgKiBAcGFyYW0ge3N0cmluZ30gdGVhbUlkIC0gdGhlIG5hbWUgb2YgdGhlIHRlYW1cbiAgICAqIEByZXR1cm4ge3RlYW19XG4gICAgKi9cbiAgIGdldFRlYW0odGVhbUlkKSB7XG4gICAgICByZXR1cm4gbmV3IFRlYW0odGVhbUlkLCB0aGlzLl9fYXV0aCwgdGhpcy5fX2FwaUJhc2UpO1xuICAgfVxuXG4gICAvKipcbiAgICAqIENyZWF0ZSBhIG5ldyBSZXBvc2l0b3J5IHdyYXBwZXJcbiAgICAqIEBwYXJhbSB7c3RyaW5nfSB1c2VyIC0gdGhlIHVzZXIgd2hvIG93bnMgdGhlIHJlc3Bvc2l0b3J5XG4gICAgKiBAcGFyYW0ge3N0cmluZ30gcmVwbyAtIHRoZSBuYW1lIG9mIHRoZSByZXBvc2l0b3J5XG4gICAgKiBAcmV0dXJuIHtSZXBvc2l0b3J5fVxuICAgICovXG4gICBnZXRSZXBvKHVzZXIsIHJlcG8pIHtcbiAgICAgIHJldHVybiBuZXcgUmVwb3NpdG9yeSh0aGlzLl9nZXRGdWxsTmFtZSh1c2VyLCByZXBvKSwgdGhpcy5fX2F1dGgsIHRoaXMuX19hcGlCYXNlKTtcbiAgIH1cblxuICAgLyoqXG4gICAgKiBDcmVhdGUgYSBuZXcgSXNzdWUgd3JhcHBlclxuICAgICogQHBhcmFtIHtzdHJpbmd9IHVzZXIgLSB0aGUgdXNlciB3aG8gb3ducyB0aGUgcmVzcG9zaXRvcnlcbiAgICAqIEBwYXJhbSB7c3RyaW5nfSByZXBvIC0gdGhlIG5hbWUgb2YgdGhlIHJlcG9zaXRvcnlcbiAgICAqIEByZXR1cm4ge0lzc3VlfVxuICAgICovXG4gICBnZXRJc3N1ZXModXNlciwgcmVwbykge1xuICAgICAgcmV0dXJuIG5ldyBJc3N1ZSh0aGlzLl9nZXRGdWxsTmFtZSh1c2VyLCByZXBvKSwgdGhpcy5fX2F1dGgsIHRoaXMuX19hcGlCYXNlKTtcbiAgIH1cblxuICAgLyoqXG4gICAgKiBDcmVhdGUgYSBuZXcgU2VhcmNoIHdyYXBwZXJcbiAgICAqIEBwYXJhbSB7c3RyaW5nfSBxdWVyeSAtIHRoZSBxdWVyeSB0byBzZWFyY2ggZm9yXG4gICAgKiBAcmV0dXJuIHtTZWFyY2h9XG4gICAgKi9cbiAgIHNlYXJjaChxdWVyeSkge1xuICAgICAgcmV0dXJuIG5ldyBTZWFyY2gocXVlcnksIHRoaXMuX19hdXRoLCB0aGlzLl9fYXBpQmFzZSk7XG4gICB9XG5cbiAgIC8qKlxuICAgICogQ3JlYXRlIGEgbmV3IFJhdGVMaW1pdCB3cmFwcGVyXG4gICAgKiBAcmV0dXJuIHtSYXRlTGltaXR9XG4gICAgKi9cbiAgIGdldFJhdGVMaW1pdCgpIHtcbiAgICAgIHJldHVybiBuZXcgUmF0ZUxpbWl0KHRoaXMuX19hdXRoLCB0aGlzLl9fYXBpQmFzZSk7XG4gICB9XG5cbiAgIC8qKlxuICAgICogQ3JlYXRlIGEgbmV3IE1hcmtkb3duIHdyYXBwZXJcbiAgICAqIEByZXR1cm4ge01hcmtkb3dufVxuICAgICovXG4gICBnZXRNYXJrZG93bigpIHtcbiAgICAgIHJldHVybiBuZXcgTWFya2Rvd24odGhpcy5fX2F1dGgsIHRoaXMuX19hcGlCYXNlKTtcbiAgIH1cblxuICAgLyoqXG4gICAgKiBDcmVhdGUgYSBuZXcgUHJvamVjdCB3cmFwcGVyXG4gICAgKiBAcGFyYW0ge3N0cmluZ30gaWQgLSB0aGUgaWQgb2YgdGhlIHByb2plY3RcbiAgICAqIEByZXR1cm4ge01hcmtkb3dufVxuICAgICovXG4gICBnZXRQcm9qZWN0KGlkKSB7XG4gICAgICByZXR1cm4gbmV3IFByb2plY3QoaWQsIHRoaXMuX19hdXRoLCB0aGlzLl9fYXBpQmFzZSk7XG4gICB9XG5cbiAgIC8qKlxuICAgICogQ29tcHV0ZXMgdGhlIGZ1bGwgcmVwb3NpdG9yeSBuYW1lXG4gICAgKiBAcGFyYW0ge3N0cmluZ30gdXNlciAtIHRoZSB1c2VybmFtZSAob3IgdGhlIGZ1bGwgbmFtZSlcbiAgICAqIEBwYXJhbSB7c3RyaW5nfSByZXBvIC0gdGhlIHJlcG9zaXRvcnkgbmFtZSwgbXVzdCBub3QgYmUgcGFzc2VkIGlmIGB1c2VyYCBpcyB0aGUgZnVsbCBuYW1lXG4gICAgKiBAcmV0dXJuIHtzdHJpbmd9IHRoZSByZXBvc2l0b3J5J3MgZnVsbCBuYW1lXG4gICAgKi9cbiAgIF9nZXRGdWxsTmFtZSh1c2VyLCByZXBvKSB7XG4gICAgICBsZXQgZnVsbG5hbWUgPSB1c2VyO1xuXG4gICAgICBpZiAocmVwbykge1xuICAgICAgICAgZnVsbG5hbWUgPSBgJHt1c2VyfS8ke3JlcG99YDtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGZ1bGxuYW1lO1xuICAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IEdpdEh1YjtcbiJdfQ==","//# sourceMappingURL=GitHub.js.map",""],"l":{"3":11,"11":1,"13":1,"15":1,"17":1,"19":1,"21":1,"23":1,"25":1,"27":1,"29":1,"31":1,"33":1,"35":1,"37":1,"39":1,"41":1,"43":1,"45":1,"47":1,"49":1,"51":10,"53":1,"58":1,"65":1,"66":0,"68":0,"70":0,"71":0,"81":1,"84":0,"97":0,"109":0,"121":0,"134":0,"147":0,"159":0,"170":0,"181":0,"193":0,"206":0,"208":0,"209":0,"212":0,"216":1,"219":1}},"/home/travis/build/npmtest/node-npmtest-github-api/node_modules/github-api/dist/components/Gist.js":{"path":"/home/travis/build/npmtest/node-npmtest-github-api/node_modules/github-api/dist/components/Gist.js","s":{"1":1,"2":1,"3":1,"4":13,"5":13,"6":13,"7":13,"8":13,"9":13,"10":1,"11":1,"12":1,"13":1,"14":0,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":0,"22":0,"23":1,"24":0,"25":0,"26":0,"27":1,"28":1,"29":0,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":0,"37":0,"38":0,"39":0,"40":1,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":1,"58":1},"b":{"1":[13,13],"2":[13,0],"3":[1,0],"4":[0,1],"5":[0,1],"6":[1,1],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0,0],"11":[0,1],"12":[1,0],"13":[1,1],"14":[1,0],"15":[1,0],"16":[0,0]},"f":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0},"fnMap":{"1":{"name":"(anonymous_1)","line":3,"loc":{"start":{"line":3,"column":19},"end":{"line":3,"column":31}}},"2":{"name":"defineProperties","line":3,"loc":{"start":{"line":3,"column":33},"end":{"line":3,"column":74}}},"3":{"name":"(anonymous_3)","line":3,"loc":{"start":{"line":3,"column":357},"end":{"line":3,"column":405}}},"4":{"name":"_interopRequireDefault","line":9,"loc":{"start":{"line":9,"column":0},"end":{"line":9,"column":37}}},"5":{"name":"_classCallCheck","line":11,"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":48}}},"6":{"name":"_possibleConstructorReturn","line":13,"loc":{"start":{"line":13,"column":0},"end":{"line":13,"column":48}}},"7":{"name":"_inherits","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":41}}},"8":{"name":"(anonymous_8)","line":25,"loc":{"start":{"line":25,"column":11},"end":{"line":25,"column":35}}},"9":{"name":"Gist","line":34,"loc":{"start":{"line":34,"column":2},"end":{"line":34,"column":35}}},"10":{"name":"read","line":53,"loc":{"start":{"line":53,"column":11},"end":{"line":53,"column":29}}},"11":{"name":"create","line":67,"loc":{"start":{"line":67,"column":11},"end":{"line":67,"column":37}}},"12":{"name":"(anonymous_12)","line":70,"loc":{"start":{"line":70,"column":60},"end":{"line":70,"column":80}}},"13":{"name":"_delete","line":85,"loc":{"start":{"line":85,"column":11},"end":{"line":85,"column":32}}},"14":{"name":"fork","line":98,"loc":{"start":{"line":98,"column":11},"end":{"line":98,"column":29}}},"15":{"name":"update","line":112,"loc":{"start":{"line":112,"column":11},"end":{"line":112,"column":37}}},"16":{"name":"star","line":125,"loc":{"start":{"line":125,"column":11},"end":{"line":125,"column":29}}},"17":{"name":"unstar","line":138,"loc":{"start":{"line":138,"column":11},"end":{"line":138,"column":31}}},"18":{"name":"isStarred","line":151,"loc":{"start":{"line":151,"column":11},"end":{"line":151,"column":34}}},"19":{"name":"listComments","line":164,"loc":{"start":{"line":164,"column":11},"end":{"line":164,"column":37}}},"20":{"name":"getComment","line":178,"loc":{"start":{"line":178,"column":11},"end":{"line":178,"column":44}}},"21":{"name":"createComment","line":192,"loc":{"start":{"line":192,"column":11},"end":{"line":192,"column":47}}},"22":{"name":"editComment","line":207,"loc":{"start":{"line":207,"column":11},"end":{"line":207,"column":51}}},"23":{"name":"deleteComment","line":221,"loc":{"start":{"line":221,"column":11},"end":{"line":221,"column":47}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":564}},"2":{"start":{"line":3,"column":33},"end":{"line":3,"column":349}},"3":{"start":{"line":3,"column":76},"end":{"line":3,"column":347}},"4":{"start":{"line":3,"column":117},"end":{"line":3,"column":143}},"5":{"start":{"line":3,"column":144},"end":{"line":3,"column":199}},"6":{"start":{"line":3,"column":200},"end":{"line":3,"column":231}},"7":{"start":{"line":3,"column":232},"end":{"line":3,"column":286}},"8":{"start":{"line":3,"column":259},"end":{"line":3,"column":286}},"9":{"start":{"line":3,"column":287},"end":{"line":3,"column":345}},"10":{"start":{"line":3,"column":350},"end":{"line":3,"column":559}},"11":{"start":{"line":3,"column":407},"end":{"line":3,"column":475}},"12":{"start":{"line":3,"column":423},"end":{"line":3,"column":475}},"13":{"start":{"line":3,"column":476},"end":{"line":3,"column":536}},"14":{"start":{"line":3,"column":493},"end":{"line":3,"column":536}},"15":{"start":{"line":3,"column":537},"end":{"line":3,"column":556}},"16":{"start":{"line":5,"column":0},"end":{"line":5,"column":45}},"17":{"start":{"line":7,"column":0},"end":{"line":7,"column":58}},"18":{"start":{"line":9,"column":0},"end":{"line":9,"column":95}},"19":{"start":{"line":9,"column":39},"end":{"line":9,"column":93}},"20":{"start":{"line":11,"column":0},"end":{"line":11,"column":153}},"21":{"start":{"line":11,"column":50},"end":{"line":11,"column":151}},"22":{"start":{"line":11,"column":92},"end":{"line":11,"column":149}},"23":{"start":{"line":13,"column":0},"end":{"line":13,"column":240}},"24":{"start":{"line":13,"column":50},"end":{"line":13,"column":151}},"25":{"start":{"line":13,"column":63},"end":{"line":13,"column":149}},"26":{"start":{"line":13,"column":152},"end":{"line":13,"column":238}},"27":{"start":{"line":15,"column":0},"end":{"line":15,"column":494}},"28":{"start":{"line":15,"column":43},"end":{"line":15,"column":208}},"29":{"start":{"line":15,"column":106},"end":{"line":15,"column":206}},"30":{"start":{"line":15,"column":209},"end":{"line":15,"column":373}},"31":{"start":{"line":15,"column":374},"end":{"line":15,"column":492}},"32":{"start":{"line":15,"column":390},"end":{"line":15,"column":492}},"33":{"start":{"line":25,"column":0},"end":{"line":227,"column":25}},"34":{"start":{"line":26,"column":2},"end":{"line":26,"column":32}},"35":{"start":{"line":34,"column":2},"end":{"line":41,"column":3}},"36":{"start":{"line":35,"column":4},"end":{"line":35,"column":32}},"37":{"start":{"line":37,"column":4},"end":{"line":37,"column":124}},"38":{"start":{"line":39,"column":4},"end":{"line":39,"column":20}},"39":{"start":{"line":40,"column":4},"end":{"line":40,"column":17}},"40":{"start":{"line":51,"column":2},"end":{"line":224,"column":6}},"41":{"start":{"line":54,"column":6},"end":{"line":54,"column":67}},"42":{"start":{"line":68,"column":6},"end":{"line":68,"column":24}},"43":{"start":{"line":70,"column":6},"end":{"line":73,"column":9}},"44":{"start":{"line":71,"column":8},"end":{"line":71,"column":39}},"45":{"start":{"line":72,"column":8},"end":{"line":72,"column":24}},"46":{"start":{"line":86,"column":6},"end":{"line":86,"column":70}},"47":{"start":{"line":99,"column":6},"end":{"line":99,"column":79}},"48":{"start":{"line":113,"column":6},"end":{"line":113,"column":69}},"49":{"start":{"line":126,"column":6},"end":{"line":126,"column":77}},"50":{"start":{"line":139,"column":6},"end":{"line":139,"column":80}},"51":{"start":{"line":152,"column":6},"end":{"line":152,"column":78}},"52":{"start":{"line":165,"column":6},"end":{"line":165,"column":82}},"53":{"start":{"line":179,"column":6},"end":{"line":179,"column":92}},"54":{"start":{"line":193,"column":6},"end":{"line":193,"column":95}},"55":{"start":{"line":208,"column":6},"end":{"line":208,"column":104}},"56":{"start":{"line":222,"column":6},"end":{"line":222,"column":95}},"57":{"start":{"line":226,"column":2},"end":{"line":226,"column":14}},"58":{"start":{"line":229,"column":0},"end":{"line":229,"column":22}}},"branchMap":{"1":{"line":3,"type":"binary-expr","locations":[{"start":{"line":3,"column":168},"end":{"line":3,"column":189}},{"start":{"line":3,"column":193},"end":{"line":3,"column":198}}]},"2":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":232},"end":{"line":3,"column":232}},{"start":{"line":3,"column":232},"end":{"line":3,"column":232}}]},"3":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":407},"end":{"line":3,"column":407}},{"start":{"line":3,"column":407},"end":{"line":3,"column":407}}]},"4":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":476},"end":{"line":3,"column":476}},{"start":{"line":3,"column":476},"end":{"line":3,"column":476}}]},"5":{"line":9,"type":"cond-expr","locations":[{"start":{"line":9,"column":70},"end":{"line":9,"column":73}},{"start":{"line":9,"column":76},"end":{"line":9,"column":92}}]},"6":{"line":9,"type":"binary-expr","locations":[{"start":{"line":9,"column":46},"end":{"line":9,"column":49}},{"start":{"line":9,"column":53},"end":{"line":9,"column":67}}]},"7":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":50},"end":{"line":11,"column":50}},{"start":{"line":11,"column":50},"end":{"line":11,"column":50}}]},"8":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":50},"end":{"line":13,"column":50}},{"start":{"line":13,"column":50},"end":{"line":13,"column":50}}]},"9":{"line":13,"type":"cond-expr","locations":[{"start":{"line":13,"column":226},"end":{"line":13,"column":230}},{"start":{"line":13,"column":233},"end":{"line":13,"column":237}}]},"10":{"line":13,"type":"binary-expr","locations":[{"start":{"line":13,"column":159},"end":{"line":13,"column":163}},{"start":{"line":13,"column":168},"end":{"line":13,"column":192}},{"start":{"line":13,"column":196},"end":{"line":13,"column":222}}]},"11":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":43},"end":{"line":15,"column":43}},{"start":{"line":15,"column":43},"end":{"line":15,"column":43}}]},"12":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":47},"end":{"line":15,"column":79}},{"start":{"line":15,"column":83},"end":{"line":15,"column":102}}]},"13":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":244},"end":{"line":15,"column":254}},{"start":{"line":15,"column":258},"end":{"line":15,"column":278}}]},"14":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":374},"end":{"line":15,"column":374}},{"start":{"line":15,"column":374},"end":{"line":15,"column":374}}]},"15":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":414},"end":{"line":15,"column":457}},{"start":{"line":15,"column":460},"end":{"line":15,"column":491}}]},"16":{"line":37,"type":"binary-expr","locations":[{"start":{"line":37,"column":50},"end":{"line":37,"column":64}},{"start":{"line":37,"column":68},"end":{"line":37,"column":95}}]}},"code":["'use strict';","","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();","","var _Requestable2 = require('./Requestable');","","var _Requestable3 = _interopRequireDefault(_Requestable2);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }","","function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }","","function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }filecopyright  2013 Michael Aufreiter (Development Seed) and 2016 Yahoo Inclicense    Licensed under {@link https://spdx.org/licenses/BSD-3-Clause-Clear.html BSD-3-Clause-Clear}ithub.js is freely distributableist can retrieve and modify gists."," */","var Gist = function (_Requestable) {","  _inherits(Gist, _Requestable);","","  /**","   * Create a Gist.","   * @param {string} id - the id of the gist (not required when creating a gist)","   * @param {Requestable.auth} [auth] - information required to authenticate to Github","   * @param {string} [apiBase=https://api.github.com] - the base Github API URL","   */","  function Gist(id, auth, apiBase) {","    _classCallCheck(this, Gist);","","    var _this = _possibleConstructorReturn(this, (Gist.__proto__ || Object.getPrototypeOf(Gist)).call(this, auth, apiBase));","","    _this.__id = id;","    return _this;","  }","","  /**","   * Fetch a gist.","   * @see https://developer.github.com/v3/gists/#get-a-single-gist","   * @param {Requestable.callback} [cb] - will receive the gist","   * @return {Promise} - the Promise for the http request","   */","","","  _createClass(Gist, [{","    key: 'read',","    value: function read(cb) {","      return this._request('GET', '/gists/' + this.__id, null, cb);","    }","","    /**","     * Create a new gist.","     * @see https://developer.github.com/v3/gists/#create-a-gist","     * @param {Object} gist - the data for the new gist","     * @param {Requestable.callback} [cb] - will receive the new gist upon creation","     * @return {Promise} - the Promise for the http request","     */","","  }, {","    key: 'create',","    value: function create(gist, cb) {","      var _this2 = this;","","      return this._request('POST', '/gists', gist, cb).then(function (response) {","        _this2.__id = response.data.id;","        return response;","      });","    }","","    /**","     * Delete a gist.","     * @see https://developer.github.com/v3/gists/#delete-a-gist","     * @param {Requestable.callback} [cb] - will receive true if the request succeeds","     * @return {Promise} - the Promise for the http request","     */","","  }, {","    key: 'delete',","    value: function _delete(cb) {","      return this._request('DELETE', '/gists/' + this.__id, null, cb);","    }","","    /**","     * Fork a gist.","     * @see https://developer.github.com/v3/gists/#fork-a-gist","     * @param {Requestable.callback} [cb] - the function that will receive the gist","     * @return {Promise} - the Promise for the http request","     */","","  }, {","    key: 'fork',","    value: function fork(cb) {","      return this._request('POST', '/gists/' + this.__id + '/forks', null, cb);","    }","","    /**","     * Update a gist.","     * @see https://developer.github.com/v3/gists/#edit-a-gist","     * @param {Object} gist - the new data for the gist","     * @param {Requestable.callback} [cb] - the function that receives the API result","     * @return {Promise} - the Promise for the http request","     */","","  }, {","    key: 'update',","    value: function update(gist, cb) {","      return this._request('PATCH', '/gists/' + this.__id, gist, cb);","    }","","    /**","     * Star a gist.","     * @see https://developer.github.com/v3/gists/#star-a-gist","     * @param {Requestable.callback} [cb] - will receive true if the request is successful","     * @return {Promise} - the Promise for the http request","     */","","  }, {","    key: 'star',","    value: function star(cb) {","      return this._request('PUT', '/gists/' + this.__id + '/star', null, cb);","    }","","    /**","     * Unstar a gist.","     * @see https://developer.github.com/v3/gists/#unstar-a-gist","     * @param {Requestable.callback} [cb] - will receive true if the request is successful","     * @return {Promise} - the Promise for the http request","     */","","  }, {","    key: 'unstar',","    value: function unstar(cb) {","      return this._request('DELETE', '/gists/' + this.__id + '/star', null, cb);","    }","","    /**","     * Check if a gist is starred by the user.","     * @see https://developer.github.com/v3/gists/#check-if-a-gist-is-starred","     * @param {Requestable.callback} [cb] - will receive true if the gist is starred and false if the gist is not starred","     * @return {Promise} - the Promise for the http request","     */","","  }, {","    key: 'isStarred',","    value: function isStarred(cb) {","      return this._request204or404('/gists/' + this.__id + '/star', null, cb);","    }","","    /**","     * List the gist's comments","     * @see https://developer.github.com/v3/gists/comments/#list-comments-on-a-gist","     * @param {Requestable.callback} [cb] - will receive the array of comments","     * @return {Promise} - the promise for the http request","     */","","  }, {","    key: 'listComments',","    value: function listComments(cb) {","      return this._requestAllPages('/gists/' + this.__id + '/comments', null, cb);","    }","","    /**","     * Fetch one of the gist's comments","     * @see https://developer.github.com/v3/gists/comments/#get-a-single-comment","     * @param {number} comment - the id of the comment","     * @param {Requestable.callback} [cb] - will receive the comment","     * @return {Promise} - the Promise for the http request","     */","","  }, {","    key: 'getComment',","    value: function getComment(comment, cb) {","      return this._request('GET', '/gists/' + this.__id + '/comments/' + comment, null, cb);","    }","","    /**","     * Comment on a gist","     * @see https://developer.github.com/v3/gists/comments/#create-a-comment","     * @param {string} comment - the comment to add","     * @param {Requestable.callback} [cb] - the function that receives the API result","     * @return {Promise} - the Promise for the http request","     */","","  }, {","    key: 'createComment',","    value: function createComment(comment, cb) {","      return this._request('POST', '/gists/' + this.__id + '/comments', { body: comment }, cb);","    }","","    /**","     * Edit a comment on the gist","     * @see https://developer.github.com/v3/gists/comments/#edit-a-comment","     * @param {number} comment - the id of the comment","     * @param {string} body - the new comment","     * @param {Requestable.callback} [cb] - will receive the modified comment","     * @return {Promise} - the promise for the http request","     */","","  }, {","    key: 'editComment',","    value: function editComment(comment, body, cb) {","      return this._request('PATCH', '/gists/' + this.__id + '/comments/' + comment, { body: body }, cb);","    }","","    /**","     * Delete a comment on the gist.","     * @see https://developer.github.com/v3/gists/comments/#delete-a-comment","     * @param {number} comment - the id of the comment","     * @param {Requestable.callback} [cb] - will receive true if the request succeeds","     * @return {Promise} - the Promise for the http request","     */","","  }, {","    key: 'deleteComment',","    value: function deleteComment(comment, cb) {","      return this._request('DELETE', '/gists/' + this.__id + '/comments/' + comment, null, cb);","    }","  }]);","","  return Gist;","}(_Requestable3.default);","","module.exports = Gist;","//# sourceMappingURL=data:application/json;base64,","//# sourceMappingURL=Gist.js.map",""],"l":{"3":13,"5":1,"7":1,"9":1,"11":1,"13":1,"15":1,"25":1,"26":1,"34":1,"35":0,"37":0,"39":0,"40":0,"51":1,"54":0,"68":0,"70":0,"71":0,"72":0,"86":0,"99":0,"113":0,"126":0,"139":0,"152":0,"165":0,"179":0,"193":0,"208":0,"222":0,"226":1,"229":1}},"/home/travis/build/npmtest/node-npmtest-github-api/node_modules/github-api/dist/components/Requestable.js":{"path":"/home/travis/build/npmtest/node-npmtest-github-api/node_modules/github-api/dist/components/Requestable.js","s":{"1":1,"2":0,"3":0,"4":1,"5":1,"6":1,"7":7,"8":7,"9":7,"10":7,"11":7,"12":7,"13":1,"14":1,"15":1,"16":1,"17":0,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":2,"26":1,"27":0,"28":0,"29":0,"30":0,"31":0,"32":1,"33":0,"34":0,"35":1,"36":0,"37":0,"38":0,"39":1,"40":1,"41":0,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":1,"57":1,"58":1,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":1,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":1,"143":1,"144":1,"145":1,"146":0,"147":1,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":1,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0},"b":{"1":[1,0],"2":[1,1],"3":[0,0],"4":[0,0,0,0],"5":[7,7],"6":[7,0],"7":[1,0],"8":[0,1],"9":[0,2],"10":[2,2],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0,0],"16":[0,1],"17":[1,0],"18":[1,1],"19":[1,0],"20":[1,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0]},"f":{"1":0,"2":0,"3":1,"4":1,"5":1,"6":2,"7":0,"8":0,"9":0,"10":1,"11":1,"12":0,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0},"fnMap":{"1":{"name":"(anonymous_1)","line":3,"loc":{"start":{"line":3,"column":84},"end":{"line":3,"column":99}}},"2":{"name":"(anonymous_2)","line":3,"loc":{"start":{"line":3,"column":124},"end":{"line":3,"column":139}}},"3":{"name":"(anonymous_3)","line":5,"loc":{"start":{"line":5,"column":19},"end":{"line":5,"column":31}}},"4":{"name":"defineProperties","line":5,"loc":{"start":{"line":5,"column":33},"end":{"line":5,"column":74}}},"5":{"name":"(anonymous_5)","line":5,"loc":{"start":{"line":5,"column":357},"end":{"line":5,"column":405}}},"6":{"name":"_interopRequireDefault","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":37}}},"7":{"name":"_toConsumableArray","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":33}}},"8":{"name":"_classCallCheck","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":48}}},"9":{"name":"_possibleConstructorReturn","line":23,"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":48}}},"10":{"name":"_inherits","line":25,"loc":{"start":{"line":25,"column":0},"end":{"line":25,"column":41}}},"11":{"name":"(anonymous_11)","line":38,"loc":{"start":{"line":38,"column":20},"end":{"line":38,"column":38}}},"12":{"name":"ResponseError","line":47,"loc":{"start":{"line":47,"column":3},"end":{"line":47,"column":51}}},"13":{"name":"(anonymous_13)","line":67,"loc":{"start":{"line":67,"column":18},"end":{"line":67,"column":30}}},"14":{"name":"Requestable","line":82,"loc":{"start":{"line":82,"column":3},"end":{"line":82,"column":53}}},"15":{"name":"__getURL","line":110,"loc":{"start":{"line":110,"column":13},"end":{"line":110,"column":37}}},"16":{"name":"__getRequestHeaders","line":131,"loc":{"start":{"line":131,"column":13},"end":{"line":131,"column":61}}},"17":{"name":"_getOptionsWithDefaults","line":158,"loc":{"start":{"line":158,"column":13},"end":{"line":158,"column":48}}},"18":{"name":"_dateToISO","line":178,"loc":{"start":{"line":178,"column":13},"end":{"line":178,"column":39}}},"19":{"name":"_request","line":207,"loc":{"start":{"line":207,"column":13},"end":{"line":207,"column":60}}},"20":{"name":"(anonymous_20)","line":237,"loc":{"start":{"line":237,"column":32},"end":{"line":237,"column":52}}},"21":{"name":"_request204or404","line":264,"loc":{"start":{"line":264,"column":13},"end":{"line":264,"column":55}}},"22":{"name":"success","line":267,"loc":{"start":{"line":267,"column":55},"end":{"line":267,"column":82}}},"23":{"name":"failure","line":272,"loc":{"start":{"line":272,"column":12},"end":{"line":272,"column":39}}},"24":{"name":"_requestAllPages","line":300,"loc":{"start":{"line":300,"column":13},"end":{"line":300,"column":67}}},"25":{"name":"(anonymous_25)","line":305,"loc":{"start":{"line":305,"column":57},"end":{"line":305,"column":77}}},"26":{"name":"methodHasNoBody","line":344,"loc":{"start":{"line":344,"column":0},"end":{"line":344,"column":33}}},"27":{"name":"getNextPage","line":348,"loc":{"start":{"line":348,"column":0},"end":{"line":348,"column":23}}},"28":{"name":"(anonymous_28)","line":352,"loc":{"start":{"line":352,"column":23},"end":{"line":352,"column":48}}},"29":{"name":"callbackErrorOrThrow","line":361,"loc":{"start":{"line":361,"column":0},"end":{"line":361,"column":40}}},"30":{"name":"handler","line":362,"loc":{"start":{"line":362,"column":10},"end":{"line":362,"column":35}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":269}},"2":{"start":{"line":3,"column":101},"end":{"line":3,"column":119}},"3":{"start":{"line":3,"column":141},"end":{"line":3,"column":266}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":564}},"5":{"start":{"line":5,"column":33},"end":{"line":5,"column":349}},"6":{"start":{"line":5,"column":76},"end":{"line":5,"column":347}},"7":{"start":{"line":5,"column":117},"end":{"line":5,"column":143}},"8":{"start":{"line":5,"column":144},"end":{"line":5,"column":199}},"9":{"start":{"line":5,"column":200},"end":{"line":5,"column":231}},"10":{"start":{"line":5,"column":232},"end":{"line":5,"column":286}},"11":{"start":{"line":5,"column":259},"end":{"line":5,"column":286}},"12":{"start":{"line":5,"column":287},"end":{"line":5,"column":345}},"13":{"start":{"line":5,"column":350},"end":{"line":5,"column":559}},"14":{"start":{"line":5,"column":407},"end":{"line":5,"column":475}},"15":{"start":{"line":5,"column":423},"end":{"line":5,"column":475}},"16":{"start":{"line":5,"column":476},"end":{"line":5,"column":536}},"17":{"start":{"line":5,"column":493},"end":{"line":5,"column":536}},"18":{"start":{"line":5,"column":537},"end":{"line":5,"column":556}},"19":{"start":{"line":7,"column":0},"end":{"line":7,"column":30}},"20":{"start":{"line":9,"column":0},"end":{"line":9,"column":45}},"21":{"start":{"line":11,"column":0},"end":{"line":11,"column":30}},"22":{"start":{"line":13,"column":0},"end":{"line":13,"column":45}},"23":{"start":{"line":15,"column":0},"end":{"line":15,"column":35}},"24":{"start":{"line":17,"column":0},"end":{"line":17,"column":95}},"25":{"start":{"line":17,"column":39},"end":{"line":17,"column":93}},"26":{"start":{"line":19,"column":0},"end":{"line":19,"column":195}},"27":{"start":{"line":19,"column":35},"end":{"line":19,"column":193}},"28":{"start":{"line":19,"column":61},"end":{"line":19,"column":145}},"29":{"start":{"line":19,"column":126},"end":{"line":19,"column":143}},"30":{"start":{"line":19,"column":146},"end":{"line":19,"column":158}},"31":{"start":{"line":19,"column":168},"end":{"line":19,"column":191}},"32":{"start":{"line":21,"column":0},"end":{"line":21,"column":153}},"33":{"start":{"line":21,"column":50},"end":{"line":21,"column":151}},"34":{"start":{"line":21,"column":92},"end":{"line":21,"column":149}},"35":{"start":{"line":23,"column":0},"end":{"line":23,"column":240}},"36":{"start":{"line":23,"column":50},"end":{"line":23,"column":151}},"37":{"start":{"line":23,"column":63},"end":{"line":23,"column":149}},"38":{"start":{"line":23,"column":152},"end":{"line":23,"column":238}},"39":{"start":{"line":25,"column":0},"end":{"line":25,"column":494}},"40":{"start":{"line":25,"column":43},"end":{"line":25,"column":208}},"41":{"start":{"line":25,"column":106},"end":{"line":25,"column":206}},"42":{"start":{"line":25,"column":209},"end":{"line":25,"column":373}},"43":{"start":{"line":25,"column":374},"end":{"line":25,"column":492}},"44":{"start":{"line":25,"column":390},"end":{"line":25,"column":492}},"45":{"start":{"line":32,"column":0},"end":{"line":32,"column":49}},"46":{"start":{"line":38,"column":0},"end":{"line":60,"column":9}},"47":{"start":{"line":39,"column":3},"end":{"line":39,"column":36}},"48":{"start":{"line":47,"column":3},"end":{"line":57,"column":4}},"49":{"start":{"line":48,"column":6},"end":{"line":48,"column":43}},"50":{"start":{"line":50,"column":6},"end":{"line":50,"column":138}},"51":{"start":{"line":52,"column":6},"end":{"line":52,"column":24}},"52":{"start":{"line":53,"column":6},"end":{"line":53,"column":38}},"53":{"start":{"line":54,"column":6},"end":{"line":54,"column":61}},"54":{"start":{"line":55,"column":6},"end":{"line":55,"column":37}},"55":{"start":{"line":56,"column":6},"end":{"line":56,"column":19}},"56":{"start":{"line":59,"column":3},"end":{"line":59,"column":24}},"57":{"start":{"line":67,"column":0},"end":{"line":336,"column":4}},"58":{"start":{"line":82,"column":3},"end":{"line":98,"column":4}},"59":{"start":{"line":83,"column":6},"end":{"line":83,"column":41}},"60":{"start":{"line":85,"column":6},"end":{"line":85,"column":59}},"61":{"start":{"line":86,"column":6},"end":{"line":90,"column":8}},"62":{"start":{"line":91,"column":6},"end":{"line":91,"column":49}},"63":{"start":{"line":93,"column":6},"end":{"line":97,"column":7}},"64":{"start":{"line":94,"column":9},"end":{"line":94,"column":60}},"65":{"start":{"line":95,"column":13},"end":{"line":97,"column":7}},"66":{"start":{"line":96,"column":9},"end":{"line":96,"column":108}},"67":{"start":{"line":108,"column":3},"end":{"line":333,"column":7}},"68":{"start":{"line":111,"column":9},"end":{"line":111,"column":24}},"69":{"start":{"line":113,"column":9},"end":{"line":115,"column":10}},"70":{"start":{"line":114,"column":12},"end":{"line":114,"column":40}},"71":{"start":{"line":117,"column":9},"end":{"line":117,"column":66}},"72":{"start":{"line":118,"column":9},"end":{"line":118,"column":63}},"73":{"start":{"line":132,"column":9},"end":{"line":135,"column":11}},"74":{"start":{"line":137,"column":9},"end":{"line":139,"column":10}},"75":{"start":{"line":138,"column":12},"end":{"line":138,"column":37}},"76":{"start":{"line":140,"column":9},"end":{"line":140,"column":35}},"77":{"start":{"line":142,"column":9},"end":{"line":144,"column":10}},"78":{"start":{"line":143,"column":12},"end":{"line":143,"column":63}},"79":{"start":{"line":146,"column":9},"end":{"line":146,"column":24}},"80":{"start":{"line":159,"column":9},"end":{"line":159,"column":101}},"81":{"start":{"line":161,"column":9},"end":{"line":163,"column":10}},"82":{"start":{"line":162,"column":12},"end":{"line":162,"column":63}},"83":{"start":{"line":164,"column":9},"end":{"line":164,"column":64}},"84":{"start":{"line":165,"column":9},"end":{"line":165,"column":68}},"85":{"start":{"line":167,"column":9},"end":{"line":167,"column":31}},"86":{"start":{"line":179,"column":9},"end":{"line":181,"column":10}},"87":{"start":{"line":180,"column":12},"end":{"line":180,"column":38}},"88":{"start":{"line":183,"column":9},"end":{"line":183,"column":21}},"89":{"start":{"line":208,"column":9},"end":{"line":208,"column":39}},"90":{"start":{"line":210,"column":9},"end":{"line":210,"column":54}},"91":{"start":{"line":211,"column":9},"end":{"line":213,"column":10}},"92":{"start":{"line":212,"column":12},"end":{"line":212,"column":37}},"93":{"start":{"line":214,"column":9},"end":{"line":214,"column":67}},"94":{"start":{"line":216,"column":9},"end":{"line":216,"column":30}},"95":{"start":{"line":218,"column":9},"end":{"line":218,"column":145}},"96":{"start":{"line":219,"column":9},"end":{"line":222,"column":10}},"97":{"start":{"line":220,"column":12},"end":{"line":220,"column":31}},"98":{"start":{"line":221,"column":12},"end":{"line":221,"column":29}},"99":{"start":{"line":224,"column":9},"end":{"line":231,"column":11}},"100":{"start":{"line":233,"column":9},"end":{"line":233,"column":50}},"101":{"start":{"line":234,"column":9},"end":{"line":234,"column":97}},"102":{"start":{"line":236,"column":9},"end":{"line":248,"column":10}},"103":{"start":{"line":237,"column":12},"end":{"line":247,"column":15}},"104":{"start":{"line":238,"column":15},"end":{"line":246,"column":16}},"105":{"start":{"line":240,"column":18},"end":{"line":240,"column":52}},"106":{"start":{"line":241,"column":22},"end":{"line":246,"column":16}},"107":{"start":{"line":243,"column":18},"end":{"line":243,"column":60}},"108":{"start":{"line":245,"column":18},"end":{"line":245,"column":52}},"109":{"start":{"line":250,"column":9},"end":{"line":250,"column":31}},"110":{"start":{"line":265,"column":9},"end":{"line":265,"column":96}},"111":{"start":{"line":267,"column":9},"end":{"line":284,"column":12}},"112":{"start":{"line":268,"column":12},"end":{"line":270,"column":13}},"113":{"start":{"line":269,"column":15},"end":{"line":269,"column":40}},"114":{"start":{"line":271,"column":12},"end":{"line":271,"column":24}},"115":{"start":{"line":273,"column":12},"end":{"line":278,"column":13}},"116":{"start":{"line":274,"column":15},"end":{"line":276,"column":16}},"117":{"start":{"line":275,"column":18},"end":{"line":275,"column":44}},"118":{"start":{"line":277,"column":15},"end":{"line":277,"column":28}},"119":{"start":{"line":280,"column":12},"end":{"line":282,"column":13}},"120":{"start":{"line":281,"column":15},"end":{"line":281,"column":28}},"121":{"start":{"line":283,"column":12},"end":{"line":283,"column":27}},"122":{"start":{"line":301,"column":9},"end":{"line":301,"column":27}},"123":{"start":{"line":303,"column":9},"end":{"line":303,"column":33}},"124":{"start":{"line":305,"column":9},"end":{"line":331,"column":50}},"125":{"start":{"line":306,"column":12},"end":{"line":306,"column":25}},"126":{"start":{"line":308,"column":12},"end":{"line":308,"column":35}},"127":{"start":{"line":309,"column":12},"end":{"line":316,"column":13}},"128":{"start":{"line":310,"column":15},"end":{"line":310,"column":41}},"129":{"start":{"line":311,"column":19},"end":{"line":316,"column":13}},"130":{"start":{"line":312,"column":15},"end":{"line":312,"column":47}},"131":{"start":{"line":314,"column":15},"end":{"line":314,"column":103}},"132":{"start":{"line":315,"column":15},"end":{"line":315,"column":64}},"133":{"start":{"line":317,"column":12},"end":{"line":317,"column":85}},"134":{"start":{"line":319,"column":12},"end":{"line":319,"column":61}},"135":{"start":{"line":320,"column":12},"end":{"line":323,"column":13}},"136":{"start":{"line":321,"column":15},"end":{"line":321,"column":52}},"137":{"start":{"line":322,"column":15},"end":{"line":322,"column":77}},"138":{"start":{"line":325,"column":12},"end":{"line":327,"column":13}},"139":{"start":{"line":326,"column":15},"end":{"line":326,"column":43}},"140":{"start":{"line":329,"column":12},"end":{"line":329,"column":36}},"141":{"start":{"line":330,"column":12},"end":{"line":330,"column":28}},"142":{"start":{"line":335,"column":3},"end":{"line":335,"column":22}},"143":{"start":{"line":338,"column":0},"end":{"line":338,"column":29}},"144":{"start":{"line":343,"column":0},"end":{"line":343,"column":53}},"145":{"start":{"line":344,"column":0},"end":{"line":346,"column":1}},"146":{"start":{"line":345,"column":3},"end":{"line":345,"column":54}},"147":{"start":{"line":348,"column":0},"end":{"line":359,"column":1}},"148":{"start":{"line":349,"column":3},"end":{"line":349,"column":92}},"149":{"start":{"line":351,"column":3},"end":{"line":351,"column":44}},"150":{"start":{"line":352,"column":3},"end":{"line":358,"column":17}},"151":{"start":{"line":353,"column":6},"end":{"line":355,"column":7}},"152":{"start":{"line":354,"column":9},"end":{"line":354,"column":48}},"153":{"start":{"line":357,"column":6},"end":{"line":357,"column":21}},"154":{"start":{"line":361,"column":0},"end":{"line":386,"column":1}},"155":{"start":{"line":362,"column":3},"end":{"line":385,"column":5}},"156":{"start":{"line":363,"column":6},"end":{"line":363,"column":25}},"157":{"start":{"line":364,"column":6},"end":{"line":377,"column":7}},"158":{"start":{"line":365,"column":9},"end":{"line":370,"column":38}},"159":{"start":{"line":372,"column":9},"end":{"line":372,"column":105}},"160":{"start":{"line":373,"column":9},"end":{"line":373,"column":58}},"161":{"start":{"line":374,"column":9},"end":{"line":374,"column":58}},"162":{"start":{"line":376,"column":9},"end":{"line":376,"column":24}},"163":{"start":{"line":378,"column":6},"end":{"line":384,"column":7}},"164":{"start":{"line":379,"column":9},"end":{"line":379,"column":40}},"165":{"start":{"line":380,"column":9},"end":{"line":380,"column":19}},"166":{"start":{"line":382,"column":9},"end":{"line":382,"column":31}},"167":{"start":{"line":383,"column":9},"end":{"line":383,"column":21}}},"branchMap":{"1":{"line":3,"type":"cond-expr","locations":[{"start":{"line":3,"column":84},"end":{"line":3,"column":121}},{"start":{"line":3,"column":124},"end":{"line":3,"column":268}}]},"2":{"line":3,"type":"binary-expr","locations":[{"start":{"line":3,"column":14},"end":{"line":3,"column":42}},{"start":{"line":3,"column":46},"end":{"line":3,"column":81}}]},"3":{"line":3,"type":"cond-expr","locations":[{"start":{"line":3,"column":244},"end":{"line":3,"column":252}},{"start":{"line":3,"column":255},"end":{"line":3,"column":265}}]},"4":{"line":3,"type":"binary-expr","locations":[{"start":{"line":3,"column":148},"end":{"line":3,"column":151}},{"start":{"line":3,"column":155},"end":{"line":3,"column":183}},{"start":{"line":3,"column":187},"end":{"line":3,"column":213}},{"start":{"line":3,"column":217},"end":{"line":3,"column":241}}]},"5":{"line":5,"type":"binary-expr","locations":[{"start":{"line":5,"column":168},"end":{"line":5,"column":189}},{"start":{"line":5,"column":193},"end":{"line":5,"column":198}}]},"6":{"line":5,"type":"if","locations":[{"start":{"line":5,"column":232},"end":{"line":5,"column":232}},{"start":{"line":5,"column":232},"end":{"line":5,"column":232}}]},"7":{"line":5,"type":"if","locations":[{"start":{"line":5,"column":407},"end":{"line":5,"column":407}},{"start":{"line":5,"column":407},"end":{"line":5,"column":407}}]},"8":{"line":5,"type":"if","locations":[{"start":{"line":5,"column":476},"end":{"line":5,"column":476}},{"start":{"line":5,"column":476},"end":{"line":5,"column":476}}]},"9":{"line":17,"type":"cond-expr","locations":[{"start":{"line":17,"column":70},"end":{"line":17,"column":73}},{"start":{"line":17,"column":76},"end":{"line":17,"column":92}}]},"10":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":46},"end":{"line":17,"column":49}},{"start":{"line":17,"column":53},"end":{"line":17,"column":67}}]},"11":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":35},"end":{"line":19,"column":35}},{"start":{"line":19,"column":35},"end":{"line":19,"column":35}}]},"12":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":50},"end":{"line":21,"column":50}},{"start":{"line":21,"column":50},"end":{"line":21,"column":50}}]},"13":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":50},"end":{"line":23,"column":50}},{"start":{"line":23,"column":50},"end":{"line":23,"column":50}}]},"14":{"line":23,"type":"cond-expr","locations":[{"start":{"line":23,"column":226},"end":{"line":23,"column":230}},{"start":{"line":23,"column":233},"end":{"line":23,"column":237}}]},"15":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":159},"end":{"line":23,"column":163}},{"start":{"line":23,"column":168},"end":{"line":23,"column":192}},{"start":{"line":23,"column":196},"end":{"line":23,"column":222}}]},"16":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":43},"end":{"line":25,"column":43}},{"start":{"line":25,"column":43},"end":{"line":25,"column":43}}]},"17":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":47},"end":{"line":25,"column":79}},{"start":{"line":25,"column":83},"end":{"line":25,"column":102}}]},"18":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":244},"end":{"line":25,"column":254}},{"start":{"line":25,"column":258},"end":{"line":25,"column":278}}]},"19":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":374},"end":{"line":25,"column":374}},{"start":{"line":25,"column":374},"end":{"line":25,"column":374}}]},"20":{"line":25,"type":"cond-expr","locations":[{"start":{"line":25,"column":414},"end":{"line":25,"column":457}},{"start":{"line":25,"column":460},"end":{"line":25,"column":491}}]},"21":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":52},"end":{"line":50,"column":75}},{"start":{"line":50,"column":79},"end":{"line":50,"column":115}}]},"22":{"line":54,"type":"binary-expr","locations":[{"start":{"line":54,"column":23},"end":{"line":54,"column":48}},{"start":{"line":54,"column":52},"end":{"line":54,"column":60}}]},"23":{"line":54,"type":"binary-expr","locations":[{"start":{"line":54,"column":24},"end":{"line":54,"column":32}},{"start":{"line":54,"column":36},"end":{"line":54,"column":38}}]},"24":{"line":85,"type":"binary-expr","locations":[{"start":{"line":85,"column":23},"end":{"line":85,"column":30}},{"start":{"line":85,"column":34},"end":{"line":85,"column":58}}]},"25":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":28},"end":{"line":91,"column":40}},{"start":{"line":91,"column":44},"end":{"line":91,"column":48}}]},"26":{"line":93,"type":"if","locations":[{"start":{"line":93,"column":6},"end":{"line":93,"column":6}},{"start":{"line":93,"column":6},"end":{"line":93,"column":6}}]},"27":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":13},"end":{"line":95,"column":13}},{"start":{"line":95,"column":13},"end":{"line":95,"column":13}}]},"28":{"line":95,"type":"binary-expr","locations":[{"start":{"line":95,"column":17},"end":{"line":95,"column":30}},{"start":{"line":95,"column":34},"end":{"line":95,"column":47}}]},"29":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":9},"end":{"line":113,"column":9}},{"start":{"line":113,"column":9},"end":{"line":113,"column":9}}]},"30":{"line":134,"type":"binary-expr","locations":[{"start":{"line":134,"column":51},"end":{"line":134,"column":63}},{"start":{"line":134,"column":67},"end":{"line":134,"column":86}}]},"31":{"line":137,"type":"if","locations":[{"start":{"line":137,"column":9},"end":{"line":137,"column":9}},{"start":{"line":137,"column":9},"end":{"line":137,"column":9}}]},"32":{"line":142,"type":"if","locations":[{"start":{"line":142,"column":9},"end":{"line":142,"column":9}},{"start":{"line":142,"column":9},"end":{"line":142,"column":9}}]},"33":{"line":159,"type":"cond-expr","locations":[{"start":{"line":159,"column":83},"end":{"line":159,"column":95}},{"start":{"line":159,"column":98},"end":{"line":159,"column":100}}]},"34":{"line":159,"type":"binary-expr","locations":[{"start":{"line":159,"column":30},"end":{"line":159,"column":50}},{"start":{"line":159,"column":54},"end":{"line":159,"column":80}}]},"35":{"line":161,"type":"if","locations":[{"start":{"line":161,"column":9},"end":{"line":161,"column":9}},{"start":{"line":161,"column":9},"end":{"line":161,"column":9}}]},"36":{"line":161,"type":"binary-expr","locations":[{"start":{"line":161,"column":15},"end":{"line":161,"column":40}},{"start":{"line":161,"column":44},"end":{"line":161,"column":70}}]},"37":{"line":162,"type":"binary-expr","locations":[{"start":{"line":162,"column":34},"end":{"line":162,"column":53}},{"start":{"line":162,"column":57},"end":{"line":162,"column":62}}]},"38":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":31},"end":{"line":164,"column":50}},{"start":{"line":164,"column":54},"end":{"line":164,"column":63}}]},"39":{"line":165,"type":"binary-expr","locations":[{"start":{"line":165,"column":35},"end":{"line":165,"column":58}},{"start":{"line":165,"column":62},"end":{"line":165,"column":67}}]},"40":{"line":179,"type":"if","locations":[{"start":{"line":179,"column":9},"end":{"line":179,"column":9}},{"start":{"line":179,"column":9},"end":{"line":179,"column":9}}]},"41":{"line":179,"type":"binary-expr","locations":[{"start":{"line":179,"column":13},"end":{"line":179,"column":17}},{"start":{"line":179,"column":21},"end":{"line":179,"column":41}}]},"42":{"line":210,"type":"binary-expr","locations":[{"start":{"line":210,"column":29},"end":{"line":210,"column":33}},{"start":{"line":210,"column":37},"end":{"line":210,"column":39}}]},"43":{"line":211,"type":"if","locations":[{"start":{"line":211,"column":9},"end":{"line":211,"column":9}},{"start":{"line":211,"column":9},"end":{"line":211,"column":9}}]},"44":{"line":218,"type":"binary-expr","locations":[{"start":{"line":218,"column":37},"end":{"line":218,"column":41}},{"start":{"line":218,"column":45},"end":{"line":218,"column":117}},{"start":{"line":218,"column":121},"end":{"line":218,"column":144}}]},"45":{"line":218,"type":"cond-expr","locations":[{"start":{"line":218,"column":76},"end":{"line":218,"column":87}},{"start":{"line":218,"column":90},"end":{"line":218,"column":103}}]},"46":{"line":219,"type":"if","locations":[{"start":{"line":219,"column":9},"end":{"line":219,"column":9}},{"start":{"line":219,"column":9},"end":{"line":219,"column":9}}]},"47":{"line":230,"type":"cond-expr","locations":[{"start":{"line":230,"column":32},"end":{"line":230,"column":38}},{"start":{"line":230,"column":41},"end":{"line":230,"column":47}}]},"48":{"line":236,"type":"if","locations":[{"start":{"line":236,"column":9},"end":{"line":236,"column":9}},{"start":{"line":236,"column":9},"end":{"line":236,"column":9}}]},"49":{"line":238,"type":"if","locations":[{"start":{"line":238,"column":15},"end":{"line":238,"column":15}},{"start":{"line":238,"column":15},"end":{"line":238,"column":15}}]},"50":{"line":238,"type":"binary-expr","locations":[{"start":{"line":238,"column":19},"end":{"line":238,"column":32}},{"start":{"line":238,"column":36},"end":{"line":238,"column":73}}]},"51":{"line":241,"type":"if","locations":[{"start":{"line":241,"column":22},"end":{"line":241,"column":22}},{"start":{"line":241,"column":22},"end":{"line":241,"column":22}}]},"52":{"line":241,"type":"binary-expr","locations":[{"start":{"line":241,"column":26},"end":{"line":241,"column":49}},{"start":{"line":241,"column":53},"end":{"line":241,"column":90}}]},"53":{"line":265,"type":"cond-expr","locations":[{"start":{"line":265,"column":75},"end":{"line":265,"column":87}},{"start":{"line":265,"column":90},"end":{"line":265,"column":95}}]},"54":{"line":265,"type":"binary-expr","locations":[{"start":{"line":265,"column":22},"end":{"line":265,"column":42}},{"start":{"line":265,"column":46},"end":{"line":265,"column":72}}]},"55":{"line":268,"type":"if","locations":[{"start":{"line":268,"column":12},"end":{"line":268,"column":12}},{"start":{"line":268,"column":12},"end":{"line":268,"column":12}}]},"56":{"line":273,"type":"if","locations":[{"start":{"line":273,"column":12},"end":{"line":273,"column":12}},{"start":{"line":273,"column":12},"end":{"line":273,"column":12}}]},"57":{"line":274,"type":"if","locations":[{"start":{"line":274,"column":15},"end":{"line":274,"column":15}},{"start":{"line":274,"column":15},"end":{"line":274,"column":15}}]},"58":{"line":280,"type":"if","locations":[{"start":{"line":280,"column":12},"end":{"line":280,"column":12}},{"start":{"line":280,"column":12},"end":{"line":280,"column":12}}]},"59":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":19},"end":{"line":303,"column":26}},{"start":{"line":303,"column":30},"end":{"line":303,"column":32}}]},"60":{"line":309,"type":"if","locations":[{"start":{"line":309,"column":12},"end":{"line":309,"column":12}},{"start":{"line":309,"column":12},"end":{"line":309,"column":12}}]},"61":{"line":311,"type":"if","locations":[{"start":{"line":311,"column":19},"end":{"line":311,"column":19}},{"start":{"line":311,"column":19},"end":{"line":311,"column":19}}]},"62":{"line":320,"type":"if","locations":[{"start":{"line":320,"column":12},"end":{"line":320,"column":12}},{"start":{"line":320,"column":12},"end":{"line":320,"column":12}}]},"63":{"line":325,"type":"if","locations":[{"start":{"line":325,"column":12},"end":{"line":325,"column":12}},{"start":{"line":325,"column":12},"end":{"line":325,"column":12}}]},"64":{"line":349,"type":"cond-expr","locations":[{"start":{"line":349,"column":74},"end":{"line":349,"column":86}},{"start":{"line":349,"column":89},"end":{"line":349,"column":91}}]},"65":{"line":349,"type":"binary-expr","locations":[{"start":{"line":349,"column":21},"end":{"line":349,"column":41}},{"start":{"line":349,"column":45},"end":{"line":349,"column":71}}]},"66":{"line":353,"type":"if","locations":[{"start":{"line":353,"column":6},"end":{"line":353,"column":6}},{"start":{"line":353,"column":6},"end":{"line":353,"column":6}}]},"67":{"line":354,"type":"binary-expr","locations":[{"start":{"line":354,"column":17},"end":{"line":354,"column":37}},{"start":{"line":354,"column":41},"end":{"line":354,"column":43}}]},"68":{"line":364,"type":"if","locations":[{"start":{"line":364,"column":6},"end":{"line":364,"column":6}},{"start":{"line":364,"column":6},"end":{"line":364,"column":6}}]},"69":{"line":378,"type":"if","locations":[{"start":{"line":378,"column":6},"end":{"line":378,"column":6}},{"start":{"line":378,"column":6},"end":{"line":378,"column":6}}]}},"code":["'use strict';","","var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };","","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();","","var _axios = require('axios');","","var _axios2 = _interopRequireDefault(_axios);","","var _debug = require('debug');","","var _debug2 = _interopRequireDefault(_debug);","","var _jsBase = require('js-base64');","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }","","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }","","function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }","","function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }filecopyright  2016 Yahoo Inclicense    Licensed under {@link https://spdx.org/licenses/BSD-3-Clause-Clear.html BSD-3-Clause-Clear}ithub.js is freely distributablevar log = (0, _debug2.default)('github:request');","","/**"," * The error structure returned when a network call fails"," */","","var ResponseError = function (_Error) {","   _inherits(ResponseError, _Error);","","   /**","    * Construct a new ResponseError","    * @param {string} message - an message to return instead of the the default error message","    * @param {string} path - the requested path","    * @param {Object} response - the object returned by Axios","    */","   function ResponseError(message, path, response) {","      _classCallCheck(this, ResponseError);","","      var _this = _possibleConstructorReturn(this, (ResponseError.__proto__ || Object.getPrototypeOf(ResponseError)).call(this, message));","","      _this.path = path;","      _this.request = response.config;","      _this.response = (response || {}).response || response;","      _this.status = response.status;","      return _this;","   }","","   return ResponseError;","}(Error);","","/**"," * Requestable wraps the logic for making http requests to the API"," */","","","var Requestable = function () {","   /**","    * Either a username and password or an oauth token for Github","    * @typedef {Object} Requestable.auth","    * @prop {string} [username] - the Github username","    * @prop {string} [password] - the user's password","    * @prop {token} [token] - an OAuth token","    */","   /**","    * Initialize the http internals.","    * @param {Requestable.auth} [auth] - the credentials to authenticate to Github. If auth is","    *                                  not provided request will be made unauthenticated","    * @param {string} [apiBase=https://api.github.com] - the base Github API URL","    * @param {string} [AcceptHeader=v3] - the accept header for the requests","    */","   function Requestable(auth, apiBase, AcceptHeader) {","      _classCallCheck(this, Requestable);","","      this.__apiBase = apiBase || 'https://api.github.com';","      this.__auth = {","         token: auth.token,","         username: auth.username,","         password: auth.password","      };","      this.__AcceptHeader = AcceptHeader || 'v3';","","      if (auth.token) {","         this.__authorizationHeader = 'token ' + auth.token;","      } else if (auth.username && auth.password) {","         this.__authorizationHeader = 'Basic ' + _jsBase.Base64.encode(auth.username + ':' + auth.password);","      }","   }","","   /**","    * Compute the URL to use to make a request.","    * @private","    * @param {string} path - either a URL relative to the API base or an absolute URL","    * @return {string} - the URL to use","    */","","","   _createClass(Requestable, [{","      key: '__getURL',","      value: function __getURL(path) {","         var url = path;","","         if (path.indexOf('//') === -1) {","            url = this.__apiBase + path;","         }","","         var newCacheBuster = 'timestamp=' + new Date().getTime();","         return url.replace(/(timestamp=\\d+)/, newCacheBuster);","      }","","      /**","       * Compute the headers required for an API request.","       * @private","       * @param {boolean} raw - if the request should be treated as JSON or as a raw request","       * @param {string} AcceptHeader - the accept header for the request","       * @return {Object} - the headers to use in the request","       */","","   }, {","      key: '__getRequestHeaders',","      value: function __getRequestHeaders(raw, AcceptHeader) {","         var headers = {","            'Content-Type': 'application/json;charset=UTF-8',","            'Accept': 'application/vnd.github.' + (AcceptHeader || this.__AcceptHeader)","         };","","         if (raw) {","            headers.Accept += '.raw';","         }","         headers.Accept += '+json';","","         if (this.__authorizationHeader) {","            headers.Authorization = this.__authorizationHeader;","         }","","         return headers;","      }","","      /**","       * Sets the default options for API requests","       * @protected","       * @param {Object} [requestOptions={}] - the current options for the request","       * @return {Object} - the options to pass to the request","       */","","   }, {","      key: '_getOptionsWithDefaults',","      value: function _getOptionsWithDefaults() {","         var requestOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};","","         if (!(requestOptions.visibility || requestOptions.affiliation)) {","            requestOptions.type = requestOptions.type || 'all';","         }","         requestOptions.sort = requestOptions.sort || 'updated';","         requestOptions.per_page = requestOptions.per_page || '100'; // eslint-disable-line","","         return requestOptions;","      }","","      /**","       * if a `Date` is passed to this function it will be converted to an ISO string","       * @param {*} date - the object to attempt to cooerce into an ISO date string","       * @return {string} - the ISO representation of `date` or whatever was passed in if it was not a date","       */","","   }, {","      key: '_dateToISO',","      value: function _dateToISO(date) {","         if (date && date instanceof Date) {","            date = date.toISOString();","         }","","         return date;","      }","","      /**","       * A function that receives the result of the API request.","       * @callback Requestable.callback","       * @param {Requestable.Error} error - the error returned by the API or `null`","       * @param {(Object|true)} result - the data returned by the API or `true` if the API returns `204 No Content`","       * @param {Object} request - the raw {@linkcode https://github.com/mzabriskie/axios#response-schema Response}","       */","      /**","       * Make a request.","       * @param {string} method - the method for the request (GET, PUT, POST, DELETE)","       * @param {string} path - the path for the request","       * @param {*} [data] - the data to send to the server. For HTTP methods that don't have a body the data","       *                   will be sent as query parameters","       * @param {Requestable.callback} [cb] - the callback for the request","       * @param {boolean} [raw=false] - if the request should be sent as raw. If this is a falsy value then the","       *                              request will be made as JSON","       * @return {Promise} - the Promise for the http request","       */","","   }, {","      key: '_request',","      value: function _request(method, path, data, cb, raw) {","         var url = this.__getURL(path);","","         var AcceptHeader = (data || {}).AcceptHeader;","         if (AcceptHeader) {","            delete data.AcceptHeader;","         }","         var headers = this.__getRequestHeaders(raw, AcceptHeader);","","         var queryParams = {};","","         var shouldUseDataAsParams = data && (typeof data === 'undefined' ? 'undefined' : _typeof(data)) === 'object' && methodHasNoBody(method);","         if (shouldUseDataAsParams) {","            queryParams = data;","            data = undefined;","         }","","         var config = {","            url: url,","            method: method,","            headers: headers,","            params: queryParams,","            data: data,","            responseType: raw ? 'text' : 'json'","         };","","         log(config.method + ' to ' + config.url);","         var requestPromise = (0, _axios2.default)(config).catch(callbackErrorOrThrow(cb, path));","","         if (cb) {","            requestPromise.then(function (response) {","               if (response.data && Object.keys(response.data).length > 0) {","                  // When data has results","                  cb(null, response.data, response);","               } else if (config.method !== 'GET' && Object.keys(response.data).length < 1) {","                  // True when successful submit a request and receive a empty object","                  cb(null, response.status < 300, response);","               } else {","                  cb(null, response.data, response);","               }","            });","         }","","         return requestPromise;","      }","","      /**","       * Make a request to an endpoint the returns 204 when true and 404 when false","       * @param {string} path - the path to request","       * @param {Object} data - any query parameters for the request","       * @param {Requestable.callback} cb - the callback that will receive `true` or `false`","       * @param {method} [method=GET] - HTTP Method to use","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: '_request204or404',","      value: function _request204or404(path, data, cb) {","         var method = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'GET';","","         return this._request(method, path, data).then(function success(response) {","            if (cb) {","               cb(null, true, response);","            }","            return true;","         }, function failure(response) {","            if (response.response.status === 404) {","               if (cb) {","                  cb(null, false, response);","               }","               return false;","            }","","            if (cb) {","               cb(response);","            }","            throw response;","         });","      }","","      /**","       * Make a request and fetch all the available data. Github will paginate responses so for queries","       * that might span multiple pages this method is preferred to {@link Requestable#request}","       * @param {string} path - the path to request","       * @param {Object} options - the query parameters to include","       * @param {Requestable.callback} [cb] - the function to receive the data. The returned data will always be an array.","       * @param {Object[]} results - the partial results. This argument is intended for interal use only.","       * @return {Promise} - a promise which will resolve when all pages have been fetched","       * @deprecated This will be folded into {@link Requestable#_request} in the 2.0 release.","       */","","   }, {","      key: '_requestAllPages',","      value: function _requestAllPages(path, options, cb, results) {","         var _this2 = this;","","         results = results || [];","","         return this._request('GET', path, options).then(function (response) {","            var _results;","","            var thisGroup = void 0;","            if (response.data instanceof Array) {","               thisGroup = response.data;","            } else if (response.data.items instanceof Array) {","               thisGroup = response.data.items;","            } else {","               var message = 'cannot figure out how to append ' + response.data + ' to the result set';","               throw new ResponseError(message, path, response);","            }","            (_results = results).push.apply(_results, _toConsumableArray(thisGroup));","","            var nextUrl = getNextPage(response.headers.link);","            if (nextUrl) {","               log('getting next page: ' + nextUrl);","               return _this2._requestAllPages(nextUrl, options, cb, results);","            }","","            if (cb) {","               cb(null, results, response);","            }","","            response.data = results;","            return response;","         }).catch(callbackErrorOrThrow(cb, path));","      }","   }]);","","   return Requestable;","}();","","module.exports = Requestable;","","// ////////////////////////// //","//  Private helper functions  //","// ////////////////////////// //","var METHODS_WITH_NO_BODY = ['GET', 'HEAD', 'DELETE'];","function methodHasNoBody(method) {","   return METHODS_WITH_NO_BODY.indexOf(method) !== -1;","}","","function getNextPage() {","   var linksHeader = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';","","   var links = linksHeader.split(/\\s*,\\s*/); // splits and strips the urls","   return links.reduce(function (nextUrl, link) {","      if (link.search(/rel=\"next\"/) !== -1) {","         return (link.match(/<(.*)>/) || [])[1];","      }","","      return nextUrl;","   }, undefined);","}","","function callbackErrorOrThrow(cb, path) {","   return function handler(object) {","      var error = void 0;","      if (object.hasOwnProperty('config')) {","         var _object$response = object.response,","             status = _object$response.status,","             statusText = _object$response.statusText,","             _object$config = object.config,","             method = _object$config.method,","             url = _object$config.url;","","         var message = status + ' error making request ' + method + ' ' + url + ': \"' + statusText + '\"';","         error = new ResponseError(message, path, object);","         log(message + ' ' + JSON.stringify(object.data));","      } else {","         error = object;","      }","      if (cb) {","         log('going to error callback');","         cb(error);","      } else {","         log('throwing error');","         throw error;","      }","   };","}","//# sourceMappingURL=data:application/json;base64,","//# sourceMappingURL=Requestable.js.map",""],"l":{"3":1,"5":7,"7":1,"9":1,"11":1,"13":1,"15":1,"17":2,"19":1,"21":1,"23":1,"25":1,"32":1,"38":1,"39":1,"47":1,"48":0,"50":0,"52":0,"53":0,"54":0,"55":0,"56":0,"59":1,"67":1,"82":1,"83":0,"85":0,"86":0,"91":0,"93":0,"94":0,"95":0,"96":0,"108":1,"111":0,"113":0,"114":0,"117":0,"118":0,"132":0,"137":0,"138":0,"140":0,"142":0,"143":0,"146":0,"159":0,"161":0,"162":0,"164":0,"165":0,"167":0,"179":0,"180":0,"183":0,"208":0,"210":0,"211":0,"212":0,"214":0,"216":0,"218":0,"219":0,"220":0,"221":0,"224":0,"233":0,"234":0,"236":0,"237":0,"238":0,"240":0,"241":0,"243":0,"245":0,"250":0,"265":0,"267":0,"268":0,"269":0,"271":0,"273":0,"274":0,"275":0,"277":0,"280":0,"281":0,"283":0,"301":0,"303":0,"305":0,"306":0,"308":0,"309":0,"310":0,"311":0,"312":0,"314":0,"315":0,"317":0,"319":0,"320":0,"321":0,"322":0,"325":0,"326":0,"329":0,"330":0,"335":1,"338":1,"343":1,"344":1,"345":0,"348":1,"349":0,"351":0,"352":0,"353":0,"354":0,"357":0,"361":1,"362":0,"363":0,"364":0,"365":0,"372":0,"373":0,"374":0,"376":0,"378":0,"379":0,"380":0,"382":0,"383":0}},"/home/travis/build/npmtest/node-npmtest-github-api/node_modules/github-api/dist/components/User.js":{"path":"/home/travis/build/npmtest/node-npmtest-github-api/node_modules/github-api/dist/components/User.js","s":{"1":1,"2":1,"3":1,"4":11,"5":11,"6":11,"7":11,"8":11,"9":11,"10":1,"11":1,"12":1,"13":1,"14":0,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":2,"22":1,"23":0,"24":0,"25":1,"26":0,"27":0,"28":0,"29":1,"30":1,"31":0,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":0,"40":0,"41":0,"42":0,"43":1,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":1,"73":1},"b":{"1":[11,11],"2":[11,0],"3":[1,0],"4":[0,1],"5":[0,2],"6":[2,2],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0,0],"11":[0,1],"12":[1,0],"13":[1,1],"14":[1,0],"15":[1,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0,0,0],"20":[0,0],"21":[0,0],"22":[0,0]},"f":{"1":1,"2":1,"3":1,"4":2,"5":0,"6":0,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0},"fnMap":{"1":{"name":"(anonymous_1)","line":3,"loc":{"start":{"line":3,"column":19},"end":{"line":3,"column":31}}},"2":{"name":"defineProperties","line":3,"loc":{"start":{"line":3,"column":33},"end":{"line":3,"column":74}}},"3":{"name":"(anonymous_3)","line":3,"loc":{"start":{"line":3,"column":357},"end":{"line":3,"column":405}}},"4":{"name":"_interopRequireDefault","line":13,"loc":{"start":{"line":13,"column":0},"end":{"line":13,"column":37}}},"5":{"name":"_classCallCheck","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":48}}},"6":{"name":"_possibleConstructorReturn","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":48}}},"7":{"name":"_inherits","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":41}}},"8":{"name":"(anonymous_8)","line":32,"loc":{"start":{"line":32,"column":11},"end":{"line":32,"column":35}}},"9":{"name":"User","line":41,"loc":{"start":{"line":41,"column":3},"end":{"line":41,"column":42}}},"10":{"name":"__getScopedUrl","line":60,"loc":{"start":{"line":60,"column":13},"end":{"line":60,"column":47}}},"11":{"name":"listRepos","line":89,"loc":{"start":{"line":89,"column":13},"end":{"line":89,"column":45}}},"12":{"name":"listOrgs","line":110,"loc":{"start":{"line":110,"column":13},"end":{"line":110,"column":35}}},"13":{"name":"listGists","line":123,"loc":{"start":{"line":123,"column":13},"end":{"line":123,"column":36}}},"14":{"name":"listNotifications","line":137,"loc":{"start":{"line":137,"column":13},"end":{"line":137,"column":53}}},"15":{"name":"getProfile","line":159,"loc":{"start":{"line":159,"column":13},"end":{"line":159,"column":37}}},"16":{"name":"listStarredRepos","line":172,"loc":{"start":{"line":172,"column":13},"end":{"line":172,"column":43}}},"17":{"name":"getEmails","line":186,"loc":{"start":{"line":186,"column":13},"end":{"line":186,"column":36}}},"18":{"name":"follow","line":200,"loc":{"start":{"line":200,"column":13},"end":{"line":200,"column":43}}},"19":{"name":"unfollow","line":214,"loc":{"start":{"line":214,"column":13},"end":{"line":214,"column":45}}},"20":{"name":"createRepo","line":228,"loc":{"start":{"line":228,"column":13},"end":{"line":228,"column":46}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":564}},"2":{"start":{"line":3,"column":33},"end":{"line":3,"column":349}},"3":{"start":{"line":3,"column":76},"end":{"line":3,"column":347}},"4":{"start":{"line":3,"column":117},"end":{"line":3,"column":143}},"5":{"start":{"line":3,"column":144},"end":{"line":3,"column":199}},"6":{"start":{"line":3,"column":200},"end":{"line":3,"column":231}},"7":{"start":{"line":3,"column":232},"end":{"line":3,"column":286}},"8":{"start":{"line":3,"column":259},"end":{"line":3,"column":286}},"9":{"start":{"line":3,"column":287},"end":{"line":3,"column":345}},"10":{"start":{"line":3,"column":350},"end":{"line":3,"column":559}},"11":{"start":{"line":3,"column":407},"end":{"line":3,"column":475}},"12":{"start":{"line":3,"column":423},"end":{"line":3,"column":475}},"13":{"start":{"line":3,"column":476},"end":{"line":3,"column":536}},"14":{"start":{"line":3,"column":493},"end":{"line":3,"column":536}},"15":{"start":{"line":3,"column":537},"end":{"line":3,"column":556}},"16":{"start":{"line":5,"column":0},"end":{"line":5,"column":45}},"17":{"start":{"line":7,"column":0},"end":{"line":7,"column":58}},"18":{"start":{"line":9,"column":0},"end":{"line":9,"column":30}},"19":{"start":{"line":11,"column":0},"end":{"line":11,"column":45}},"20":{"start":{"line":13,"column":0},"end":{"line":13,"column":95}},"21":{"start":{"line":13,"column":39},"end":{"line":13,"column":93}},"22":{"start":{"line":15,"column":0},"end":{"line":15,"column":153}},"23":{"start":{"line":15,"column":50},"end":{"line":15,"column":151}},"24":{"start":{"line":15,"column":92},"end":{"line":15,"column":149}},"25":{"start":{"line":17,"column":0},"end":{"line":17,"column":240}},"26":{"start":{"line":17,"column":50},"end":{"line":17,"column":151}},"27":{"start":{"line":17,"column":63},"end":{"line":17,"column":149}},"28":{"start":{"line":17,"column":152},"end":{"line":17,"column":238}},"29":{"start":{"line":19,"column":0},"end":{"line":19,"column":494}},"30":{"start":{"line":19,"column":43},"end":{"line":19,"column":208}},"31":{"start":{"line":19,"column":106},"end":{"line":19,"column":206}},"32":{"start":{"line":19,"column":209},"end":{"line":19,"column":373}},"33":{"start":{"line":19,"column":374},"end":{"line":19,"column":492}},"34":{"start":{"line":19,"column":390},"end":{"line":19,"column":492}},"35":{"start":{"line":26,"column":0},"end":{"line":26,"column":46}},"36":{"start":{"line":32,"column":0},"end":{"line":234,"column":25}},"37":{"start":{"line":33,"column":3},"end":{"line":33,"column":33}},"38":{"start":{"line":41,"column":3},"end":{"line":48,"column":4}},"39":{"start":{"line":42,"column":6},"end":{"line":42,"column":34}},"40":{"start":{"line":44,"column":6},"end":{"line":44,"column":126}},"41":{"start":{"line":46,"column":6},"end":{"line":46,"column":30}},"42":{"start":{"line":47,"column":6},"end":{"line":47,"column":19}},"43":{"start":{"line":58,"column":3},"end":{"line":231,"column":7}},"44":{"start":{"line":61,"column":9},"end":{"line":76,"column":10}},"45":{"start":{"line":62,"column":12},"end":{"line":62,"column":97}},"46":{"start":{"line":65,"column":12},"end":{"line":75,"column":13}},"47":{"start":{"line":67,"column":18},"end":{"line":67,"column":33}},"48":{"start":{"line":71,"column":18},"end":{"line":71,"column":40}},"49":{"start":{"line":74,"column":18},"end":{"line":74,"column":45}},"50":{"start":{"line":90,"column":9},"end":{"line":93,"column":10}},"51":{"start":{"line":91,"column":12},"end":{"line":91,"column":25}},"52":{"start":{"line":92,"column":12},"end":{"line":92,"column":25}},"53":{"start":{"line":95,"column":9},"end":{"line":95,"column":57}},"54":{"start":{"line":97,"column":9},"end":{"line":97,"column":79}},"55":{"start":{"line":98,"column":9},"end":{"line":98,"column":81}},"56":{"start":{"line":111,"column":9},"end":{"line":111,"column":76}},"57":{"start":{"line":124,"column":9},"end":{"line":124,"column":77}},"58":{"start":{"line":138,"column":9},"end":{"line":138,"column":33}},"59":{"start":{"line":139,"column":9},"end":{"line":142,"column":10}},"60":{"start":{"line":140,"column":12},"end":{"line":140,"column":25}},"61":{"start":{"line":141,"column":12},"end":{"line":141,"column":25}},"62":{"start":{"line":144,"column":9},"end":{"line":144,"column":56}},"63":{"start":{"line":145,"column":9},"end":{"line":145,"column":58}},"64":{"start":{"line":147,"column":9},"end":{"line":147,"column":88}},"65":{"start":{"line":160,"column":9},"end":{"line":160,"column":72}},"66":{"start":{"line":173,"column":9},"end":{"line":173,"column":61}},"67":{"start":{"line":174,"column":9},"end":{"line":174,"column":90}},"68":{"start":{"line":187,"column":9},"end":{"line":187,"column":63}},"69":{"start":{"line":201,"column":9},"end":{"line":201,"column":81}},"70":{"start":{"line":215,"column":9},"end":{"line":215,"column":84}},"71":{"start":{"line":229,"column":9},"end":{"line":229,"column":66}},"72":{"start":{"line":233,"column":3},"end":{"line":233,"column":15}},"73":{"start":{"line":236,"column":0},"end":{"line":236,"column":22}}},"branchMap":{"1":{"line":3,"type":"binary-expr","locations":[{"start":{"line":3,"column":168},"end":{"line":3,"column":189}},{"start":{"line":3,"column":193},"end":{"line":3,"column":198}}]},"2":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":232},"end":{"line":3,"column":232}},{"start":{"line":3,"column":232},"end":{"line":3,"column":232}}]},"3":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":407},"end":{"line":3,"column":407}},{"start":{"line":3,"column":407},"end":{"line":3,"column":407}}]},"4":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":476},"end":{"line":3,"column":476}},{"start":{"line":3,"column":476},"end":{"line":3,"column":476}}]},"5":{"line":13,"type":"cond-expr","locations":[{"start":{"line":13,"column":70},"end":{"line":13,"column":73}},{"start":{"line":13,"column":76},"end":{"line":13,"column":92}}]},"6":{"line":13,"type":"binary-expr","locations":[{"start":{"line":13,"column":46},"end":{"line":13,"column":49}},{"start":{"line":13,"column":53},"end":{"line":13,"column":67}}]},"7":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":50},"end":{"line":15,"column":50}},{"start":{"line":15,"column":50},"end":{"line":15,"column":50}}]},"8":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":50},"end":{"line":17,"column":50}},{"start":{"line":17,"column":50},"end":{"line":17,"column":50}}]},"9":{"line":17,"type":"cond-expr","locations":[{"start":{"line":17,"column":226},"end":{"line":17,"column":230}},{"start":{"line":17,"column":233},"end":{"line":17,"column":237}}]},"10":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":159},"end":{"line":17,"column":163}},{"start":{"line":17,"column":168},"end":{"line":17,"column":192}},{"start":{"line":17,"column":196},"end":{"line":17,"column":222}}]},"11":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":43},"end":{"line":19,"column":43}},{"start":{"line":19,"column":43},"end":{"line":19,"column":43}}]},"12":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":47},"end":{"line":19,"column":79}},{"start":{"line":19,"column":83},"end":{"line":19,"column":102}}]},"13":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":244},"end":{"line":19,"column":254}},{"start":{"line":19,"column":258},"end":{"line":19,"column":278}}]},"14":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":374},"end":{"line":19,"column":374}},{"start":{"line":19,"column":374},"end":{"line":19,"column":374}}]},"15":{"line":19,"type":"cond-expr","locations":[{"start":{"line":19,"column":414},"end":{"line":19,"column":457}},{"start":{"line":19,"column":460},"end":{"line":19,"column":491}}]},"16":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":52},"end":{"line":44,"column":66}},{"start":{"line":44,"column":70},"end":{"line":44,"column":97}}]},"17":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":9},"end":{"line":61,"column":9}},{"start":{"line":61,"column":9},"end":{"line":61,"column":9}}]},"18":{"line":62,"type":"cond-expr","locations":[{"start":{"line":62,"column":30},"end":{"line":62,"column":70}},{"start":{"line":62,"column":73},"end":{"line":62,"column":96}}]},"19":{"line":65,"type":"switch","locations":[{"start":{"line":66,"column":15},"end":{"line":67,"column":33}},{"start":{"line":69,"column":15},"end":{"line":69,"column":36}},{"start":{"line":70,"column":15},"end":{"line":71,"column":40}},{"start":{"line":73,"column":15},"end":{"line":74,"column":45}}]},"20":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":9},"end":{"line":90,"column":9}},{"start":{"line":90,"column":9},"end":{"line":90,"column":9}}]},"21":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":19},"end":{"line":138,"column":26}},{"start":{"line":138,"column":30},"end":{"line":138,"column":32}}]},"22":{"line":139,"type":"if","locations":[{"start":{"line":139,"column":9},"end":{"line":139,"column":9}},{"start":{"line":139,"column":9},"end":{"line":139,"column":9}}]}},"code":["'use strict';","","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();","","var _Requestable2 = require('./Requestable');","","var _Requestable3 = _interopRequireDefault(_Requestable2);","","var _debug = require('debug');","","var _debug2 = _interopRequireDefault(_debug);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }","","function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }","","function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }filecopyright  2013 Michael Aufreiter (Development Seed) and 2016 Yahoo Inclicense    Licensed under {@link https://spdx.org/licenses/BSD-3-Clause-Clear.html BSD-3-Clause-Clear}ithub.js is freely distributablevar log = (0, _debug2.default)('github:user');","","/**"," * A User allows scoping of API requests to a particular Github user."," */","","var User = function (_Requestable) {","   _inherits(User, _Requestable);","","   /**","    * Create a User.","    * @param {string} [username] - the user to use for user-scoped queries","    * @param {Requestable.auth} [auth] - information required to authenticate to Github","    * @param {string} [apiBase=https://api.github.com] - the base Github API URL","    */","   function User(username, auth, apiBase) {","      _classCallCheck(this, User);","","      var _this = _possibleConstructorReturn(this, (User.__proto__ || Object.getPrototypeOf(User)).call(this, auth, apiBase));","","      _this.__user = username;","      return _this;","   }","","   /**","    * Get the url for the request. (dependent on if we're requesting for the authenticated user or not)","    * @private","    * @param {string} endpoint - the endpoint being requested","    * @return {string} - the resolved endpoint","    */","","","   _createClass(User, [{","      key: '__getScopedUrl',","      value: function __getScopedUrl(endpoint) {","         if (this.__user) {","            return endpoint ? '/users/' + this.__user + '/' + endpoint : '/users/' + this.__user;","         } else {","            // eslint-disable-line","            switch (endpoint) {","               case '':","                  return '/user';","","               case 'notifications':","               case 'gists':","                  return '/' + endpoint;","","               default:","                  return '/user/' + endpoint;","            }","         }","      }","","      /**","       * List the user's repositories","       * @see https://developer.github.com/v3/repos/#list-user-repositories","       * @param {Object} [options={}] - any options to refine the search","       * @param {Requestable.callback} [cb] - will receive the list of repositories","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: 'listRepos',","      value: function listRepos(options, cb) {","         if (typeof options === 'function') {","            cb = options;","            options = {};","         }","","         options = this._getOptionsWithDefaults(options);","","         log('Fetching repositories with options: ' + JSON.stringify(options));","         return this._requestAllPages(this.__getScopedUrl('repos'), options, cb);","      }","","      /**","       * List the orgs that the user belongs to","       * @see https://developer.github.com/v3/orgs/#list-user-organizations","       * @param {Requestable.callback} [cb] - will receive the list of organizations","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: 'listOrgs',","      value: function listOrgs(cb) {","         return this._request('GET', this.__getScopedUrl('orgs'), null, cb);","      }","","      /**","       * List the user's gists","       * @see https://developer.github.com/v3/gists/#list-a-users-gists","       * @param {Requestable.callback} [cb] - will receive the list of gists","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: 'listGists',","      value: function listGists(cb) {","         return this._request('GET', this.__getScopedUrl('gists'), null, cb);","      }","","      /**","       * List the user's notifications","       * @see https://developer.github.com/v3/activity/notifications/#list-your-notifications","       * @param {Object} [options={}] - any options to refine the search","       * @param {Requestable.callback} [cb] - will receive the list of repositories","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: 'listNotifications',","      value: function listNotifications(options, cb) {","         options = options || {};","         if (typeof options === 'function') {","            cb = options;","            options = {};","         }","","         options.since = this._dateToISO(options.since);","         options.before = this._dateToISO(options.before);","","         return this._request('GET', this.__getScopedUrl('notifications'), options, cb);","      }","","      /**","       * Show the user's profile","       * @see https://developer.github.com/v3/users/#get-a-single-user","       * @param {Requestable.callback} [cb] - will receive the user's information","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: 'getProfile',","      value: function getProfile(cb) {","         return this._request('GET', this.__getScopedUrl(''), null, cb);","      }","","      /**","       * Gets the list of starred repositories for the user","       * @see https://developer.github.com/v3/activity/starring/#list-repositories-being-starred","       * @param {Requestable.callback} [cb] - will receive the list of starred repositories","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: 'listStarredRepos',","      value: function listStarredRepos(cb) {","         var requestOptions = this._getOptionsWithDefaults();","         return this._requestAllPages(this.__getScopedUrl('starred'), requestOptions, cb);","      }","","      /**","       * List email addresses for a user","       * @see https://developer.github.com/v3/users/emails/#list-email-addresses-for-a-user","       * @param {Requestable.callback} [cb] - will receive the list of emails","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: 'getEmails',","      value: function getEmails(cb) {","         return this._request('GET', '/user/emails', null, cb);","      }","","      /**","       * Have the authenticated user follow this user","       * @see https://developer.github.com/v3/users/followers/#follow-a-user","       * @param {string} username - the user to follow","       * @param {Requestable.callback} [cb] - will receive true if the request succeeds","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: 'follow',","      value: function follow(username, cb) {","         return this._request('PUT', '/user/following/' + this.__user, null, cb);","      }","","      /**","       * Have the currently authenticated user unfollow this user","       * @see https://developer.github.com/v3/users/followers/#follow-a-user","       * @param {string} username - the user to unfollow","       * @param {Requestable.callback} [cb] - receives true if the request succeeds","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: 'unfollow',","      value: function unfollow(username, cb) {","         return this._request('DELETE', '/user/following/' + this.__user, null, cb);","      }","","      /**","       * Create a new repository for the currently authenticated user","       * @see https://developer.github.com/v3/repos/#create","       * @param {object} options - the repository definition","       * @param {Requestable.callback} [cb] - will receive the API response","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: 'createRepo',","      value: function createRepo(options, cb) {","         return this._request('POST', '/user/repos', options, cb);","      }","   }]);","","   return User;","}(_Requestable3.default);","","module.exports = User;","//# sourceMappingURL=data:application/json;base64,","//# sourceMappingURL=User.js.map",""],"l":{"3":11,"5":1,"7":1,"9":1,"11":1,"13":2,"15":1,"17":1,"19":1,"26":1,"32":1,"33":1,"41":1,"42":0,"44":0,"46":0,"47":0,"58":1,"61":0,"62":0,"65":0,"67":0,"71":0,"74":0,"90":0,"91":0,"92":0,"95":0,"97":0,"98":0,"111":0,"124":0,"138":0,"139":0,"140":0,"141":0,"144":0,"145":0,"147":0,"160":0,"173":0,"174":0,"187":0,"201":0,"215":0,"229":0,"233":1,"236":1}},"/home/travis/build/npmtest/node-npmtest-github-api/node_modules/github-api/dist/components/Issue.js":{"path":"/home/travis/build/npmtest/node-npmtest-github-api/node_modules/github-api/dist/components/Issue.js","s":{"1":1,"2":1,"3":1,"4":20,"5":20,"6":20,"7":20,"8":20,"9":20,"10":1,"11":1,"12":1,"13":1,"14":0,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":0,"22":0,"23":1,"24":0,"25":0,"26":0,"27":1,"28":1,"29":0,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":0,"37":0,"38":0,"39":0,"40":1,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":1,"62":1},"b":{"1":[20,20],"2":[20,0],"3":[1,0],"4":[0,1],"5":[0,1],"6":[1,1],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0,0],"11":[0,1],"12":[1,0],"13":[1,1],"14":[1,0],"15":[1,0],"16":[0,0]},"f":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0},"fnMap":{"1":{"name":"(anonymous_1)","line":3,"loc":{"start":{"line":3,"column":19},"end":{"line":3,"column":31}}},"2":{"name":"defineProperties","line":3,"loc":{"start":{"line":3,"column":33},"end":{"line":3,"column":74}}},"3":{"name":"(anonymous_3)","line":3,"loc":{"start":{"line":3,"column":357},"end":{"line":3,"column":405}}},"4":{"name":"_interopRequireDefault","line":9,"loc":{"start":{"line":9,"column":0},"end":{"line":9,"column":37}}},"5":{"name":"_classCallCheck","line":11,"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":48}}},"6":{"name":"_possibleConstructorReturn","line":13,"loc":{"start":{"line":13,"column":0},"end":{"line":13,"column":48}}},"7":{"name":"_inherits","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":41}}},"8":{"name":"(anonymous_8)","line":25,"loc":{"start":{"line":25,"column":12},"end":{"line":25,"column":36}}},"9":{"name":"Issue","line":34,"loc":{"start":{"line":34,"column":2},"end":{"line":34,"column":44}}},"10":{"name":"createIssue","line":54,"loc":{"start":{"line":54,"column":11},"end":{"line":54,"column":47}}},"11":{"name":"listIssues","line":68,"loc":{"start":{"line":68,"column":11},"end":{"line":68,"column":44}}},"12":{"name":"listIssueEvents","line":82,"loc":{"start":{"line":82,"column":11},"end":{"line":82,"column":47}}},"13":{"name":"listIssueComments","line":96,"loc":{"start":{"line":96,"column":11},"end":{"line":96,"column":49}}},"14":{"name":"getIssueComment","line":110,"loc":{"start":{"line":110,"column":11},"end":{"line":110,"column":44}}},"15":{"name":"createIssueComment","line":125,"loc":{"start":{"line":125,"column":11},"end":{"line":125,"column":59}}},"16":{"name":"editIssueComment","line":140,"loc":{"start":{"line":140,"column":11},"end":{"line":140,"column":54}}},"17":{"name":"deleteIssueComment","line":154,"loc":{"start":{"line":154,"column":11},"end":{"line":154,"column":47}}},"18":{"name":"editIssue","line":169,"loc":{"start":{"line":169,"column":11},"end":{"line":169,"column":52}}},"19":{"name":"getIssue","line":183,"loc":{"start":{"line":183,"column":11},"end":{"line":183,"column":40}}},"20":{"name":"listMilestones","line":197,"loc":{"start":{"line":197,"column":11},"end":{"line":197,"column":48}}},"21":{"name":"getMilestone","line":211,"loc":{"start":{"line":211,"column":11},"end":{"line":211,"column":48}}},"22":{"name":"createMilestone","line":225,"loc":{"start":{"line":225,"column":11},"end":{"line":225,"column":55}}},"23":{"name":"editMilestone","line":240,"loc":{"start":{"line":240,"column":11},"end":{"line":240,"column":64}}},"24":{"name":"deleteMilestone","line":254,"loc":{"start":{"line":254,"column":11},"end":{"line":254,"column":51}}},"25":{"name":"createLabel","line":268,"loc":{"start":{"line":268,"column":11},"end":{"line":268,"column":47}}},"26":{"name":"listLabels","line":282,"loc":{"start":{"line":282,"column":11},"end":{"line":282,"column":44}}},"27":{"name":"getLabel","line":296,"loc":{"start":{"line":296,"column":11},"end":{"line":296,"column":40}}},"28":{"name":"editLabel","line":311,"loc":{"start":{"line":311,"column":11},"end":{"line":311,"column":52}}},"29":{"name":"deleteLabel","line":325,"loc":{"start":{"line":325,"column":11},"end":{"line":325,"column":43}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":564}},"2":{"start":{"line":3,"column":33},"end":{"line":3,"column":349}},"3":{"start":{"line":3,"column":76},"end":{"line":3,"column":347}},"4":{"start":{"line":3,"column":117},"end":{"line":3,"column":143}},"5":{"start":{"line":3,"column":144},"end":{"line":3,"column":199}},"6":{"start":{"line":3,"column":200},"end":{"line":3,"column":231}},"7":{"start":{"line":3,"column":232},"end":{"line":3,"column":286}},"8":{"start":{"line":3,"column":259},"end":{"line":3,"column":286}},"9":{"start":{"line":3,"column":287},"end":{"line":3,"column":345}},"10":{"start":{"line":3,"column":350},"end":{"line":3,"column":559}},"11":{"start":{"line":3,"column":407},"end":{"line":3,"column":475}},"12":{"start":{"line":3,"column":423},"end":{"line":3,"column":475}},"13":{"start":{"line":3,"column":476},"end":{"line":3,"column":536}},"14":{"start":{"line":3,"column":493},"end":{"line":3,"column":536}},"15":{"start":{"line":3,"column":537},"end":{"line":3,"column":556}},"16":{"start":{"line":5,"column":0},"end":{"line":5,"column":45}},"17":{"start":{"line":7,"column":0},"end":{"line":7,"column":58}},"18":{"start":{"line":9,"column":0},"end":{"line":9,"column":95}},"19":{"start":{"line":9,"column":39},"end":{"line":9,"column":93}},"20":{"start":{"line":11,"column":0},"end":{"line":11,"column":153}},"21":{"start":{"line":11,"column":50},"end":{"line":11,"column":151}},"22":{"start":{"line":11,"column":92},"end":{"line":11,"column":149}},"23":{"start":{"line":13,"column":0},"end":{"line":13,"column":240}},"24":{"start":{"line":13,"column":50},"end":{"line":13,"column":151}},"25":{"start":{"line":13,"column":63},"end":{"line":13,"column":149}},"26":{"start":{"line":13,"column":152},"end":{"line":13,"column":238}},"27":{"start":{"line":15,"column":0},"end":{"line":15,"column":494}},"28":{"start":{"line":15,"column":43},"end":{"line":15,"column":208}},"29":{"start":{"line":15,"column":106},"end":{"line":15,"column":206}},"30":{"start":{"line":15,"column":209},"end":{"line":15,"column":373}},"31":{"start":{"line":15,"column":374},"end":{"line":15,"column":492}},"32":{"start":{"line":15,"column":390},"end":{"line":15,"column":492}},"33":{"start":{"line":25,"column":0},"end":{"line":331,"column":25}},"34":{"start":{"line":26,"column":2},"end":{"line":26,"column":33}},"35":{"start":{"line":34,"column":2},"end":{"line":41,"column":3}},"36":{"start":{"line":35,"column":4},"end":{"line":35,"column":33}},"37":{"start":{"line":37,"column":4},"end":{"line":37,"column":126}},"38":{"start":{"line":39,"column":4},"end":{"line":39,"column":36}},"39":{"start":{"line":40,"column":4},"end":{"line":40,"column":17}},"40":{"start":{"line":52,"column":2},"end":{"line":328,"column":6}},"41":{"start":{"line":55,"column":6},"end":{"line":55,"column":93}},"42":{"start":{"line":69,"column":6},"end":{"line":69,"column":91}},"43":{"start":{"line":83,"column":6},"end":{"line":83,"column":108}},"44":{"start":{"line":97,"column":6},"end":{"line":97,"column":110}},"45":{"start":{"line":111,"column":6},"end":{"line":111,"column":102}},"46":{"start":{"line":126,"column":6},"end":{"line":126,"column":124}},"47":{"start":{"line":141,"column":6},"end":{"line":141,"column":117}},"48":{"start":{"line":155,"column":6},"end":{"line":155,"column":105}},"49":{"start":{"line":170,"column":6},"end":{"line":170,"column":103}},"50":{"start":{"line":184,"column":6},"end":{"line":184,"column":96}},"51":{"start":{"line":198,"column":6},"end":{"line":198,"column":94}},"52":{"start":{"line":212,"column":6},"end":{"line":212,"column":104}},"53":{"start":{"line":226,"column":6},"end":{"line":226,"column":101}},"54":{"start":{"line":241,"column":6},"end":{"line":241,"column":115}},"55":{"start":{"line":255,"column":6},"end":{"line":255,"column":107}},"56":{"start":{"line":269,"column":6},"end":{"line":269,"column":93}},"57":{"start":{"line":283,"column":6},"end":{"line":283,"column":90}},"58":{"start":{"line":297,"column":6},"end":{"line":297,"column":96}},"59":{"start":{"line":312,"column":6},"end":{"line":312,"column":103}},"60":{"start":{"line":326,"column":6},"end":{"line":326,"column":99}},"61":{"start":{"line":330,"column":2},"end":{"line":330,"column":15}},"62":{"start":{"line":333,"column":0},"end":{"line":333,"column":23}}},"branchMap":{"1":{"line":3,"type":"binary-expr","locations":[{"start":{"line":3,"column":168},"end":{"line":3,"column":189}},{"start":{"line":3,"column":193},"end":{"line":3,"column":198}}]},"2":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":232},"end":{"line":3,"column":232}},{"start":{"line":3,"column":232},"end":{"line":3,"column":232}}]},"3":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":407},"end":{"line":3,"column":407}},{"start":{"line":3,"column":407},"end":{"line":3,"column":407}}]},"4":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":476},"end":{"line":3,"column":476}},{"start":{"line":3,"column":476},"end":{"line":3,"column":476}}]},"5":{"line":9,"type":"cond-expr","locations":[{"start":{"line":9,"column":70},"end":{"line":9,"column":73}},{"start":{"line":9,"column":76},"end":{"line":9,"column":92}}]},"6":{"line":9,"type":"binary-expr","locations":[{"start":{"line":9,"column":46},"end":{"line":9,"column":49}},{"start":{"line":9,"column":53},"end":{"line":9,"column":67}}]},"7":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":50},"end":{"line":11,"column":50}},{"start":{"line":11,"column":50},"end":{"line":11,"column":50}}]},"8":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":50},"end":{"line":13,"column":50}},{"start":{"line":13,"column":50},"end":{"line":13,"column":50}}]},"9":{"line":13,"type":"cond-expr","locations":[{"start":{"line":13,"column":226},"end":{"line":13,"column":230}},{"start":{"line":13,"column":233},"end":{"line":13,"column":237}}]},"10":{"line":13,"type":"binary-expr","locations":[{"start":{"line":13,"column":159},"end":{"line":13,"column":163}},{"start":{"line":13,"column":168},"end":{"line":13,"column":192}},{"start":{"line":13,"column":196},"end":{"line":13,"column":222}}]},"11":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":43},"end":{"line":15,"column":43}},{"start":{"line":15,"column":43},"end":{"line":15,"column":43}}]},"12":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":47},"end":{"line":15,"column":79}},{"start":{"line":15,"column":83},"end":{"line":15,"column":102}}]},"13":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":244},"end":{"line":15,"column":254}},{"start":{"line":15,"column":258},"end":{"line":15,"column":278}}]},"14":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":374},"end":{"line":15,"column":374}},{"start":{"line":15,"column":374},"end":{"line":15,"column":374}}]},"15":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":414},"end":{"line":15,"column":457}},{"start":{"line":15,"column":460},"end":{"line":15,"column":491}}]},"16":{"line":37,"type":"binary-expr","locations":[{"start":{"line":37,"column":50},"end":{"line":37,"column":65}},{"start":{"line":37,"column":69},"end":{"line":37,"column":97}}]}},"code":["'use strict';","","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();","","var _Requestable2 = require('./Requestable');","","var _Requestable3 = _interopRequireDefault(_Requestable2);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }","","function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }","","function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }filecopyright  2013 Michael Aufreiter (Development Seed) and 2016 Yahoo Inclicense    Licensed under {@link https://spdx.org/licenses/BSD-3-Clause-Clear.html BSD-3-Clause-Clear}ithub.js is freely distributablessue wraps the functionality to get issues for repositories"," */","var Issue = function (_Requestable) {","  _inherits(Issue, _Requestable);","","  /**","   * Create a new Issue","   * @param {string} repository - the full name of the repository (`:user/:repo`) to get issues for","   * @param {Requestable.auth} [auth] - information required to authenticate to Github","   * @param {string} [apiBase=https://api.github.com] - the base Github API URL","   */","  function Issue(repository, auth, apiBase) {","    _classCallCheck(this, Issue);","","    var _this = _possibleConstructorReturn(this, (Issue.__proto__ || Object.getPrototypeOf(Issue)).call(this, auth, apiBase));","","    _this.__repository = repository;","    return _this;","  }","","  /**","   * Create a new issue","   * @see https://developer.github.com/v3/issues/#create-an-issue","   * @param {Object} issueData - the issue to create","   * @param {Requestable.callback} [cb] - will receive the created issue","   * @return {Promise} - the promise for the http request","   */","","","  _createClass(Issue, [{","    key: 'createIssue',","    value: function createIssue(issueData, cb) {","      return this._request('POST', '/repos/' + this.__repository + '/issues', issueData, cb);","    }","","    /**","     * List the issues for the repository","     * @see https://developer.github.com/v3/issues/#list-issues-for-a-repository","     * @param {Object} options - filtering options","     * @param {Requestable.callback} [cb] - will receive the array of issues","     * @return {Promise} - the promise for the http request","     */","","  }, {","    key: 'listIssues',","    value: function listIssues(options, cb) {","      return this._requestAllPages('/repos/' + this.__repository + '/issues', options, cb);","    }","","    /**","     * List the events for an issue","     * @see https://developer.github.com/v3/issues/events/#list-events-for-an-issue","     * @param {number} issue - the issue to get events for","     * @param {Requestable.callback} [cb] - will receive the list of events","     * @return {Promise} - the promise for the http request","     */","","  }, {","    key: 'listIssueEvents',","    value: function listIssueEvents(issue, cb) {","      return this._request('GET', '/repos/' + this.__repository + '/issues/' + issue + '/events', null, cb);","    }","","    /**","     * List comments on an issue","     * @see https://developer.github.com/v3/issues/comments/#list-comments-on-an-issue","     * @param {number} issue - the id of the issue to get comments from","     * @param {Requestable.callback} [cb] - will receive the comments","     * @return {Promise} - the promise for the http request","     */","","  }, {","    key: 'listIssueComments',","    value: function listIssueComments(issue, cb) {","      return this._request('GET', '/repos/' + this.__repository + '/issues/' + issue + '/comments', null, cb);","    }","","    /**","     * Get a single comment on an issue","     * @see https://developer.github.com/v3/issues/comments/#get-a-single-comment","     * @param {number} id - the comment id to get","     * @param {Requestable.callback} [cb] - will receive the comment","     * @return {Promise} - the promise for the http request","     */","","  }, {","    key: 'getIssueComment',","    value: function getIssueComment(id, cb) {","      return this._request('GET', '/repos/' + this.__repository + '/issues/comments/' + id, null, cb);","    }","","    /**","     * Comment on an issue","     * @see https://developer.github.com/v3/issues/comments/#create-a-comment","     * @param {number} issue - the id of the issue to comment on","     * @param {string} comment - the comment to add","     * @param {Requestable.callback} [cb] - will receive the created comment","     * @return {Promise} - the promise for the http request","     */","","  }, {","    key: 'createIssueComment',","    value: function createIssueComment(issue, comment, cb) {","      return this._request('POST', '/repos/' + this.__repository + '/issues/' + issue + '/comments', { body: comment }, cb);","    }","","    /**","     * Edit a comment on an issue","     * @see https://developer.github.com/v3/issues/comments/#edit-a-comment","     * @param {number} id - the comment id to edit","     * @param {string} comment - the comment to edit","     * @param {Requestable.callback} [cb] - will receive the edited comment","     * @return {Promise} - the promise for the http request","     */","","  }, {","    key: 'editIssueComment',","    value: function editIssueComment(id, comment, cb) {","      return this._request('PATCH', '/repos/' + this.__repository + '/issues/comments/' + id, { body: comment }, cb);","    }","","    /**","     * Delete a comment on an issue","     * @see https://developer.github.com/v3/issues/comments/#delete-a-comment","     * @param {number} id - the comment id to delete","     * @param {Requestable.callback} [cb] - will receive true if the request is successful","     * @return {Promise} - the promise for the http request","     */","","  }, {","    key: 'deleteIssueComment',","    value: function deleteIssueComment(id, cb) {","      return this._request('DELETE', '/repos/' + this.__repository + '/issues/comments/' + id, null, cb);","    }","","    /**","     * Edit an issue","     * @see https://developer.github.com/v3/issues/#edit-an-issue","     * @param {number} issue - the issue number to edit","     * @param {Object} issueData - the new issue data","     * @param {Requestable.callback} [cb] - will receive the modified issue","     * @return {Promise} - the promise for the http request","     */","","  }, {","    key: 'editIssue',","    value: function editIssue(issue, issueData, cb) {","      return this._request('PATCH', '/repos/' + this.__repository + '/issues/' + issue, issueData, cb);","    }","","    /**","     * Get a particular issue","     * @see https://developer.github.com/v3/issues/#get-a-single-issue","     * @param {number} issue - the issue number to fetch","     * @param {Requestable.callback} [cb] - will receive the issue","     * @return {Promise} - the promise for the http request","     */","","  }, {","    key: 'getIssue',","    value: function getIssue(issue, cb) {","      return this._request('GET', '/repos/' + this.__repository + '/issues/' + issue, null, cb);","    }","","    /**","     * List the milestones for the repository","     * @see https://developer.github.com/v3/issues/milestones/#list-milestones-for-a-repository","     * @param {Object} options - filtering options","     * @param {Requestable.callback} [cb] - will receive the array of milestones","     * @return {Promise} - the promise for the http request","     */","","  }, {","    key: 'listMilestones',","    value: function listMilestones(options, cb) {","      return this._request('GET', '/repos/' + this.__repository + '/milestones', options, cb);","    }","","    /**","     * Get a milestone","     * @see https://developer.github.com/v3/issues/milestones/#get-a-single-milestone","     * @param {string} milestone - the id of the milestone to fetch","     * @param {Requestable.callback} [cb] - will receive the milestone","     * @return {Promise} - the promise for the http request","     */","","  }, {","    key: 'getMilestone',","    value: function getMilestone(milestone, cb) {","      return this._request('GET', '/repos/' + this.__repository + '/milestones/' + milestone, null, cb);","    }","","    /**","     * Create a new milestone","     * @see https://developer.github.com/v3/issues/milestones/#create-a-milestone","     * @param {Object} milestoneData - the milestone definition","     * @param {Requestable.callback} [cb] - will receive the milestone","     * @return {Promise} - the promise for the http request","     */","","  }, {","    key: 'createMilestone',","    value: function createMilestone(milestoneData, cb) {","      return this._request('POST', '/repos/' + this.__repository + '/milestones', milestoneData, cb);","    }","","    /**","     * Edit a milestone","     * @see https://developer.github.com/v3/issues/milestones/#update-a-milestone","     * @param {string} milestone - the id of the milestone to edit","     * @param {Object} milestoneData - the updates to make to the milestone","     * @param {Requestable.callback} [cb] - will receive the updated milestone","     * @return {Promise} - the promise for the http request","     */","","  }, {","    key: 'editMilestone',","    value: function editMilestone(milestone, milestoneData, cb) {","      return this._request('PATCH', '/repos/' + this.__repository + '/milestones/' + milestone, milestoneData, cb);","    }","","    /**","     * Delete a milestone (this is distinct from closing a milestone)","     * @see https://developer.github.com/v3/issues/milestones/#delete-a-milestone","     * @param {string} milestone - the id of the milestone to delete","     * @param {Requestable.callback} [cb] - will receive the status","     * @return {Promise} - the promise for the http request","     */","","  }, {","    key: 'deleteMilestone',","    value: function deleteMilestone(milestone, cb) {","      return this._request('DELETE', '/repos/' + this.__repository + '/milestones/' + milestone, null, cb);","    }","","    /**","     * Create a new label","     * @see https://developer.github.com/v3/issues/labels/#create-a-label","     * @param {Object} labelData - the label definition","     * @param {Requestable.callback} [cb] - will receive the object representing the label","     * @return {Promise} - the promise for the http request","     */","","  }, {","    key: 'createLabel',","    value: function createLabel(labelData, cb) {","      return this._request('POST', '/repos/' + this.__repository + '/labels', labelData, cb);","    }","","    /**","     * List the labels for the repository","     * @see https://developer.github.com/v3/issues/labels/#list-all-labels-for-this-repository","     * @param {Object} options - filtering options","     * @param {Requestable.callback} [cb] - will receive the array of labels","     * @return {Promise} - the promise for the http request","     */","","  }, {","    key: 'listLabels',","    value: function listLabels(options, cb) {","      return this._request('GET', '/repos/' + this.__repository + '/labels', options, cb);","    }","","    /**","     * Get a label","     * @see https://developer.github.com/v3/issues/labels/#get-a-single-label","     * @param {string} label - the name of the label to fetch","     * @param {Requestable.callback} [cb] - will receive the label","     * @return {Promise} - the promise for the http request","     */","","  }, {","    key: 'getLabel',","    value: function getLabel(label, cb) {","      return this._request('GET', '/repos/' + this.__repository + '/labels/' + label, null, cb);","    }","","    /**","     * Edit a label","     * @see https://developer.github.com/v3/issues/labels/#update-a-label","     * @param {string} label - the name of the label to edit","     * @param {Object} labelData - the updates to make to the label","     * @param {Requestable.callback} [cb] - will receive the updated label","     * @return {Promise} - the promise for the http request","     */","","  }, {","    key: 'editLabel',","    value: function editLabel(label, labelData, cb) {","      return this._request('PATCH', '/repos/' + this.__repository + '/labels/' + label, labelData, cb);","    }","","    /**","     * Delete a label","     * @see https://developer.github.com/v3/issues/labels/#delete-a-label","     * @param {string} label - the name of the label to delete","     * @param {Requestable.callback} [cb] - will receive the status","     * @return {Promise} - the promise for the http request","     */","","  }, {","    key: 'deleteLabel',","    value: function deleteLabel(label, cb) {","      return this._request('DELETE', '/repos/' + this.__repository + '/labels/' + label, null, cb);","    }","  }]);","","  return Issue;","}(_Requestable3.default);","","module.exports = Issue;","//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIklzc3VlLmpzIl0sIm5hbWVzIjpbIklzc3VlIiwicmVwb3NpdG9yeSIsImF1dGgiLCJhcGlCYXNlIiwiX19yZXBvc2l0b3J5IiwiaXNzdWVEYXRhIiwiY2IiLCJfcmVxdWVzdCIsIm9wdGlvbnMiLCJfcmVxdWVzdEFsbFBhZ2VzIiwiaXNzdWUiLCJpZCIsImNvbW1lbnQiLCJib2R5IiwibWlsZXN0b25lIiwibWlsZXN0b25lRGF0YSIsImxhYmVsRGF0YSIsImxhYmVsIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7OztBQU9BOzs7Ozs7Ozs7OytlQVBBOzs7Ozs7O0FBU0E7OztJQUdNQSxLOzs7QUFDSDs7Ozs7O0FBTUEsaUJBQVlDLFVBQVosRUFBd0JDLElBQXhCLEVBQThCQyxPQUE5QixFQUF1QztBQUFBOztBQUFBLDhHQUM5QkQsSUFEOEIsRUFDeEJDLE9BRHdCOztBQUVwQyxVQUFLQyxZQUFMLEdBQW9CSCxVQUFwQjtBQUZvQztBQUd0Qzs7QUFFRDs7Ozs7Ozs7Ozs7Z0NBT1lJLFMsRUFBV0MsRSxFQUFJO0FBQ3hCLGFBQU8sS0FBS0MsUUFBTCxDQUFjLE1BQWQsY0FBZ0MsS0FBS0gsWUFBckMsY0FBNERDLFNBQTVELEVBQXVFQyxFQUF2RSxDQUFQO0FBQ0Y7O0FBRUQ7Ozs7Ozs7Ozs7K0JBT1dFLE8sRUFBU0YsRSxFQUFJO0FBQ3JCLGFBQU8sS0FBS0csZ0JBQUwsYUFBZ0MsS0FBS0wsWUFBckMsY0FBNERJLE9BQTVELEVBQXFFRixFQUFyRSxDQUFQO0FBQ0Y7O0FBRUQ7Ozs7Ozs7Ozs7b0NBT2dCSSxLLEVBQU9KLEUsRUFBSTtBQUN4QixhQUFPLEtBQUtDLFFBQUwsQ0FBYyxLQUFkLGNBQStCLEtBQUtILFlBQXBDLGdCQUEyRE0sS0FBM0QsY0FBMkUsSUFBM0UsRUFBaUZKLEVBQWpGLENBQVA7QUFDRjs7QUFFRDs7Ozs7Ozs7OztzQ0FPa0JJLEssRUFBT0osRSxFQUFJO0FBQzFCLGFBQU8sS0FBS0MsUUFBTCxDQUFjLEtBQWQsY0FBK0IsS0FBS0gsWUFBcEMsZ0JBQTJETSxLQUEzRCxnQkFBNkUsSUFBN0UsRUFBbUZKLEVBQW5GLENBQVA7QUFDRjs7QUFFRDs7Ozs7Ozs7OztvQ0FPZ0JLLEUsRUFBSUwsRSxFQUFJO0FBQ3JCLGFBQU8sS0FBS0MsUUFBTCxDQUFjLEtBQWQsY0FBK0IsS0FBS0gsWUFBcEMseUJBQW9FTyxFQUFwRSxFQUEwRSxJQUExRSxFQUFnRkwsRUFBaEYsQ0FBUDtBQUNGOztBQUVEOzs7Ozs7Ozs7Ozt1Q0FRbUJJLEssRUFBT0UsTyxFQUFTTixFLEVBQUk7QUFDcEMsYUFBTyxLQUFLQyxRQUFMLENBQWMsTUFBZCxjQUFnQyxLQUFLSCxZQUFyQyxnQkFBNERNLEtBQTVELGdCQUE4RSxFQUFDRyxNQUFNRCxPQUFQLEVBQTlFLEVBQStGTixFQUEvRixDQUFQO0FBQ0Y7O0FBRUQ7Ozs7Ozs7Ozs7O3FDQVFpQkssRSxFQUFJQyxPLEVBQVNOLEUsRUFBSTtBQUMvQixhQUFPLEtBQUtDLFFBQUwsQ0FBYyxPQUFkLGNBQWlDLEtBQUtILFlBQXRDLHlCQUFzRU8sRUFBdEUsRUFBNEUsRUFBQ0UsTUFBTUQsT0FBUCxFQUE1RSxFQUE2Rk4sRUFBN0YsQ0FBUDtBQUNGOztBQUVEOzs7Ozs7Ozs7O3VDQU9tQkssRSxFQUFJTCxFLEVBQUk7QUFDeEIsYUFBTyxLQUFLQyxRQUFMLENBQWMsUUFBZCxjQUFrQyxLQUFLSCxZQUF2Qyx5QkFBdUVPLEVBQXZFLEVBQTZFLElBQTdFLEVBQW1GTCxFQUFuRixDQUFQO0FBQ0Y7O0FBRUQ7Ozs7Ozs7Ozs7OzhCQVFVSSxLLEVBQU9MLFMsRUFBV0MsRSxFQUFJO0FBQzdCLGFBQU8sS0FBS0MsUUFBTCxDQUFjLE9BQWQsY0FBaUMsS0FBS0gsWUFBdEMsZ0JBQTZETSxLQUE3RCxFQUFzRUwsU0FBdEUsRUFBaUZDLEVBQWpGLENBQVA7QUFDRjs7QUFFRDs7Ozs7Ozs7Ozs2QkFPU0ksSyxFQUFPSixFLEVBQUk7QUFDakIsYUFBTyxLQUFLQyxRQUFMLENBQWMsS0FBZCxjQUErQixLQUFLSCxZQUFwQyxnQkFBMkRNLEtBQTNELEVBQW9FLElBQXBFLEVBQTBFSixFQUExRSxDQUFQO0FBQ0Y7O0FBRUQ7Ozs7Ozs7Ozs7bUNBT2VFLE8sRUFBU0YsRSxFQUFJO0FBQ3pCLGFBQU8sS0FBS0MsUUFBTCxDQUFjLEtBQWQsY0FBK0IsS0FBS0gsWUFBcEMsa0JBQStESSxPQUEvRCxFQUF3RUYsRUFBeEUsQ0FBUDtBQUNGOztBQUVEOzs7Ozs7Ozs7O2lDQU9hUSxTLEVBQVdSLEUsRUFBSTtBQUN6QixhQUFPLEtBQUtDLFFBQUwsQ0FBYyxLQUFkLGNBQStCLEtBQUtILFlBQXBDLG9CQUErRFUsU0FBL0QsRUFBNEUsSUFBNUUsRUFBa0ZSLEVBQWxGLENBQVA7QUFDRjs7QUFFRDs7Ozs7Ozs7OztvQ0FPZ0JTLGEsRUFBZVQsRSxFQUFJO0FBQ2hDLGFBQU8sS0FBS0MsUUFBTCxDQUFjLE1BQWQsY0FBZ0MsS0FBS0gsWUFBckMsa0JBQWdFVyxhQUFoRSxFQUErRVQsRUFBL0UsQ0FBUDtBQUNGOztBQUVEOzs7Ozs7Ozs7OztrQ0FRY1EsUyxFQUFXQyxhLEVBQWVULEUsRUFBSTtBQUN6QyxhQUFPLEtBQUtDLFFBQUwsQ0FBYyxPQUFkLGNBQWlDLEtBQUtILFlBQXRDLG9CQUFpRVUsU0FBakUsRUFBOEVDLGFBQTlFLEVBQTZGVCxFQUE3RixDQUFQO0FBQ0Y7O0FBRUQ7Ozs7Ozs7Ozs7b0NBT2dCUSxTLEVBQVdSLEUsRUFBSTtBQUM1QixhQUFPLEtBQUtDLFFBQUwsQ0FBYyxRQUFkLGNBQWtDLEtBQUtILFlBQXZDLG9CQUFrRVUsU0FBbEUsRUFBK0UsSUFBL0UsRUFBcUZSLEVBQXJGLENBQVA7QUFDRjs7QUFFRDs7Ozs7Ozs7OztnQ0FPWVUsUyxFQUFXVixFLEVBQUk7QUFDeEIsYUFBTyxLQUFLQyxRQUFMLENBQWMsTUFBZCxjQUFnQyxLQUFLSCxZQUFyQyxjQUE0RFksU0FBNUQsRUFBdUVWLEVBQXZFLENBQVA7QUFDRjs7QUFFRjs7Ozs7Ozs7OzsrQkFPWUUsTyxFQUFTRixFLEVBQUk7QUFDckIsYUFBTyxLQUFLQyxRQUFMLENBQWMsS0FBZCxjQUErQixLQUFLSCxZQUFwQyxjQUEyREksT0FBM0QsRUFBb0VGLEVBQXBFLENBQVA7QUFDRjs7QUFFRjs7Ozs7Ozs7Ozs2QkFPVVcsSyxFQUFPWCxFLEVBQUk7QUFDakIsYUFBTyxLQUFLQyxRQUFMLENBQWMsS0FBZCxjQUErQixLQUFLSCxZQUFwQyxnQkFBMkRhLEtBQTNELEVBQW9FLElBQXBFLEVBQTBFWCxFQUExRSxDQUFQO0FBQ0Y7O0FBRUY7Ozs7Ozs7Ozs7OzhCQVFXVyxLLEVBQU9ELFMsRUFBV1YsRSxFQUFJO0FBQzdCLGFBQU8sS0FBS0MsUUFBTCxDQUFjLE9BQWQsY0FBaUMsS0FBS0gsWUFBdEMsZ0JBQTZEYSxLQUE3RCxFQUFzRUQsU0FBdEUsRUFBaUZWLEVBQWpGLENBQVA7QUFDRjs7QUFFRjs7Ozs7Ozs7OztnQ0FPYVcsSyxFQUFPWCxFLEVBQUk7QUFDcEIsYUFBTyxLQUFLQyxRQUFMLENBQWMsUUFBZCxjQUFrQyxLQUFLSCxZQUF2QyxnQkFBOERhLEtBQTlELEVBQXVFLElBQXZFLEVBQTZFWCxFQUE3RSxDQUFQO0FBQ0Y7Ozs7OztBQUdKWSxPQUFPQyxPQUFQLEdBQWlCbkIsS0FBakIiLCJmaWxlIjoiSXNzdWUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBmaWxlXG4gKiBAY29weXJpZ2h0ICAyMDEzIE1pY2hhZWwgQXVmcmVpdGVyIChEZXZlbG9wbWVudCBTZWVkKSBhbmQgMjAxNiBZYWhvbyBJbmMuXG4gKiBAbGljZW5zZSAgICBMaWNlbnNlZCB1bmRlciB7QGxpbmsgaHR0cHM6Ly9zcGR4Lm9yZy9saWNlbnNlcy9CU0QtMy1DbGF1c2UtQ2xlYXIuaHRtbCBCU0QtMy1DbGF1c2UtQ2xlYXJ9LlxuICogICAgICAgICAgICAgR2l0aHViLmpzIGlzIGZyZWVseSBkaXN0cmlidXRhYmxlLlxuICovXG5cbmltcG9ydCBSZXF1ZXN0YWJsZSBmcm9tICcuL1JlcXVlc3RhYmxlJztcblxuLyoqXG4gKiBJc3N1ZSB3cmFwcyB0aGUgZnVuY3Rpb25hbGl0eSB0byBnZXQgaXNzdWVzIGZvciByZXBvc2l0b3JpZXNcbiAqL1xuY2xhc3MgSXNzdWUgZXh0ZW5kcyBSZXF1ZXN0YWJsZSB7XG4gICAvKipcbiAgICAqIENyZWF0ZSBhIG5ldyBJc3N1ZVxuICAgICogQHBhcmFtIHtzdHJpbmd9IHJlcG9zaXRvcnkgLSB0aGUgZnVsbCBuYW1lIG9mIHRoZSByZXBvc2l0b3J5IChgOnVzZXIvOnJlcG9gKSB0byBnZXQgaXNzdWVzIGZvclxuICAgICogQHBhcmFtIHtSZXF1ZXN0YWJsZS5hdXRofSBbYXV0aF0gLSBpbmZvcm1hdGlvbiByZXF1aXJlZCB0byBhdXRoZW50aWNhdGUgdG8gR2l0aHViXG4gICAgKiBAcGFyYW0ge3N0cmluZ30gW2FwaUJhc2U9aHR0cHM6Ly9hcGkuZ2l0aHViLmNvbV0gLSB0aGUgYmFzZSBHaXRodWIgQVBJIFVSTFxuICAgICovXG4gICBjb25zdHJ1Y3RvcihyZXBvc2l0b3J5LCBhdXRoLCBhcGlCYXNlKSB7XG4gICAgICBzdXBlcihhdXRoLCBhcGlCYXNlKTtcbiAgICAgIHRoaXMuX19yZXBvc2l0b3J5ID0gcmVwb3NpdG9yeTtcbiAgIH1cblxuICAgLyoqXG4gICAgKiBDcmVhdGUgYSBuZXcgaXNzdWVcbiAgICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIuZ2l0aHViLmNvbS92My9pc3N1ZXMvI2NyZWF0ZS1hbi1pc3N1ZVxuICAgICogQHBhcmFtIHtPYmplY3R9IGlzc3VlRGF0YSAtIHRoZSBpc3N1ZSB0byBjcmVhdGVcbiAgICAqIEBwYXJhbSB7UmVxdWVzdGFibGUuY2FsbGJhY2t9IFtjYl0gLSB3aWxsIHJlY2VpdmUgdGhlIGNyZWF0ZWQgaXNzdWVcbiAgICAqIEByZXR1cm4ge1Byb21pc2V9IC0gdGhlIHByb21pc2UgZm9yIHRoZSBodHRwIHJlcXVlc3RcbiAgICAqL1xuICAgY3JlYXRlSXNzdWUoaXNzdWVEYXRhLCBjYikge1xuICAgICAgcmV0dXJuIHRoaXMuX3JlcXVlc3QoJ1BPU1QnLCBgL3JlcG9zLyR7dGhpcy5fX3JlcG9zaXRvcnl9L2lzc3Vlc2AsIGlzc3VlRGF0YSwgY2IpO1xuICAgfVxuXG4gICAvKipcbiAgICAqIExpc3QgdGhlIGlzc3VlcyBmb3IgdGhlIHJlcG9zaXRvcnlcbiAgICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIuZ2l0aHViLmNvbS92My9pc3N1ZXMvI2xpc3QtaXNzdWVzLWZvci1hLXJlcG9zaXRvcnlcbiAgICAqIEBwYXJhbSB7T2JqZWN0fSBvcHRpb25zIC0gZmlsdGVyaW5nIG9wdGlvbnNcbiAgICAqIEBwYXJhbSB7UmVxdWVzdGFibGUuY2FsbGJhY2t9IFtjYl0gLSB3aWxsIHJlY2VpdmUgdGhlIGFycmF5IG9mIGlzc3Vlc1xuICAgICogQHJldHVybiB7UHJvbWlzZX0gLSB0aGUgcHJvbWlzZSBmb3IgdGhlIGh0dHAgcmVxdWVzdFxuICAgICovXG4gICBsaXN0SXNzdWVzKG9wdGlvbnMsIGNiKSB7XG4gICAgICByZXR1cm4gdGhpcy5fcmVxdWVzdEFsbFBhZ2VzKGAvcmVwb3MvJHt0aGlzLl9fcmVwb3NpdG9yeX0vaXNzdWVzYCwgb3B0aW9ucywgY2IpO1xuICAgfVxuXG4gICAvKipcbiAgICAqIExpc3QgdGhlIGV2ZW50cyBmb3IgYW4gaXNzdWVcbiAgICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIuZ2l0aHViLmNvbS92My9pc3N1ZXMvZXZlbnRzLyNsaXN0LWV2ZW50cy1mb3ItYW4taXNzdWVcbiAgICAqIEBwYXJhbSB7bnVtYmVyfSBpc3N1ZSAtIHRoZSBpc3N1ZSB0byBnZXQgZXZlbnRzIGZvclxuICAgICogQHBhcmFtIHtSZXF1ZXN0YWJsZS5jYWxsYmFja30gW2NiXSAtIHdpbGwgcmVjZWl2ZSB0aGUgbGlzdCBvZiBldmVudHNcbiAgICAqIEByZXR1cm4ge1Byb21pc2V9IC0gdGhlIHByb21pc2UgZm9yIHRoZSBodHRwIHJlcXVlc3RcbiAgICAqL1xuICAgbGlzdElzc3VlRXZlbnRzKGlzc3VlLCBjYikge1xuICAgICAgcmV0dXJuIHRoaXMuX3JlcXVlc3QoJ0dFVCcsIGAvcmVwb3MvJHt0aGlzLl9fcmVwb3NpdG9yeX0vaXNzdWVzLyR7aXNzdWV9L2V2ZW50c2AsIG51bGwsIGNiKTtcbiAgIH1cblxuICAgLyoqXG4gICAgKiBMaXN0IGNvbW1lbnRzIG9uIGFuIGlzc3VlXG4gICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLmdpdGh1Yi5jb20vdjMvaXNzdWVzL2NvbW1lbnRzLyNsaXN0LWNvbW1lbnRzLW9uLWFuLWlzc3VlXG4gICAgKiBAcGFyYW0ge251bWJlcn0gaXNzdWUgLSB0aGUgaWQgb2YgdGhlIGlzc3VlIHRvIGdldCBjb21tZW50cyBmcm9tXG4gICAgKiBAcGFyYW0ge1JlcXVlc3RhYmxlLmNhbGxiYWNrfSBbY2JdIC0gd2lsbCByZWNlaXZlIHRoZSBjb21tZW50c1xuICAgICogQHJldHVybiB7UHJvbWlzZX0gLSB0aGUgcHJvbWlzZSBmb3IgdGhlIGh0dHAgcmVxdWVzdFxuICAgICovXG4gICBsaXN0SXNzdWVDb21tZW50cyhpc3N1ZSwgY2IpIHtcbiAgICAgIHJldHVybiB0aGlzLl9yZXF1ZXN0KCdHRVQnLCBgL3JlcG9zLyR7dGhpcy5fX3JlcG9zaXRvcnl9L2lzc3Vlcy8ke2lzc3VlfS9jb21tZW50c2AsIG51bGwsIGNiKTtcbiAgIH1cblxuICAgLyoqXG4gICAgKiBHZXQgYSBzaW5nbGUgY29tbWVudCBvbiBhbiBpc3N1ZVxuICAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5naXRodWIuY29tL3YzL2lzc3Vlcy9jb21tZW50cy8jZ2V0LWEtc2luZ2xlLWNvbW1lbnRcbiAgICAqIEBwYXJhbSB7bnVtYmVyfSBpZCAtIHRoZSBjb21tZW50IGlkIHRvIGdldFxuICAgICogQHBhcmFtIHtSZXF1ZXN0YWJsZS5jYWxsYmFja30gW2NiXSAtIHdpbGwgcmVjZWl2ZSB0aGUgY29tbWVudFxuICAgICogQHJldHVybiB7UHJvbWlzZX0gLSB0aGUgcHJvbWlzZSBmb3IgdGhlIGh0dHAgcmVxdWVzdFxuICAgICovXG4gICBnZXRJc3N1ZUNvbW1lbnQoaWQsIGNiKSB7XG4gICAgICByZXR1cm4gdGhpcy5fcmVxdWVzdCgnR0VUJywgYC9yZXBvcy8ke3RoaXMuX19yZXBvc2l0b3J5fS9pc3N1ZXMvY29tbWVudHMvJHtpZH1gLCBudWxsLCBjYik7XG4gICB9XG5cbiAgIC8qKlxuICAgICogQ29tbWVudCBvbiBhbiBpc3N1ZVxuICAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5naXRodWIuY29tL3YzL2lzc3Vlcy9jb21tZW50cy8jY3JlYXRlLWEtY29tbWVudFxuICAgICogQHBhcmFtIHtudW1iZXJ9IGlzc3VlIC0gdGhlIGlkIG9mIHRoZSBpc3N1ZSB0byBjb21tZW50IG9uXG4gICAgKiBAcGFyYW0ge3N0cmluZ30gY29tbWVudCAtIHRoZSBjb21tZW50IHRvIGFkZFxuICAgICogQHBhcmFtIHtSZXF1ZXN0YWJsZS5jYWxsYmFja30gW2NiXSAtIHdpbGwgcmVjZWl2ZSB0aGUgY3JlYXRlZCBjb21tZW50XG4gICAgKiBAcmV0dXJuIHtQcm9taXNlfSAtIHRoZSBwcm9taXNlIGZvciB0aGUgaHR0cCByZXF1ZXN0XG4gICAgKi9cbiAgIGNyZWF0ZUlzc3VlQ29tbWVudChpc3N1ZSwgY29tbWVudCwgY2IpIHtcbiAgICAgIHJldHVybiB0aGlzLl9yZXF1ZXN0KCdQT1NUJywgYC9yZXBvcy8ke3RoaXMuX19yZXBvc2l0b3J5fS9pc3N1ZXMvJHtpc3N1ZX0vY29tbWVudHNgLCB7Ym9keTogY29tbWVudH0sIGNiKTtcbiAgIH1cblxuICAgLyoqXG4gICAgKiBFZGl0IGEgY29tbWVudCBvbiBhbiBpc3N1ZVxuICAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5naXRodWIuY29tL3YzL2lzc3Vlcy9jb21tZW50cy8jZWRpdC1hLWNvbW1lbnRcbiAgICAqIEBwYXJhbSB7bnVtYmVyfSBpZCAtIHRoZSBjb21tZW50IGlkIHRvIGVkaXRcbiAgICAqIEBwYXJhbSB7c3RyaW5nfSBjb21tZW50IC0gdGhlIGNvbW1lbnQgdG8gZWRpdFxuICAgICogQHBhcmFtIHtSZXF1ZXN0YWJsZS5jYWxsYmFja30gW2NiXSAtIHdpbGwgcmVjZWl2ZSB0aGUgZWRpdGVkIGNvbW1lbnRcbiAgICAqIEByZXR1cm4ge1Byb21pc2V9IC0gdGhlIHByb21pc2UgZm9yIHRoZSBodHRwIHJlcXVlc3RcbiAgICAqL1xuICAgZWRpdElzc3VlQ29tbWVudChpZCwgY29tbWVudCwgY2IpIHtcbiAgICAgIHJldHVybiB0aGlzLl9yZXF1ZXN0KCdQQVRDSCcsIGAvcmVwb3MvJHt0aGlzLl9fcmVwb3NpdG9yeX0vaXNzdWVzL2NvbW1lbnRzLyR7aWR9YCwge2JvZHk6IGNvbW1lbnR9LCBjYik7XG4gICB9XG5cbiAgIC8qKlxuICAgICogRGVsZXRlIGEgY29tbWVudCBvbiBhbiBpc3N1ZVxuICAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5naXRodWIuY29tL3YzL2lzc3Vlcy9jb21tZW50cy8jZGVsZXRlLWEtY29tbWVudFxuICAgICogQHBhcmFtIHtudW1iZXJ9IGlkIC0gdGhlIGNvbW1lbnQgaWQgdG8gZGVsZXRlXG4gICAgKiBAcGFyYW0ge1JlcXVlc3RhYmxlLmNhbGxiYWNrfSBbY2JdIC0gd2lsbCByZWNlaXZlIHRydWUgaWYgdGhlIHJlcXVlc3QgaXMgc3VjY2Vzc2Z1bFxuICAgICogQHJldHVybiB7UHJvbWlzZX0gLSB0aGUgcHJvbWlzZSBmb3IgdGhlIGh0dHAgcmVxdWVzdFxuICAgICovXG4gICBkZWxldGVJc3N1ZUNvbW1lbnQoaWQsIGNiKSB7XG4gICAgICByZXR1cm4gdGhpcy5fcmVxdWVzdCgnREVMRVRFJywgYC9yZXBvcy8ke3RoaXMuX19yZXBvc2l0b3J5fS9pc3N1ZXMvY29tbWVudHMvJHtpZH1gLCBudWxsLCBjYik7XG4gICB9XG5cbiAgIC8qKlxuICAgICogRWRpdCBhbiBpc3N1ZVxuICAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5naXRodWIuY29tL3YzL2lzc3Vlcy8jZWRpdC1hbi1pc3N1ZVxuICAgICogQHBhcmFtIHtudW1iZXJ9IGlzc3VlIC0gdGhlIGlzc3VlIG51bWJlciB0byBlZGl0XG4gICAgKiBAcGFyYW0ge09iamVjdH0gaXNzdWVEYXRhIC0gdGhlIG5ldyBpc3N1ZSBkYXRhXG4gICAgKiBAcGFyYW0ge1JlcXVlc3RhYmxlLmNhbGxiYWNrfSBbY2JdIC0gd2lsbCByZWNlaXZlIHRoZSBtb2RpZmllZCBpc3N1ZVxuICAgICogQHJldHVybiB7UHJvbWlzZX0gLSB0aGUgcHJvbWlzZSBmb3IgdGhlIGh0dHAgcmVxdWVzdFxuICAgICovXG4gICBlZGl0SXNzdWUoaXNzdWUsIGlzc3VlRGF0YSwgY2IpIHtcbiAgICAgIHJldHVybiB0aGlzLl9yZXF1ZXN0KCdQQVRDSCcsIGAvcmVwb3MvJHt0aGlzLl9fcmVwb3NpdG9yeX0vaXNzdWVzLyR7aXNzdWV9YCwgaXNzdWVEYXRhLCBjYik7XG4gICB9XG5cbiAgIC8qKlxuICAgICogR2V0IGEgcGFydGljdWxhciBpc3N1ZVxuICAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5naXRodWIuY29tL3YzL2lzc3Vlcy8jZ2V0LWEtc2luZ2xlLWlzc3VlXG4gICAgKiBAcGFyYW0ge251bWJlcn0gaXNzdWUgLSB0aGUgaXNzdWUgbnVtYmVyIHRvIGZldGNoXG4gICAgKiBAcGFyYW0ge1JlcXVlc3RhYmxlLmNhbGxiYWNrfSBbY2JdIC0gd2lsbCByZWNlaXZlIHRoZSBpc3N1ZVxuICAgICogQHJldHVybiB7UHJvbWlzZX0gLSB0aGUgcHJvbWlzZSBmb3IgdGhlIGh0dHAgcmVxdWVzdFxuICAgICovXG4gICBnZXRJc3N1ZShpc3N1ZSwgY2IpIHtcbiAgICAgIHJldHVybiB0aGlzLl9yZXF1ZXN0KCdHRVQnLCBgL3JlcG9zLyR7dGhpcy5fX3JlcG9zaXRvcnl9L2lzc3Vlcy8ke2lzc3VlfWAsIG51bGwsIGNiKTtcbiAgIH1cblxuICAgLyoqXG4gICAgKiBMaXN0IHRoZSBtaWxlc3RvbmVzIGZvciB0aGUgcmVwb3NpdG9yeVxuICAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5naXRodWIuY29tL3YzL2lzc3Vlcy9taWxlc3RvbmVzLyNsaXN0LW1pbGVzdG9uZXMtZm9yLWEtcmVwb3NpdG9yeVxuICAgICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnMgLSBmaWx0ZXJpbmcgb3B0aW9uc1xuICAgICogQHBhcmFtIHtSZXF1ZXN0YWJsZS5jYWxsYmFja30gW2NiXSAtIHdpbGwgcmVjZWl2ZSB0aGUgYXJyYXkgb2YgbWlsZXN0b25lc1xuICAgICogQHJldHVybiB7UHJvbWlzZX0gLSB0aGUgcHJvbWlzZSBmb3IgdGhlIGh0dHAgcmVxdWVzdFxuICAgICovXG4gICBsaXN0TWlsZXN0b25lcyhvcHRpb25zLCBjYikge1xuICAgICAgcmV0dXJuIHRoaXMuX3JlcXVlc3QoJ0dFVCcsIGAvcmVwb3MvJHt0aGlzLl9fcmVwb3NpdG9yeX0vbWlsZXN0b25lc2AsIG9wdGlvbnMsIGNiKTtcbiAgIH1cblxuICAgLyoqXG4gICAgKiBHZXQgYSBtaWxlc3RvbmVcbiAgICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIuZ2l0aHViLmNvbS92My9pc3N1ZXMvbWlsZXN0b25lcy8jZ2V0LWEtc2luZ2xlLW1pbGVzdG9uZVxuICAgICogQHBhcmFtIHtzdHJpbmd9IG1pbGVzdG9uZSAtIHRoZSBpZCBvZiB0aGUgbWlsZXN0b25lIHRvIGZldGNoXG4gICAgKiBAcGFyYW0ge1JlcXVlc3RhYmxlLmNhbGxiYWNrfSBbY2JdIC0gd2lsbCByZWNlaXZlIHRoZSBtaWxlc3RvbmVcbiAgICAqIEByZXR1cm4ge1Byb21pc2V9IC0gdGhlIHByb21pc2UgZm9yIHRoZSBodHRwIHJlcXVlc3RcbiAgICAqL1xuICAgZ2V0TWlsZXN0b25lKG1pbGVzdG9uZSwgY2IpIHtcbiAgICAgIHJldHVybiB0aGlzLl9yZXF1ZXN0KCdHRVQnLCBgL3JlcG9zLyR7dGhpcy5fX3JlcG9zaXRvcnl9L21pbGVzdG9uZXMvJHttaWxlc3RvbmV9YCwgbnVsbCwgY2IpO1xuICAgfVxuXG4gICAvKipcbiAgICAqIENyZWF0ZSBhIG5ldyBtaWxlc3RvbmVcbiAgICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIuZ2l0aHViLmNvbS92My9pc3N1ZXMvbWlsZXN0b25lcy8jY3JlYXRlLWEtbWlsZXN0b25lXG4gICAgKiBAcGFyYW0ge09iamVjdH0gbWlsZXN0b25lRGF0YSAtIHRoZSBtaWxlc3RvbmUgZGVmaW5pdGlvblxuICAgICogQHBhcmFtIHtSZXF1ZXN0YWJsZS5jYWxsYmFja30gW2NiXSAtIHdpbGwgcmVjZWl2ZSB0aGUgbWlsZXN0b25lXG4gICAgKiBAcmV0dXJuIHtQcm9taXNlfSAtIHRoZSBwcm9taXNlIGZvciB0aGUgaHR0cCByZXF1ZXN0XG4gICAgKi9cbiAgIGNyZWF0ZU1pbGVzdG9uZShtaWxlc3RvbmVEYXRhLCBjYikge1xuICAgICAgcmV0dXJuIHRoaXMuX3JlcXVlc3QoJ1BPU1QnLCBgL3JlcG9zLyR7dGhpcy5fX3JlcG9zaXRvcnl9L21pbGVzdG9uZXNgLCBtaWxlc3RvbmVEYXRhLCBjYik7XG4gICB9XG5cbiAgIC8qKlxuICAgICogRWRpdCBhIG1pbGVzdG9uZVxuICAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5naXRodWIuY29tL3YzL2lzc3Vlcy9taWxlc3RvbmVzLyN1cGRhdGUtYS1taWxlc3RvbmVcbiAgICAqIEBwYXJhbSB7c3RyaW5nfSBtaWxlc3RvbmUgLSB0aGUgaWQgb2YgdGhlIG1pbGVzdG9uZSB0byBlZGl0XG4gICAgKiBAcGFyYW0ge09iamVjdH0gbWlsZXN0b25lRGF0YSAtIHRoZSB1cGRhdGVzIHRvIG1ha2UgdG8gdGhlIG1pbGVzdG9uZVxuICAgICogQHBhcmFtIHtSZXF1ZXN0YWJsZS5jYWxsYmFja30gW2NiXSAtIHdpbGwgcmVjZWl2ZSB0aGUgdXBkYXRlZCBtaWxlc3RvbmVcbiAgICAqIEByZXR1cm4ge1Byb21pc2V9IC0gdGhlIHByb21pc2UgZm9yIHRoZSBodHRwIHJlcXVlc3RcbiAgICAqL1xuICAgZWRpdE1pbGVzdG9uZShtaWxlc3RvbmUsIG1pbGVzdG9uZURhdGEsIGNiKSB7XG4gICAgICByZXR1cm4gdGhpcy5fcmVxdWVzdCgnUEFUQ0gnLCBgL3JlcG9zLyR7dGhpcy5fX3JlcG9zaXRvcnl9L21pbGVzdG9uZXMvJHttaWxlc3RvbmV9YCwgbWlsZXN0b25lRGF0YSwgY2IpO1xuICAgfVxuXG4gICAvKipcbiAgICAqIERlbGV0ZSBhIG1pbGVzdG9uZSAodGhpcyBpcyBkaXN0aW5jdCBmcm9tIGNsb3NpbmcgYSBtaWxlc3RvbmUpXG4gICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLmdpdGh1Yi5jb20vdjMvaXNzdWVzL21pbGVzdG9uZXMvI2RlbGV0ZS1hLW1pbGVzdG9uZVxuICAgICogQHBhcmFtIHtzdHJpbmd9IG1pbGVzdG9uZSAtIHRoZSBpZCBvZiB0aGUgbWlsZXN0b25lIHRvIGRlbGV0ZVxuICAgICogQHBhcmFtIHtSZXF1ZXN0YWJsZS5jYWxsYmFja30gW2NiXSAtIHdpbGwgcmVjZWl2ZSB0aGUgc3RhdHVzXG4gICAgKiBAcmV0dXJuIHtQcm9taXNlfSAtIHRoZSBwcm9taXNlIGZvciB0aGUgaHR0cCByZXF1ZXN0XG4gICAgKi9cbiAgIGRlbGV0ZU1pbGVzdG9uZShtaWxlc3RvbmUsIGNiKSB7XG4gICAgICByZXR1cm4gdGhpcy5fcmVxdWVzdCgnREVMRVRFJywgYC9yZXBvcy8ke3RoaXMuX19yZXBvc2l0b3J5fS9taWxlc3RvbmVzLyR7bWlsZXN0b25lfWAsIG51bGwsIGNiKTtcbiAgIH1cblxuICAgLyoqXG4gICAgKiBDcmVhdGUgYSBuZXcgbGFiZWxcbiAgICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIuZ2l0aHViLmNvbS92My9pc3N1ZXMvbGFiZWxzLyNjcmVhdGUtYS1sYWJlbFxuICAgICogQHBhcmFtIHtPYmplY3R9IGxhYmVsRGF0YSAtIHRoZSBsYWJlbCBkZWZpbml0aW9uXG4gICAgKiBAcGFyYW0ge1JlcXVlc3RhYmxlLmNhbGxiYWNrfSBbY2JdIC0gd2lsbCByZWNlaXZlIHRoZSBvYmplY3QgcmVwcmVzZW50aW5nIHRoZSBsYWJlbFxuICAgICogQHJldHVybiB7UHJvbWlzZX0gLSB0aGUgcHJvbWlzZSBmb3IgdGhlIGh0dHAgcmVxdWVzdFxuICAgICovXG4gICBjcmVhdGVMYWJlbChsYWJlbERhdGEsIGNiKSB7XG4gICAgICByZXR1cm4gdGhpcy5fcmVxdWVzdCgnUE9TVCcsIGAvcmVwb3MvJHt0aGlzLl9fcmVwb3NpdG9yeX0vbGFiZWxzYCwgbGFiZWxEYXRhLCBjYik7XG4gICB9XG5cbiAgLyoqXG4gICAqIExpc3QgdGhlIGxhYmVscyBmb3IgdGhlIHJlcG9zaXRvcnlcbiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5naXRodWIuY29tL3YzL2lzc3Vlcy9sYWJlbHMvI2xpc3QtYWxsLWxhYmVscy1mb3ItdGhpcy1yZXBvc2l0b3J5XG4gICAqIEBwYXJhbSB7T2JqZWN0fSBvcHRpb25zIC0gZmlsdGVyaW5nIG9wdGlvbnNcbiAgICogQHBhcmFtIHtSZXF1ZXN0YWJsZS5jYWxsYmFja30gW2NiXSAtIHdpbGwgcmVjZWl2ZSB0aGUgYXJyYXkgb2YgbGFiZWxzXG4gICAqIEByZXR1cm4ge1Byb21pc2V9IC0gdGhlIHByb21pc2UgZm9yIHRoZSBodHRwIHJlcXVlc3RcbiAgICovXG4gICBsaXN0TGFiZWxzKG9wdGlvbnMsIGNiKSB7XG4gICAgICByZXR1cm4gdGhpcy5fcmVxdWVzdCgnR0VUJywgYC9yZXBvcy8ke3RoaXMuX19yZXBvc2l0b3J5fS9sYWJlbHNgLCBvcHRpb25zLCBjYik7XG4gICB9XG5cbiAgLyoqXG4gICAqIEdldCBhIGxhYmVsXG4gICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIuZ2l0aHViLmNvbS92My9pc3N1ZXMvbGFiZWxzLyNnZXQtYS1zaW5nbGUtbGFiZWxcbiAgICogQHBhcmFtIHtzdHJpbmd9IGxhYmVsIC0gdGhlIG5hbWUgb2YgdGhlIGxhYmVsIHRvIGZldGNoXG4gICAqIEBwYXJhbSB7UmVxdWVzdGFibGUuY2FsbGJhY2t9IFtjYl0gLSB3aWxsIHJlY2VpdmUgdGhlIGxhYmVsXG4gICAqIEByZXR1cm4ge1Byb21pc2V9IC0gdGhlIHByb21pc2UgZm9yIHRoZSBodHRwIHJlcXVlc3RcbiAgICovXG4gICBnZXRMYWJlbChsYWJlbCwgY2IpIHtcbiAgICAgIHJldHVybiB0aGlzLl9yZXF1ZXN0KCdHRVQnLCBgL3JlcG9zLyR7dGhpcy5fX3JlcG9zaXRvcnl9L2xhYmVscy8ke2xhYmVsfWAsIG51bGwsIGNiKTtcbiAgIH1cblxuICAvKipcbiAgICogRWRpdCBhIGxhYmVsXG4gICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIuZ2l0aHViLmNvbS92My9pc3N1ZXMvbGFiZWxzLyN1cGRhdGUtYS1sYWJlbFxuICAgKiBAcGFyYW0ge3N0cmluZ30gbGFiZWwgLSB0aGUgbmFtZSBvZiB0aGUgbGFiZWwgdG8gZWRpdFxuICAgKiBAcGFyYW0ge09iamVjdH0gbGFiZWxEYXRhIC0gdGhlIHVwZGF0ZXMgdG8gbWFrZSB0byB0aGUgbGFiZWxcbiAgICogQHBhcmFtIHtSZXF1ZXN0YWJsZS5jYWxsYmFja30gW2NiXSAtIHdpbGwgcmVjZWl2ZSB0aGUgdXBkYXRlZCBsYWJlbFxuICAgKiBAcmV0dXJuIHtQcm9taXNlfSAtIHRoZSBwcm9taXNlIGZvciB0aGUgaHR0cCByZXF1ZXN0XG4gICAqL1xuICAgZWRpdExhYmVsKGxhYmVsLCBsYWJlbERhdGEsIGNiKSB7XG4gICAgICByZXR1cm4gdGhpcy5fcmVxdWVzdCgnUEFUQ0gnLCBgL3JlcG9zLyR7dGhpcy5fX3JlcG9zaXRvcnl9L2xhYmVscy8ke2xhYmVsfWAsIGxhYmVsRGF0YSwgY2IpO1xuICAgfVxuXG4gIC8qKlxuICAgKiBEZWxldGUgYSBsYWJlbFxuICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLmdpdGh1Yi5jb20vdjMvaXNzdWVzL2xhYmVscy8jZGVsZXRlLWEtbGFiZWxcbiAgICogQHBhcmFtIHtzdHJpbmd9IGxhYmVsIC0gdGhlIG5hbWUgb2YgdGhlIGxhYmVsIHRvIGRlbGV0ZVxuICAgKiBAcGFyYW0ge1JlcXVlc3RhYmxlLmNhbGxiYWNrfSBbY2JdIC0gd2lsbCByZWNlaXZlIHRoZSBzdGF0dXNcbiAgICogQHJldHVybiB7UHJvbWlzZX0gLSB0aGUgcHJvbWlzZSBmb3IgdGhlIGh0dHAgcmVxdWVzdFxuICAgKi9cbiAgIGRlbGV0ZUxhYmVsKGxhYmVsLCBjYikge1xuICAgICAgcmV0dXJuIHRoaXMuX3JlcXVlc3QoJ0RFTEVURScsIGAvcmVwb3MvJHt0aGlzLl9fcmVwb3NpdG9yeX0vbGFiZWxzLyR7bGFiZWx9YCwgbnVsbCwgY2IpO1xuICAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IElzc3VlO1xuIl19","//# sourceMappingURL=Issue.js.map",""],"l":{"3":20,"5":1,"7":1,"9":1,"11":1,"13":1,"15":1,"25":1,"26":1,"34":1,"35":0,"37":0,"39":0,"40":0,"52":1,"55":0,"69":0,"83":0,"97":0,"111":0,"126":0,"141":0,"155":0,"170":0,"184":0,"198":0,"212":0,"226":0,"241":0,"255":0,"269":0,"283":0,"297":0,"312":0,"326":0,"330":1,"333":1}},"/home/travis/build/npmtest/node-npmtest-github-api/node_modules/github-api/dist/components/Search.js":{"path":"/home/travis/build/npmtest/node-npmtest-github-api/node_modules/github-api/dist/components/Search.js","s":{"1":1,"2":1,"3":1,"4":5,"5":5,"6":5,"7":5,"8":5,"9":5,"10":1,"11":1,"12":1,"13":1,"14":0,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":2,"22":1,"23":0,"24":0,"25":1,"26":0,"27":0,"28":0,"29":1,"30":1,"31":0,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":0,"40":0,"41":0,"42":0,"43":1,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":1,"59":1},"b":{"1":[5,5],"2":[5,0],"3":[1,0],"4":[0,1],"5":[0,2],"6":[2,2],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0,0],"11":[0,1],"12":[1,0],"13":[1,1],"14":[1,0],"15":[1,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0]},"f":{"1":1,"2":1,"3":1,"4":2,"5":0,"6":0,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"fnMap":{"1":{"name":"(anonymous_1)","line":3,"loc":{"start":{"line":3,"column":19},"end":{"line":3,"column":31}}},"2":{"name":"defineProperties","line":3,"loc":{"start":{"line":3,"column":33},"end":{"line":3,"column":74}}},"3":{"name":"(anonymous_3)","line":3,"loc":{"start":{"line":3,"column":357},"end":{"line":3,"column":405}}},"4":{"name":"_interopRequireDefault","line":13,"loc":{"start":{"line":13,"column":0},"end":{"line":13,"column":37}}},"5":{"name":"_classCallCheck","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":48}}},"6":{"name":"_possibleConstructorReturn","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":48}}},"7":{"name":"_inherits","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":41}}},"8":{"name":"(anonymous_8)","line":32,"loc":{"start":{"line":32,"column":13},"end":{"line":32,"column":37}}},"9":{"name":"Search","line":41,"loc":{"start":{"line":41,"column":2},"end":{"line":41,"column":43}}},"10":{"name":"_search","line":71,"loc":{"start":{"line":71,"column":11},"end":{"line":71,"column":34}}},"11":{"name":"(anonymous_11)","line":78,"loc":{"start":{"line":78,"column":43},"end":{"line":78,"column":59}}},"12":{"name":"(anonymous_12)","line":81,"loc":{"start":{"line":81,"column":39},"end":{"line":81,"column":55}}},"13":{"name":"forRepositories","line":99,"loc":{"start":{"line":99,"column":11},"end":{"line":99,"column":49}}},"14":{"name":"forCode","line":113,"loc":{"start":{"line":113,"column":11},"end":{"line":113,"column":41}}},"15":{"name":"forIssues","line":127,"loc":{"start":{"line":127,"column":11},"end":{"line":127,"column":43}}},"16":{"name":"forUsers","line":141,"loc":{"start":{"line":141,"column":11},"end":{"line":141,"column":42}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":564}},"2":{"start":{"line":3,"column":33},"end":{"line":3,"column":349}},"3":{"start":{"line":3,"column":76},"end":{"line":3,"column":347}},"4":{"start":{"line":3,"column":117},"end":{"line":3,"column":143}},"5":{"start":{"line":3,"column":144},"end":{"line":3,"column":199}},"6":{"start":{"line":3,"column":200},"end":{"line":3,"column":231}},"7":{"start":{"line":3,"column":232},"end":{"line":3,"column":286}},"8":{"start":{"line":3,"column":259},"end":{"line":3,"column":286}},"9":{"start":{"line":3,"column":287},"end":{"line":3,"column":345}},"10":{"start":{"line":3,"column":350},"end":{"line":3,"column":559}},"11":{"start":{"line":3,"column":407},"end":{"line":3,"column":475}},"12":{"start":{"line":3,"column":423},"end":{"line":3,"column":475}},"13":{"start":{"line":3,"column":476},"end":{"line":3,"column":536}},"14":{"start":{"line":3,"column":493},"end":{"line":3,"column":536}},"15":{"start":{"line":3,"column":537},"end":{"line":3,"column":556}},"16":{"start":{"line":5,"column":0},"end":{"line":5,"column":45}},"17":{"start":{"line":7,"column":0},"end":{"line":7,"column":58}},"18":{"start":{"line":9,"column":0},"end":{"line":9,"column":30}},"19":{"start":{"line":11,"column":0},"end":{"line":11,"column":45}},"20":{"start":{"line":13,"column":0},"end":{"line":13,"column":95}},"21":{"start":{"line":13,"column":39},"end":{"line":13,"column":93}},"22":{"start":{"line":15,"column":0},"end":{"line":15,"column":153}},"23":{"start":{"line":15,"column":50},"end":{"line":15,"column":151}},"24":{"start":{"line":15,"column":92},"end":{"line":15,"column":149}},"25":{"start":{"line":17,"column":0},"end":{"line":17,"column":240}},"26":{"start":{"line":17,"column":50},"end":{"line":17,"column":151}},"27":{"start":{"line":17,"column":63},"end":{"line":17,"column":149}},"28":{"start":{"line":17,"column":152},"end":{"line":17,"column":238}},"29":{"start":{"line":19,"column":0},"end":{"line":19,"column":494}},"30":{"start":{"line":19,"column":43},"end":{"line":19,"column":208}},"31":{"start":{"line":19,"column":106},"end":{"line":19,"column":206}},"32":{"start":{"line":19,"column":209},"end":{"line":19,"column":373}},"33":{"start":{"line":19,"column":374},"end":{"line":19,"column":492}},"34":{"start":{"line":19,"column":390},"end":{"line":19,"column":492}},"35":{"start":{"line":26,"column":0},"end":{"line":26,"column":48}},"36":{"start":{"line":32,"column":0},"end":{"line":147,"column":25}},"37":{"start":{"line":33,"column":2},"end":{"line":33,"column":34}},"38":{"start":{"line":41,"column":2},"end":{"line":48,"column":3}},"39":{"start":{"line":42,"column":4},"end":{"line":42,"column":34}},"40":{"start":{"line":44,"column":4},"end":{"line":44,"column":128}},"41":{"start":{"line":46,"column":4},"end":{"line":46,"column":63}},"42":{"start":{"line":47,"column":4},"end":{"line":47,"column":17}},"43":{"start":{"line":69,"column":2},"end":{"line":144,"column":6}},"44":{"start":{"line":72,"column":6},"end":{"line":72,"column":24}},"45":{"start":{"line":74,"column":6},"end":{"line":74,"column":95}},"46":{"start":{"line":75,"column":6},"end":{"line":75,"column":93}},"47":{"start":{"line":77,"column":6},"end":{"line":77,"column":30}},"48":{"start":{"line":78,"column":6},"end":{"line":80,"column":9}},"49":{"start":{"line":79,"column":8},"end":{"line":79,"column":55}},"50":{"start":{"line":81,"column":6},"end":{"line":83,"column":9}},"51":{"start":{"line":82,"column":8},"end":{"line":82,"column":49}},"52":{"start":{"line":85,"column":6},"end":{"line":85,"column":66}},"53":{"start":{"line":86,"column":6},"end":{"line":86,"column":74}},"54":{"start":{"line":100,"column":6},"end":{"line":100,"column":55}},"55":{"start":{"line":114,"column":6},"end":{"line":114,"column":47}},"56":{"start":{"line":128,"column":6},"end":{"line":128,"column":49}},"57":{"start":{"line":142,"column":6},"end":{"line":142,"column":48}},"58":{"start":{"line":146,"column":2},"end":{"line":146,"column":16}},"59":{"start":{"line":149,"column":0},"end":{"line":149,"column":24}}},"branchMap":{"1":{"line":3,"type":"binary-expr","locations":[{"start":{"line":3,"column":168},"end":{"line":3,"column":189}},{"start":{"line":3,"column":193},"end":{"line":3,"column":198}}]},"2":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":232},"end":{"line":3,"column":232}},{"start":{"line":3,"column":232},"end":{"line":3,"column":232}}]},"3":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":407},"end":{"line":3,"column":407}},{"start":{"line":3,"column":407},"end":{"line":3,"column":407}}]},"4":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":476},"end":{"line":3,"column":476}},{"start":{"line":3,"column":476},"end":{"line":3,"column":476}}]},"5":{"line":13,"type":"cond-expr","locations":[{"start":{"line":13,"column":70},"end":{"line":13,"column":73}},{"start":{"line":13,"column":76},"end":{"line":13,"column":92}}]},"6":{"line":13,"type":"binary-expr","locations":[{"start":{"line":13,"column":46},"end":{"line":13,"column":49}},{"start":{"line":13,"column":53},"end":{"line":13,"column":67}}]},"7":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":50},"end":{"line":15,"column":50}},{"start":{"line":15,"column":50},"end":{"line":15,"column":50}}]},"8":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":50},"end":{"line":17,"column":50}},{"start":{"line":17,"column":50},"end":{"line":17,"column":50}}]},"9":{"line":17,"type":"cond-expr","locations":[{"start":{"line":17,"column":226},"end":{"line":17,"column":230}},{"start":{"line":17,"column":233},"end":{"line":17,"column":237}}]},"10":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":159},"end":{"line":17,"column":163}},{"start":{"line":17,"column":168},"end":{"line":17,"column":192}},{"start":{"line":17,"column":196},"end":{"line":17,"column":222}}]},"11":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":43},"end":{"line":19,"column":43}},{"start":{"line":19,"column":43},"end":{"line":19,"column":43}}]},"12":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":47},"end":{"line":19,"column":79}},{"start":{"line":19,"column":83},"end":{"line":19,"column":102}}]},"13":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":244},"end":{"line":19,"column":254}},{"start":{"line":19,"column":258},"end":{"line":19,"column":278}}]},"14":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":374},"end":{"line":19,"column":374}},{"start":{"line":19,"column":374},"end":{"line":19,"column":374}}]},"15":{"line":19,"type":"cond-expr","locations":[{"start":{"line":19,"column":414},"end":{"line":19,"column":457}},{"start":{"line":19,"column":460},"end":{"line":19,"column":491}}]},"16":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":50},"end":{"line":44,"column":66}},{"start":{"line":44,"column":70},"end":{"line":44,"column":99}}]},"17":{"line":74,"type":"cond-expr","locations":[{"start":{"line":74,"column":77},"end":{"line":74,"column":89}},{"start":{"line":74,"column":92},"end":{"line":74,"column":94}}]},"18":{"line":74,"type":"binary-expr","locations":[{"start":{"line":74,"column":24},"end":{"line":74,"column":44}},{"start":{"line":74,"column":48},"end":{"line":74,"column":74}}]},"19":{"line":75,"type":"cond-expr","locations":[{"start":{"line":75,"column":68},"end":{"line":75,"column":80}},{"start":{"line":75,"column":83},"end":{"line":75,"column":92}}]},"20":{"line":75,"type":"binary-expr","locations":[{"start":{"line":75,"column":15},"end":{"line":75,"column":35}},{"start":{"line":75,"column":39},"end":{"line":75,"column":65}}]}},"code":["'use strict';","","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();","","var _Requestable2 = require('./Requestable');","","var _Requestable3 = _interopRequireDefault(_Requestable2);","","var _debug = require('debug');","","var _debug2 = _interopRequireDefault(_debug);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }","","function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }","","function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }filecopyright  2013 Michael Aufreiter (Development Seed) and 2016 Yahoo Inclicense    Licensed under {@link https://spdx.org/licenses/BSD-3-Clause-Clear.html BSD-3-Clause-Clear}ithub.js is freely distributablevar log = (0, _debug2.default)('github:search');","","/**"," * Wrap the Search API"," */","","var Search = function (_Requestable) {","  _inherits(Search, _Requestable);","","  /**","   * Create a Search","   * @param {Object} defaults - defaults for the search","   * @param {Requestable.auth} [auth] - information required to authenticate to Github","   * @param {string} [apiBase=https://api.github.com] - the base Github API URL","   */","  function Search(defaults, auth, apiBase) {","    _classCallCheck(this, Search);","","    var _this = _possibleConstructorReturn(this, (Search.__proto__ || Object.getPrototypeOf(Search)).call(this, auth, apiBase));","","    _this.__defaults = _this._getOptionsWithDefaults(defaults);","    return _this;","  }","","  /**","   * Available search options","   * @see https://developer.github.com/v3/search/#parameters","   * @typedef {Object} Search.Params","   * @param {string} q - the query to make","   * @param {string} sort - the sort field, one of `stars`, `forks`, or `updated`.","   *                      Default is [best match](https://developer.github.com/v3/search/#ranking-search-results)","   * @param {string} order - the ordering, either `asc` or `desc`","   */","  /**","   * Perform a search on the GitHub API","   * @private","   * @param {string} path - the scope of the search","   * @param {Search.Params} [withOptions] - additional parameters for the search","   * @param {Requestable.callback} [cb] - will receive the results of the search","   * @return {Promise} - the promise for the http request","   */","","","  _createClass(Search, [{","    key: '_search',","    value: function _search(path) {","      var _this2 = this;","","      var withOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};","      var cb = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;","","      var requestOptions = {};","      Object.keys(this.__defaults).forEach(function (prop) {","        requestOptions[prop] = _this2.__defaults[prop];","      });","      Object.keys(withOptions).forEach(function (prop) {","        requestOptions[prop] = withOptions[prop];","      });","","      log('searching ' + path + ' with options:', requestOptions);","      return this._requestAllPages('/search/' + path, requestOptions, cb);","    }","","    /**","     * Search for repositories","     * @see https://developer.github.com/v3/search/#search-repositories","     * @param {Search.Params} [options] - additional parameters for the search","     * @param {Requestable.callback} [cb] - will receive the results of the search","     * @return {Promise} - the promise for the http request","     */","","  }, {","    key: 'forRepositories',","    value: function forRepositories(options, cb) {","      return this._search('repositories', options, cb);","    }","","    /**","     * Search for code","     * @see https://developer.github.com/v3/search/#search-code","     * @param {Search.Params} [options] - additional parameters for the search","     * @param {Requestable.callback} [cb] - will receive the results of the search","     * @return {Promise} - the promise for the http request","     */","","  }, {","    key: 'forCode',","    value: function forCode(options, cb) {","      return this._search('code', options, cb);","    }","","    /**","     * Search for issues","     * @see https://developer.github.com/v3/search/#search-issues","     * @param {Search.Params} [options] - additional parameters for the search","     * @param {Requestable.callback} [cb] - will receive the results of the search","     * @return {Promise} - the promise for the http request","     */","","  }, {","    key: 'forIssues',","    value: function forIssues(options, cb) {","      return this._search('issues', options, cb);","    }","","    /**","     * Search for users","     * @see https://developer.github.com/v3/search/#search-users","     * @param {Search.Params} [options] - additional parameters for the search","     * @param {Requestable.callback} [cb] - will receive the results of the search","     * @return {Promise} - the promise for the http request","     */","","  }, {","    key: 'forUsers',","    value: function forUsers(options, cb) {","      return this._search('users', options, cb);","    }","  }]);","","  return Search;","}(_Requestable3.default);","","module.exports = Search;","//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNlYXJjaC5qcyJdLCJuYW1lcyI6WyJsb2ciLCJTZWFyY2giLCJkZWZhdWx0cyIsImF1dGgiLCJhcGlCYXNlIiwiX19kZWZhdWx0cyIsIl9nZXRPcHRpb25zV2l0aERlZmF1bHRzIiwicGF0aCIsIndpdGhPcHRpb25zIiwiY2IiLCJ1bmRlZmluZWQiLCJyZXF1ZXN0T3B0aW9ucyIsIk9iamVjdCIsImtleXMiLCJmb3JFYWNoIiwicHJvcCIsIl9yZXF1ZXN0QWxsUGFnZXMiLCJvcHRpb25zIiwiX3NlYXJjaCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7Ozs7QUFPQTs7OztBQUNBOzs7Ozs7Ozs7OytlQVJBOzs7Ozs7O0FBU0EsSUFBTUEsTUFBTSxxQkFBTSxlQUFOLENBQVo7O0FBRUE7Ozs7SUFHTUMsTTs7O0FBQ0g7Ozs7OztBQU1BLGtCQUFZQyxRQUFaLEVBQXNCQyxJQUF0QixFQUE0QkMsT0FBNUIsRUFBcUM7QUFBQTs7QUFBQSxnSEFDNUJELElBRDRCLEVBQ3RCQyxPQURzQjs7QUFFbEMsVUFBS0MsVUFBTCxHQUFrQixNQUFLQyx1QkFBTCxDQUE2QkosUUFBN0IsQ0FBbEI7QUFGa0M7QUFHcEM7O0FBRUQ7Ozs7Ozs7OztBQVNBOzs7Ozs7Ozs7Ozs7NEJBUVFLLEksRUFBd0M7QUFBQTs7QUFBQSxVQUFsQ0MsV0FBa0MsdUVBQXBCLEVBQW9CO0FBQUEsVUFBaEJDLEVBQWdCLHVFQUFYQyxTQUFXOztBQUM3QyxVQUFJQyxpQkFBaUIsRUFBckI7QUFDQUMsYUFBT0MsSUFBUCxDQUFZLEtBQUtSLFVBQWpCLEVBQTZCUyxPQUE3QixDQUFxQyxVQUFDQyxJQUFELEVBQVU7QUFDNUNKLHVCQUFlSSxJQUFmLElBQXVCLE9BQUtWLFVBQUwsQ0FBZ0JVLElBQWhCLENBQXZCO0FBQ0YsT0FGRDtBQUdBSCxhQUFPQyxJQUFQLENBQVlMLFdBQVosRUFBeUJNLE9BQXpCLENBQWlDLFVBQUNDLElBQUQsRUFBVTtBQUN4Q0osdUJBQWVJLElBQWYsSUFBdUJQLFlBQVlPLElBQVosQ0FBdkI7QUFDRixPQUZEOztBQUlBZix5QkFBaUJPLElBQWpCLHFCQUF1Q0ksY0FBdkM7QUFDQSxhQUFPLEtBQUtLLGdCQUFMLGNBQWlDVCxJQUFqQyxFQUF5Q0ksY0FBekMsRUFBeURGLEVBQXpELENBQVA7QUFDRjs7QUFFRDs7Ozs7Ozs7OztvQ0FPZ0JRLE8sRUFBU1IsRSxFQUFJO0FBQzFCLGFBQU8sS0FBS1MsT0FBTCxDQUFhLGNBQWIsRUFBNkJELE9BQTdCLEVBQXNDUixFQUF0QyxDQUFQO0FBQ0Y7O0FBRUQ7Ozs7Ozs7Ozs7NEJBT1FRLE8sRUFBU1IsRSxFQUFJO0FBQ2xCLGFBQU8sS0FBS1MsT0FBTCxDQUFhLE1BQWIsRUFBcUJELE9BQXJCLEVBQThCUixFQUE5QixDQUFQO0FBQ0Y7O0FBRUQ7Ozs7Ozs7Ozs7OEJBT1VRLE8sRUFBU1IsRSxFQUFJO0FBQ3BCLGFBQU8sS0FBS1MsT0FBTCxDQUFhLFFBQWIsRUFBdUJELE9BQXZCLEVBQWdDUixFQUFoQyxDQUFQO0FBQ0Y7O0FBRUQ7Ozs7Ozs7Ozs7NkJBT1NRLE8sRUFBU1IsRSxFQUFJO0FBQ25CLGFBQU8sS0FBS1MsT0FBTCxDQUFhLE9BQWIsRUFBc0JELE9BQXRCLEVBQStCUixFQUEvQixDQUFQO0FBQ0Y7Ozs7OztBQUdKVSxPQUFPQyxPQUFQLEdBQWlCbkIsTUFBakIiLCJmaWxlIjoiU2VhcmNoLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAZmlsZVxuICogQGNvcHlyaWdodCAgMjAxMyBNaWNoYWVsIEF1ZnJlaXRlciAoRGV2ZWxvcG1lbnQgU2VlZCkgYW5kIDIwMTYgWWFob28gSW5jLlxuICogQGxpY2Vuc2UgICAgTGljZW5zZWQgdW5kZXIge0BsaW5rIGh0dHBzOi8vc3BkeC5vcmcvbGljZW5zZXMvQlNELTMtQ2xhdXNlLUNsZWFyLmh0bWwgQlNELTMtQ2xhdXNlLUNsZWFyfS5cbiAqICAgICAgICAgICAgIEdpdGh1Yi5qcyBpcyBmcmVlbHkgZGlzdHJpYnV0YWJsZS5cbiAqL1xuXG5pbXBvcnQgUmVxdWVzdGFibGUgZnJvbSAnLi9SZXF1ZXN0YWJsZSc7XG5pbXBvcnQgZGVidWcgZnJvbSAnZGVidWcnO1xuY29uc3QgbG9nID0gZGVidWcoJ2dpdGh1YjpzZWFyY2gnKTtcblxuLyoqXG4gKiBXcmFwIHRoZSBTZWFyY2ggQVBJXG4gKi9cbmNsYXNzIFNlYXJjaCBleHRlbmRzIFJlcXVlc3RhYmxlIHtcbiAgIC8qKlxuICAgICogQ3JlYXRlIGEgU2VhcmNoXG4gICAgKiBAcGFyYW0ge09iamVjdH0gZGVmYXVsdHMgLSBkZWZhdWx0cyBmb3IgdGhlIHNlYXJjaFxuICAgICogQHBhcmFtIHtSZXF1ZXN0YWJsZS5hdXRofSBbYXV0aF0gLSBpbmZvcm1hdGlvbiByZXF1aXJlZCB0byBhdXRoZW50aWNhdGUgdG8gR2l0aHViXG4gICAgKiBAcGFyYW0ge3N0cmluZ30gW2FwaUJhc2U9aHR0cHM6Ly9hcGkuZ2l0aHViLmNvbV0gLSB0aGUgYmFzZSBHaXRodWIgQVBJIFVSTFxuICAgICovXG4gICBjb25zdHJ1Y3RvcihkZWZhdWx0cywgYXV0aCwgYXBpQmFzZSkge1xuICAgICAgc3VwZXIoYXV0aCwgYXBpQmFzZSk7XG4gICAgICB0aGlzLl9fZGVmYXVsdHMgPSB0aGlzLl9nZXRPcHRpb25zV2l0aERlZmF1bHRzKGRlZmF1bHRzKTtcbiAgIH1cblxuICAgLyoqXG4gICAgKiBBdmFpbGFibGUgc2VhcmNoIG9wdGlvbnNcbiAgICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIuZ2l0aHViLmNvbS92My9zZWFyY2gvI3BhcmFtZXRlcnNcbiAgICAqIEB0eXBlZGVmIHtPYmplY3R9IFNlYXJjaC5QYXJhbXNcbiAgICAqIEBwYXJhbSB7c3RyaW5nfSBxIC0gdGhlIHF1ZXJ5IHRvIG1ha2VcbiAgICAqIEBwYXJhbSB7c3RyaW5nfSBzb3J0IC0gdGhlIHNvcnQgZmllbGQsIG9uZSBvZiBgc3RhcnNgLCBgZm9ya3NgLCBvciBgdXBkYXRlZGAuXG4gICAgKiAgICAgICAgICAgICAgICAgICAgICBEZWZhdWx0IGlzIFtiZXN0IG1hdGNoXShodHRwczovL2RldmVsb3Blci5naXRodWIuY29tL3YzL3NlYXJjaC8jcmFua2luZy1zZWFyY2gtcmVzdWx0cylcbiAgICAqIEBwYXJhbSB7c3RyaW5nfSBvcmRlciAtIHRoZSBvcmRlcmluZywgZWl0aGVyIGBhc2NgIG9yIGBkZXNjYFxuICAgICovXG4gICAvKipcbiAgICAqIFBlcmZvcm0gYSBzZWFyY2ggb24gdGhlIEdpdEh1YiBBUElcbiAgICAqIEBwcml2YXRlXG4gICAgKiBAcGFyYW0ge3N0cmluZ30gcGF0aCAtIHRoZSBzY29wZSBvZiB0aGUgc2VhcmNoXG4gICAgKiBAcGFyYW0ge1NlYXJjaC5QYXJhbXN9IFt3aXRoT3B0aW9uc10gLSBhZGRpdGlvbmFsIHBhcmFtZXRlcnMgZm9yIHRoZSBzZWFyY2hcbiAgICAqIEBwYXJhbSB7UmVxdWVzdGFibGUuY2FsbGJhY2t9IFtjYl0gLSB3aWxsIHJlY2VpdmUgdGhlIHJlc3VsdHMgb2YgdGhlIHNlYXJjaFxuICAgICogQHJldHVybiB7UHJvbWlzZX0gLSB0aGUgcHJvbWlzZSBmb3IgdGhlIGh0dHAgcmVxdWVzdFxuICAgICovXG4gICBfc2VhcmNoKHBhdGgsIHdpdGhPcHRpb25zID0ge30sIGNiID0gdW5kZWZpbmVkKSB7XG4gICAgICBsZXQgcmVxdWVzdE9wdGlvbnMgPSB7fTtcbiAgICAgIE9iamVjdC5rZXlzKHRoaXMuX19kZWZhdWx0cykuZm9yRWFjaCgocHJvcCkgPT4ge1xuICAgICAgICAgcmVxdWVzdE9wdGlvbnNbcHJvcF0gPSB0aGlzLl9fZGVmYXVsdHNbcHJvcF07XG4gICAgICB9KTtcbiAgICAgIE9iamVjdC5rZXlzKHdpdGhPcHRpb25zKS5mb3JFYWNoKChwcm9wKSA9PiB7XG4gICAgICAgICByZXF1ZXN0T3B0aW9uc1twcm9wXSA9IHdpdGhPcHRpb25zW3Byb3BdO1xuICAgICAgfSk7XG5cbiAgICAgIGxvZyhgc2VhcmNoaW5nICR7cGF0aH0gd2l0aCBvcHRpb25zOmAsIHJlcXVlc3RPcHRpb25zKTtcbiAgICAgIHJldHVybiB0aGlzLl9yZXF1ZXN0QWxsUGFnZXMoYC9zZWFyY2gvJHtwYXRofWAsIHJlcXVlc3RPcHRpb25zLCBjYik7XG4gICB9XG5cbiAgIC8qKlxuICAgICogU2VhcmNoIGZvciByZXBvc2l0b3JpZXNcbiAgICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIuZ2l0aHViLmNvbS92My9zZWFyY2gvI3NlYXJjaC1yZXBvc2l0b3JpZXNcbiAgICAqIEBwYXJhbSB7U2VhcmNoLlBhcmFtc30gW29wdGlvbnNdIC0gYWRkaXRpb25hbCBwYXJhbWV0ZXJzIGZvciB0aGUgc2VhcmNoXG4gICAgKiBAcGFyYW0ge1JlcXVlc3RhYmxlLmNhbGxiYWNrfSBbY2JdIC0gd2lsbCByZWNlaXZlIHRoZSByZXN1bHRzIG9mIHRoZSBzZWFyY2hcbiAgICAqIEByZXR1cm4ge1Byb21pc2V9IC0gdGhlIHByb21pc2UgZm9yIHRoZSBodHRwIHJlcXVlc3RcbiAgICAqL1xuICAgZm9yUmVwb3NpdG9yaWVzKG9wdGlvbnMsIGNiKSB7XG4gICAgICByZXR1cm4gdGhpcy5fc2VhcmNoKCdyZXBvc2l0b3JpZXMnLCBvcHRpb25zLCBjYik7XG4gICB9XG5cbiAgIC8qKlxuICAgICogU2VhcmNoIGZvciBjb2RlXG4gICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLmdpdGh1Yi5jb20vdjMvc2VhcmNoLyNzZWFyY2gtY29kZVxuICAgICogQHBhcmFtIHtTZWFyY2guUGFyYW1zfSBbb3B0aW9uc10gLSBhZGRpdGlvbmFsIHBhcmFtZXRlcnMgZm9yIHRoZSBzZWFyY2hcbiAgICAqIEBwYXJhbSB7UmVxdWVzdGFibGUuY2FsbGJhY2t9IFtjYl0gLSB3aWxsIHJlY2VpdmUgdGhlIHJlc3VsdHMgb2YgdGhlIHNlYXJjaFxuICAgICogQHJldHVybiB7UHJvbWlzZX0gLSB0aGUgcHJvbWlzZSBmb3IgdGhlIGh0dHAgcmVxdWVzdFxuICAgICovXG4gICBmb3JDb2RlKG9wdGlvbnMsIGNiKSB7XG4gICAgICByZXR1cm4gdGhpcy5fc2VhcmNoKCdjb2RlJywgb3B0aW9ucywgY2IpO1xuICAgfVxuXG4gICAvKipcbiAgICAqIFNlYXJjaCBmb3IgaXNzdWVzXG4gICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLmdpdGh1Yi5jb20vdjMvc2VhcmNoLyNzZWFyY2gtaXNzdWVzXG4gICAgKiBAcGFyYW0ge1NlYXJjaC5QYXJhbXN9IFtvcHRpb25zXSAtIGFkZGl0aW9uYWwgcGFyYW1ldGVycyBmb3IgdGhlIHNlYXJjaFxuICAgICogQHBhcmFtIHtSZXF1ZXN0YWJsZS5jYWxsYmFja30gW2NiXSAtIHdpbGwgcmVjZWl2ZSB0aGUgcmVzdWx0cyBvZiB0aGUgc2VhcmNoXG4gICAgKiBAcmV0dXJuIHtQcm9taXNlfSAtIHRoZSBwcm9taXNlIGZvciB0aGUgaHR0cCByZXF1ZXN0XG4gICAgKi9cbiAgIGZvcklzc3VlcyhvcHRpb25zLCBjYikge1xuICAgICAgcmV0dXJuIHRoaXMuX3NlYXJjaCgnaXNzdWVzJywgb3B0aW9ucywgY2IpO1xuICAgfVxuXG4gICAvKipcbiAgICAqIFNlYXJjaCBmb3IgdXNlcnNcbiAgICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIuZ2l0aHViLmNvbS92My9zZWFyY2gvI3NlYXJjaC11c2Vyc1xuICAgICogQHBhcmFtIHtTZWFyY2guUGFyYW1zfSBbb3B0aW9uc10gLSBhZGRpdGlvbmFsIHBhcmFtZXRlcnMgZm9yIHRoZSBzZWFyY2hcbiAgICAqIEBwYXJhbSB7UmVxdWVzdGFibGUuY2FsbGJhY2t9IFtjYl0gLSB3aWxsIHJlY2VpdmUgdGhlIHJlc3VsdHMgb2YgdGhlIHNlYXJjaFxuICAgICogQHJldHVybiB7UHJvbWlzZX0gLSB0aGUgcHJvbWlzZSBmb3IgdGhlIGh0dHAgcmVxdWVzdFxuICAgICovXG4gICBmb3JVc2VycyhvcHRpb25zLCBjYikge1xuICAgICAgcmV0dXJuIHRoaXMuX3NlYXJjaCgndXNlcnMnLCBvcHRpb25zLCBjYik7XG4gICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gU2VhcmNoO1xuIl19","//# sourceMappingURL=Search.js.map",""],"l":{"3":5,"5":1,"7":1,"9":1,"11":1,"13":2,"15":1,"17":1,"19":1,"26":1,"32":1,"33":1,"41":1,"42":0,"44":0,"46":0,"47":0,"69":1,"72":0,"74":0,"75":0,"77":0,"78":0,"79":0,"81":0,"82":0,"85":0,"86":0,"100":0,"114":0,"128":0,"142":0,"146":1,"149":1}},"/home/travis/build/npmtest/node-npmtest-github-api/node_modules/github-api/dist/components/RateLimit.js":{"path":"/home/travis/build/npmtest/node-npmtest-github-api/node_modules/github-api/dist/components/RateLimit.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":0,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":0,"22":0,"23":1,"24":0,"25":0,"26":0,"27":1,"28":1,"29":0,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":0,"37":0,"38":1,"39":0,"40":1,"41":1},"b":{"1":[1,1],"2":[1,0],"3":[1,0],"4":[0,1],"5":[0,1],"6":[1,1],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0,0],"11":[0,1],"12":[1,0],"13":[1,1],"14":[1,0],"15":[1,0],"16":[0,0]},"f":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":1,"8":1,"9":0,"10":0},"fnMap":{"1":{"name":"(anonymous_1)","line":3,"loc":{"start":{"line":3,"column":19},"end":{"line":3,"column":31}}},"2":{"name":"defineProperties","line":3,"loc":{"start":{"line":3,"column":33},"end":{"line":3,"column":74}}},"3":{"name":"(anonymous_3)","line":3,"loc":{"start":{"line":3,"column":357},"end":{"line":3,"column":405}}},"4":{"name":"_interopRequireDefault","line":9,"loc":{"start":{"line":9,"column":0},"end":{"line":9,"column":37}}},"5":{"name":"_classCallCheck","line":11,"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":48}}},"6":{"name":"_possibleConstructorReturn","line":13,"loc":{"start":{"line":13,"column":0},"end":{"line":13,"column":48}}},"7":{"name":"_inherits","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":41}}},"8":{"name":"(anonymous_8)","line":25,"loc":{"start":{"line":25,"column":16},"end":{"line":25,"column":40}}},"9":{"name":"RateLimit","line":34,"loc":{"start":{"line":34,"column":2},"end":{"line":34,"column":36}}},"10":{"name":"getRateLimit","line":50,"loc":{"start":{"line":50,"column":11},"end":{"line":50,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":564}},"2":{"start":{"line":3,"column":33},"end":{"line":3,"column":349}},"3":{"start":{"line":3,"column":76},"end":{"line":3,"column":347}},"4":{"start":{"line":3,"column":117},"end":{"line":3,"column":143}},"5":{"start":{"line":3,"column":144},"end":{"line":3,"column":199}},"6":{"start":{"line":3,"column":200},"end":{"line":3,"column":231}},"7":{"start":{"line":3,"column":232},"end":{"line":3,"column":286}},"8":{"start":{"line":3,"column":259},"end":{"line":3,"column":286}},"9":{"start":{"line":3,"column":287},"end":{"line":3,"column":345}},"10":{"start":{"line":3,"column":350},"end":{"line":3,"column":559}},"11":{"start":{"line":3,"column":407},"end":{"line":3,"column":475}},"12":{"start":{"line":3,"column":423},"end":{"line":3,"column":475}},"13":{"start":{"line":3,"column":476},"end":{"line":3,"column":536}},"14":{"start":{"line":3,"column":493},"end":{"line":3,"column":536}},"15":{"start":{"line":3,"column":537},"end":{"line":3,"column":556}},"16":{"start":{"line":5,"column":0},"end":{"line":5,"column":45}},"17":{"start":{"line":7,"column":0},"end":{"line":7,"column":58}},"18":{"start":{"line":9,"column":0},"end":{"line":9,"column":95}},"19":{"start":{"line":9,"column":39},"end":{"line":9,"column":93}},"20":{"start":{"line":11,"column":0},"end":{"line":11,"column":153}},"21":{"start":{"line":11,"column":50},"end":{"line":11,"column":151}},"22":{"start":{"line":11,"column":92},"end":{"line":11,"column":149}},"23":{"start":{"line":13,"column":0},"end":{"line":13,"column":240}},"24":{"start":{"line":13,"column":50},"end":{"line":13,"column":151}},"25":{"start":{"line":13,"column":63},"end":{"line":13,"column":149}},"26":{"start":{"line":13,"column":152},"end":{"line":13,"column":238}},"27":{"start":{"line":15,"column":0},"end":{"line":15,"column":494}},"28":{"start":{"line":15,"column":43},"end":{"line":15,"column":208}},"29":{"start":{"line":15,"column":106},"end":{"line":15,"column":206}},"30":{"start":{"line":15,"column":209},"end":{"line":15,"column":373}},"31":{"start":{"line":15,"column":374},"end":{"line":15,"column":492}},"32":{"start":{"line":15,"column":390},"end":{"line":15,"column":492}},"33":{"start":{"line":25,"column":0},"end":{"line":56,"column":25}},"34":{"start":{"line":26,"column":2},"end":{"line":26,"column":37}},"35":{"start":{"line":34,"column":2},"end":{"line":38,"column":3}},"36":{"start":{"line":35,"column":4},"end":{"line":35,"column":37}},"37":{"start":{"line":37,"column":4},"end":{"line":37,"column":129}},"38":{"start":{"line":48,"column":2},"end":{"line":53,"column":6}},"39":{"start":{"line":51,"column":6},"end":{"line":51,"column":59}},"40":{"start":{"line":55,"column":2},"end":{"line":55,"column":19}},"41":{"start":{"line":58,"column":0},"end":{"line":58,"column":27}}},"branchMap":{"1":{"line":3,"type":"binary-expr","locations":[{"start":{"line":3,"column":168},"end":{"line":3,"column":189}},{"start":{"line":3,"column":193},"end":{"line":3,"column":198}}]},"2":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":232},"end":{"line":3,"column":232}},{"start":{"line":3,"column":232},"end":{"line":3,"column":232}}]},"3":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":407},"end":{"line":3,"column":407}},{"start":{"line":3,"column":407},"end":{"line":3,"column":407}}]},"4":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":476},"end":{"line":3,"column":476}},{"start":{"line":3,"column":476},"end":{"line":3,"column":476}}]},"5":{"line":9,"type":"cond-expr","locations":[{"start":{"line":9,"column":70},"end":{"line":9,"column":73}},{"start":{"line":9,"column":76},"end":{"line":9,"column":92}}]},"6":{"line":9,"type":"binary-expr","locations":[{"start":{"line":9,"column":46},"end":{"line":9,"column":49}},{"start":{"line":9,"column":53},"end":{"line":9,"column":67}}]},"7":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":50},"end":{"line":11,"column":50}},{"start":{"line":11,"column":50},"end":{"line":11,"column":50}}]},"8":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":50},"end":{"line":13,"column":50}},{"start":{"line":13,"column":50},"end":{"line":13,"column":50}}]},"9":{"line":13,"type":"cond-expr","locations":[{"start":{"line":13,"column":226},"end":{"line":13,"column":230}},{"start":{"line":13,"column":233},"end":{"line":13,"column":237}}]},"10":{"line":13,"type":"binary-expr","locations":[{"start":{"line":13,"column":159},"end":{"line":13,"column":163}},{"start":{"line":13,"column":168},"end":{"line":13,"column":192}},{"start":{"line":13,"column":196},"end":{"line":13,"column":222}}]},"11":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":43},"end":{"line":15,"column":43}},{"start":{"line":15,"column":43},"end":{"line":15,"column":43}}]},"12":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":47},"end":{"line":15,"column":79}},{"start":{"line":15,"column":83},"end":{"line":15,"column":102}}]},"13":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":244},"end":{"line":15,"column":254}},{"start":{"line":15,"column":258},"end":{"line":15,"column":278}}]},"14":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":374},"end":{"line":15,"column":374}},{"start":{"line":15,"column":374},"end":{"line":15,"column":374}}]},"15":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":414},"end":{"line":15,"column":457}},{"start":{"line":15,"column":460},"end":{"line":15,"column":491}}]},"16":{"line":37,"type":"binary-expr","locations":[{"start":{"line":37,"column":45},"end":{"line":37,"column":64}},{"start":{"line":37,"column":68},"end":{"line":37,"column":100}}]}},"code":["'use strict';","","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();","","var _Requestable2 = require('./Requestable');","","var _Requestable3 = _interopRequireDefault(_Requestable2);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }","","function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }","","function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }file","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @copyright  2013 Michael Aufreiter (Development Seed) and 2016 Yahoo Inclicense    Licensed under {@link https://spdx.org/licenses/BSD-3-Clause-Clear.html BSD-3-Clause-Clear}.","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *             Github.js is freely distributableateLimit allows users to query their rate-limit status"," */","var RateLimit = function (_Requestable) {","  _inherits(RateLimit, _Requestable);","","  /**","   * construct a RateLimit","   * @param {Requestable.auth} auth - the credentials to authenticate to GitHub","   * @param {string} [apiBase] - the base Github API URL","   * @return {Promise} - the promise for the http request","   */","  function RateLimit(auth, apiBase) {","    _classCallCheck(this, RateLimit);","","    return _possibleConstructorReturn(this, (RateLimit.__proto__ || Object.getPrototypeOf(RateLimit)).call(this, auth, apiBase));","  }","","  /**","   * Query the current rate limit","   * @see https://developer.github.com/v3/rate_limit/","   * @param {Requestable.callback} [cb] - will receive the rate-limit data","   * @return {Promise} - the promise for the http request","   */","","","  _createClass(RateLimit, [{","    key: 'getRateLimit',","    value: function getRateLimit(cb) {","      return this._request('GET', '/rate_limit', null, cb);","    }","  }]);","","  return RateLimit;","}(_Requestable3.default);","","module.exports = RateLimit;","//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlJhdGVMaW1pdC5qcyJdLCJuYW1lcyI6WyJSYXRlTGltaXQiLCJhdXRoIiwiYXBpQmFzZSIsImNiIiwiX3JlcXVlc3QiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOzs7O0FBT0E7Ozs7Ozs7Ozs7K2VBUEE7Ozs7Ozs7QUFTQTs7O0lBR01BLFM7OztBQUNIOzs7Ozs7QUFNQSxxQkFBWUMsSUFBWixFQUFrQkMsT0FBbEIsRUFBMkI7QUFBQTs7QUFBQSxpSEFDbEJELElBRGtCLEVBQ1pDLE9BRFk7QUFFMUI7O0FBRUQ7Ozs7Ozs7Ozs7aUNBTWFDLEUsRUFBSTtBQUNkLGFBQU8sS0FBS0MsUUFBTCxDQUFjLEtBQWQsRUFBcUIsYUFBckIsRUFBb0MsSUFBcEMsRUFBMENELEVBQTFDLENBQVA7QUFDRjs7Ozs7O0FBR0pFLE9BQU9DLE9BQVAsR0FBaUJOLFNBQWpCIiwiZmlsZSI6IlJhdGVMaW1pdC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGZpbGVcbiAqIEBjb3B5cmlnaHQgIDIwMTMgTWljaGFlbCBBdWZyZWl0ZXIgKERldmVsb3BtZW50IFNlZWQpIGFuZCAyMDE2IFlhaG9vIEluYy5cbiAqIEBsaWNlbnNlICAgIExpY2Vuc2VkIHVuZGVyIHtAbGluayBodHRwczovL3NwZHgub3JnL2xpY2Vuc2VzL0JTRC0zLUNsYXVzZS1DbGVhci5odG1sIEJTRC0zLUNsYXVzZS1DbGVhcn0uXG4gKiAgICAgICAgICAgICBHaXRodWIuanMgaXMgZnJlZWx5IGRpc3RyaWJ1dGFibGUuXG4gKi9cblxuaW1wb3J0IFJlcXVlc3RhYmxlIGZyb20gJy4vUmVxdWVzdGFibGUnO1xuXG4vKipcbiAqIFJhdGVMaW1pdCBhbGxvd3MgdXNlcnMgdG8gcXVlcnkgdGhlaXIgcmF0ZS1saW1pdCBzdGF0dXNcbiAqL1xuY2xhc3MgUmF0ZUxpbWl0IGV4dGVuZHMgUmVxdWVzdGFibGUge1xuICAgLyoqXG4gICAgKiBjb25zdHJ1Y3QgYSBSYXRlTGltaXRcbiAgICAqIEBwYXJhbSB7UmVxdWVzdGFibGUuYXV0aH0gYXV0aCAtIHRoZSBjcmVkZW50aWFscyB0byBhdXRoZW50aWNhdGUgdG8gR2l0SHViXG4gICAgKiBAcGFyYW0ge3N0cmluZ30gW2FwaUJhc2VdIC0gdGhlIGJhc2UgR2l0aHViIEFQSSBVUkxcbiAgICAqIEByZXR1cm4ge1Byb21pc2V9IC0gdGhlIHByb21pc2UgZm9yIHRoZSBodHRwIHJlcXVlc3RcbiAgICAqL1xuICAgY29uc3RydWN0b3IoYXV0aCwgYXBpQmFzZSkge1xuICAgICAgc3VwZXIoYXV0aCwgYXBpQmFzZSk7XG4gICB9XG5cbiAgIC8qKlxuICAgICogUXVlcnkgdGhlIGN1cnJlbnQgcmF0ZSBsaW1pdFxuICAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5naXRodWIuY29tL3YzL3JhdGVfbGltaXQvXG4gICAgKiBAcGFyYW0ge1JlcXVlc3RhYmxlLmNhbGxiYWNrfSBbY2JdIC0gd2lsbCByZWNlaXZlIHRoZSByYXRlLWxpbWl0IGRhdGFcbiAgICAqIEByZXR1cm4ge1Byb21pc2V9IC0gdGhlIHByb21pc2UgZm9yIHRoZSBodHRwIHJlcXVlc3RcbiAgICAqL1xuICAgZ2V0UmF0ZUxpbWl0KGNiKSB7XG4gICAgICByZXR1cm4gdGhpcy5fcmVxdWVzdCgnR0VUJywgJy9yYXRlX2xpbWl0JywgbnVsbCwgY2IpO1xuICAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IFJhdGVMaW1pdDtcbiJdfQ==","//# sourceMappingURL=RateLimit.js.map",""],"l":{"3":1,"5":1,"7":1,"9":1,"11":1,"13":1,"15":1,"25":1,"26":1,"34":1,"35":0,"37":0,"48":1,"51":0,"55":1,"58":1}},"/home/travis/build/npmtest/node-npmtest-github-api/node_modules/github-api/dist/components/Repository.js":{"path":"/home/travis/build/npmtest/node-npmtest-github-api/node_modules/github-api/dist/components/Repository.js","s":{"1":1,"2":0,"3":0,"4":1,"5":1,"6":1,"7":61,"8":61,"9":61,"10":61,"11":61,"12":61,"13":1,"14":1,"15":1,"16":1,"17":0,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":3,"28":1,"29":0,"30":0,"31":1,"32":0,"33":0,"34":0,"35":1,"36":1,"37":0,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":0,"46":0,"47":0,"48":0,"49":0,"50":1,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":1,"176":1},"b":{"1":[1,0],"2":[1,1],"3":[0,0],"4":[0,0,0,0],"5":[61,61],"6":[61,0],"7":[1,0],"8":[0,1],"9":[0,3],"10":[3,3],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0,0],"15":[0,1],"16":[1,0],"17":[1,1],"18":[1,0],"19":[1,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0]},"f":{"1":0,"2":0,"3":1,"4":1,"5":1,"6":3,"7":0,"8":0,"9":1,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0},"fnMap":{"1":{"name":"(anonymous_1)","line":3,"loc":{"start":{"line":3,"column":84},"end":{"line":3,"column":99}}},"2":{"name":"(anonymous_2)","line":3,"loc":{"start":{"line":3,"column":124},"end":{"line":3,"column":139}}},"3":{"name":"(anonymous_3)","line":5,"loc":{"start":{"line":5,"column":19},"end":{"line":5,"column":31}}},"4":{"name":"defineProperties","line":5,"loc":{"start":{"line":5,"column":33},"end":{"line":5,"column":74}}},"5":{"name":"(anonymous_5)","line":5,"loc":{"start":{"line":5,"column":357},"end":{"line":5,"column":405}}},"6":{"name":"_interopRequireDefault","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":37}}},"7":{"name":"_classCallCheck","line":23,"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":48}}},"8":{"name":"_possibleConstructorReturn","line":25,"loc":{"start":{"line":25,"column":0},"end":{"line":25,"column":48}}},"9":{"name":"_inherits","line":27,"loc":{"start":{"line":27,"column":0},"end":{"line":27,"column":41}}},"10":{"name":"(anonymous_10)","line":40,"loc":{"start":{"line":40,"column":17},"end":{"line":40,"column":41}}},"11":{"name":"Repository","line":49,"loc":{"start":{"line":49,"column":3},"end":{"line":49,"column":48}}},"12":{"name":"getRef","line":73,"loc":{"start":{"line":73,"column":13},"end":{"line":73,"column":38}}},"13":{"name":"createRef","line":87,"loc":{"start":{"line":87,"column":13},"end":{"line":87,"column":45}}},"14":{"name":"deleteRef","line":101,"loc":{"start":{"line":101,"column":13},"end":{"line":101,"column":41}}},"15":{"name":"deleteRepo","line":114,"loc":{"start":{"line":114,"column":13},"end":{"line":114,"column":37}}},"16":{"name":"listTags","line":127,"loc":{"start":{"line":127,"column":13},"end":{"line":127,"column":35}}},"17":{"name":"listPullRequests","line":141,"loc":{"start":{"line":141,"column":13},"end":{"line":141,"column":52}}},"18":{"name":"getPullRequest","line":156,"loc":{"start":{"line":156,"column":13},"end":{"line":156,"column":49}}},"19":{"name":"listPullRequestFiles","line":170,"loc":{"start":{"line":170,"column":13},"end":{"line":170,"column":55}}},"20":{"name":"compareBranches","line":185,"loc":{"start":{"line":185,"column":13},"end":{"line":185,"column":54}}},"21":{"name":"listBranches","line":198,"loc":{"start":{"line":198,"column":13},"end":{"line":198,"column":39}}},"22":{"name":"getBlob","line":212,"loc":{"start":{"line":212,"column":13},"end":{"line":212,"column":39}}},"23":{"name":"getBranch","line":226,"loc":{"start":{"line":226,"column":13},"end":{"line":226,"column":44}}},"24":{"name":"getCommit","line":240,"loc":{"start":{"line":240,"column":13},"end":{"line":240,"column":41}}},"25":{"name":"listCommits","line":259,"loc":{"start":{"line":259,"column":13},"end":{"line":259,"column":47}}},"26":{"name":"getSingleCommit","line":278,"loc":{"start":{"line":278,"column":13},"end":{"line":278,"column":47}}},"27":{"name":"getSha","line":294,"loc":{"start":{"line":294,"column":13},"end":{"line":294,"column":47}}},"28":{"name":"listStatuses","line":309,"loc":{"start":{"line":309,"column":13},"end":{"line":309,"column":44}}},"29":{"name":"getTree","line":323,"loc":{"start":{"line":323,"column":13},"end":{"line":323,"column":43}}},"30":{"name":"createBlob","line":337,"loc":{"start":{"line":337,"column":13},"end":{"line":337,"column":46}}},"31":{"name":"_getContentObject","line":352,"loc":{"start":{"line":352,"column":13},"end":{"line":352,"column":49}}},"32":{"name":"updateTree","line":391,"loc":{"start":{"line":391,"column":13},"end":{"line":391,"column":65}}},"33":{"name":"createTree","line":416,"loc":{"start":{"line":416,"column":13},"end":{"line":416,"column":52}}},"34":{"name":"commit","line":434,"loc":{"start":{"line":434,"column":13},"end":{"line":434,"column":56}}},"35":{"name":"(anonymous_35)","line":443,"loc":{"start":{"line":443,"column":99},"end":{"line":443,"column":119}}},"36":{"name":"updateHead","line":461,"loc":{"start":{"line":461,"column":13},"end":{"line":461,"column":60}}},"37":{"name":"updateStatus","line":483,"loc":{"start":{"line":483,"column":13},"end":{"line":483,"column":59}}},"38":{"name":"updateRepository","line":505,"loc":{"start":{"line":505,"column":13},"end":{"line":505,"column":52}}},"39":{"name":"getDetails","line":518,"loc":{"start":{"line":518,"column":13},"end":{"line":518,"column":37}}},"40":{"name":"getContributors","line":531,"loc":{"start":{"line":531,"column":13},"end":{"line":531,"column":42}}},"41":{"name":"getContributorStats","line":544,"loc":{"start":{"line":544,"column":13},"end":{"line":544,"column":46}}},"42":{"name":"getCollaborators","line":558,"loc":{"start":{"line":558,"column":13},"end":{"line":558,"column":43}}},"43":{"name":"isCollaborator","line":572,"loc":{"start":{"line":572,"column":13},"end":{"line":572,"column":51}}},"44":{"name":"getContents","line":588,"loc":{"start":{"line":588,"column":13},"end":{"line":588,"column":54}}},"45":{"name":"getReadme","line":606,"loc":{"start":{"line":606,"column":13},"end":{"line":606,"column":46}}},"46":{"name":"fork","line":621,"loc":{"start":{"line":621,"column":13},"end":{"line":621,"column":31}}},"47":{"name":"listForks","line":634,"loc":{"start":{"line":634,"column":13},"end":{"line":634,"column":36}}},"48":{"name":"createBranch","line":648,"loc":{"start":{"line":648,"column":13},"end":{"line":648,"column":61}}},"49":{"name":"(anonymous_49)","line":657,"loc":{"start":{"line":657,"column":55},"end":{"line":657,"column":75}}},"50":{"name":"createPullRequest","line":676,"loc":{"start":{"line":676,"column":13},"end":{"line":676,"column":53}}},"51":{"name":"updatePullRequest","line":691,"loc":{"start":{"line":691,"column":13},"end":{"line":691,"column":61}}},"52":{"name":"listHooks","line":704,"loc":{"start":{"line":704,"column":13},"end":{"line":704,"column":36}}},"53":{"name":"getHook","line":718,"loc":{"start":{"line":718,"column":13},"end":{"line":718,"column":38}}},"54":{"name":"createHook","line":732,"loc":{"start":{"line":732,"column":13},"end":{"line":732,"column":46}}},"55":{"name":"updateHook","line":747,"loc":{"start":{"line":747,"column":13},"end":{"line":747,"column":50}}},"56":{"name":"deleteHook","line":761,"loc":{"start":{"line":761,"column":13},"end":{"line":761,"column":41}}},"57":{"name":"listKeys","line":774,"loc":{"start":{"line":774,"column":13},"end":{"line":774,"column":35}}},"58":{"name":"getKey","line":788,"loc":{"start":{"line":788,"column":13},"end":{"line":788,"column":37}}},"59":{"name":"createKey","line":802,"loc":{"start":{"line":802,"column":13},"end":{"line":802,"column":45}}},"60":{"name":"deleteKey","line":816,"loc":{"start":{"line":816,"column":13},"end":{"line":816,"column":40}}},"61":{"name":"deleteFile","line":831,"loc":{"start":{"line":831,"column":13},"end":{"line":831,"column":51}}},"62":{"name":"(anonymous_62)","line":834,"loc":{"start":{"line":834,"column":47},"end":{"line":834,"column":67}}},"63":{"name":"move","line":855,"loc":{"start":{"line":855,"column":13},"end":{"line":855,"column":57}}},"64":{"name":"(anonymous_64)","line":859,"loc":{"start":{"line":859,"column":52},"end":{"line":859,"column":68}}},"65":{"name":"(anonymous_65)","line":862,"loc":{"start":{"line":862,"column":17},"end":{"line":862,"column":34}}},"66":{"name":"(anonymous_66)","line":868,"loc":{"start":{"line":868,"column":35},"end":{"line":868,"column":50}}},"67":{"name":"(anonymous_67)","line":878,"loc":{"start":{"line":878,"column":17},"end":{"line":878,"column":34}}},"68":{"name":"(anonymous_68)","line":881,"loc":{"start":{"line":881,"column":17},"end":{"line":881,"column":34}}},"69":{"name":"writeFile","line":904,"loc":{"start":{"line":904,"column":13},"end":{"line":904,"column":77}}},"70":{"name":"(anonymous_70)","line":921,"loc":{"start":{"line":921,"column":51},"end":{"line":921,"column":71}}},"71":{"name":"(anonymous_71)","line":924,"loc":{"start":{"line":924,"column":12},"end":{"line":924,"column":24}}},"72":{"name":"isStarred","line":939,"loc":{"start":{"line":939,"column":13},"end":{"line":939,"column":36}}},"73":{"name":"star","line":952,"loc":{"start":{"line":952,"column":13},"end":{"line":952,"column":31}}},"74":{"name":"unstar","line":965,"loc":{"start":{"line":965,"column":13},"end":{"line":965,"column":33}}},"75":{"name":"createRelease","line":979,"loc":{"start":{"line":979,"column":13},"end":{"line":979,"column":49}}},"76":{"name":"updateRelease","line":994,"loc":{"start":{"line":994,"column":13},"end":{"line":994,"column":53}}},"77":{"name":"listReleases","line":1007,"loc":{"start":{"line":1007,"column":13},"end":{"line":1007,"column":39}}},"78":{"name":"getRelease","line":1021,"loc":{"start":{"line":1021,"column":13},"end":{"line":1021,"column":41}}},"79":{"name":"deleteRelease","line":1035,"loc":{"start":{"line":1035,"column":13},"end":{"line":1035,"column":44}}},"80":{"name":"mergePullRequest","line":1050,"loc":{"start":{"line":1050,"column":13},"end":{"line":1050,"column":60}}},"81":{"name":"listProjects","line":1063,"loc":{"start":{"line":1063,"column":13},"end":{"line":1063,"column":39}}},"82":{"name":"createProject","line":1077,"loc":{"start":{"line":1077,"column":13},"end":{"line":1077,"column":49}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":269}},"2":{"start":{"line":3,"column":101},"end":{"line":3,"column":119}},"3":{"start":{"line":3,"column":141},"end":{"line":3,"column":266}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":564}},"5":{"start":{"line":5,"column":33},"end":{"line":5,"column":349}},"6":{"start":{"line":5,"column":76},"end":{"line":5,"column":347}},"7":{"start":{"line":5,"column":117},"end":{"line":5,"column":143}},"8":{"start":{"line":5,"column":144},"end":{"line":5,"column":199}},"9":{"start":{"line":5,"column":200},"end":{"line":5,"column":231}},"10":{"start":{"line":5,"column":232},"end":{"line":5,"column":286}},"11":{"start":{"line":5,"column":259},"end":{"line":5,"column":286}},"12":{"start":{"line":5,"column":287},"end":{"line":5,"column":345}},"13":{"start":{"line":5,"column":350},"end":{"line":5,"column":559}},"14":{"start":{"line":5,"column":407},"end":{"line":5,"column":475}},"15":{"start":{"line":5,"column":423},"end":{"line":5,"column":475}},"16":{"start":{"line":5,"column":476},"end":{"line":5,"column":536}},"17":{"start":{"line":5,"column":493},"end":{"line":5,"column":536}},"18":{"start":{"line":5,"column":537},"end":{"line":5,"column":556}},"19":{"start":{"line":7,"column":0},"end":{"line":7,"column":45}},"20":{"start":{"line":9,"column":0},"end":{"line":9,"column":58}},"21":{"start":{"line":11,"column":0},"end":{"line":11,"column":27}},"22":{"start":{"line":13,"column":0},"end":{"line":13,"column":41}},"23":{"start":{"line":15,"column":0},"end":{"line":15,"column":35}},"24":{"start":{"line":17,"column":0},"end":{"line":17,"column":30}},"25":{"start":{"line":19,"column":0},"end":{"line":19,"column":45}},"26":{"start":{"line":21,"column":0},"end":{"line":21,"column":95}},"27":{"start":{"line":21,"column":39},"end":{"line":21,"column":93}},"28":{"start":{"line":23,"column":0},"end":{"line":23,"column":153}},"29":{"start":{"line":23,"column":50},"end":{"line":23,"column":151}},"30":{"start":{"line":23,"column":92},"end":{"line":23,"column":149}},"31":{"start":{"line":25,"column":0},"end":{"line":25,"column":240}},"32":{"start":{"line":25,"column":50},"end":{"line":25,"column":151}},"33":{"start":{"line":25,"column":63},"end":{"line":25,"column":149}},"34":{"start":{"line":25,"column":152},"end":{"line":25,"column":238}},"35":{"start":{"line":27,"column":0},"end":{"line":27,"column":494}},"36":{"start":{"line":27,"column":43},"end":{"line":27,"column":208}},"37":{"start":{"line":27,"column":106},"end":{"line":27,"column":206}},"38":{"start":{"line":27,"column":209},"end":{"line":27,"column":373}},"39":{"start":{"line":27,"column":374},"end":{"line":27,"column":492}},"40":{"start":{"line":27,"column":390},"end":{"line":27,"column":492}},"41":{"start":{"line":34,"column":0},"end":{"line":34,"column":52}},"42":{"start":{"line":40,"column":0},"end":{"line":1085,"column":25}},"43":{"start":{"line":41,"column":3},"end":{"line":41,"column":39}},"44":{"start":{"line":49,"column":3},"end":{"line":60,"column":4}},"45":{"start":{"line":50,"column":6},"end":{"line":50,"column":40}},"46":{"start":{"line":52,"column":6},"end":{"line":52,"column":138}},"47":{"start":{"line":54,"column":6},"end":{"line":54,"column":34}},"48":{"start":{"line":55,"column":6},"end":{"line":58,"column":8}},"49":{"start":{"line":59,"column":6},"end":{"line":59,"column":19}},"50":{"start":{"line":71,"column":3},"end":{"line":1082,"column":7}},"51":{"start":{"line":74,"column":9},"end":{"line":74,"column":97}},"52":{"start":{"line":88,"column":9},"end":{"line":88,"column":94}},"53":{"start":{"line":102,"column":9},"end":{"line":102,"column":100}},"54":{"start":{"line":115,"column":9},"end":{"line":115,"column":79}},"55":{"start":{"line":128,"column":9},"end":{"line":128,"column":86}},"56":{"start":{"line":142,"column":9},"end":{"line":142,"column":33}},"57":{"start":{"line":143,"column":9},"end":{"line":143,"column":90}},"58":{"start":{"line":157,"column":9},"end":{"line":157,"column":97}},"59":{"start":{"line":171,"column":9},"end":{"line":171,"column":108}},"60":{"start":{"line":186,"column":9},"end":{"line":186,"column":112}},"61":{"start":{"line":199,"column":9},"end":{"line":199,"column":90}},"62":{"start":{"line":213,"column":9},"end":{"line":213,"column":105}},"63":{"start":{"line":227,"column":9},"end":{"line":227,"column":100}},"64":{"start":{"line":241,"column":9},"end":{"line":241,"column":100}},"65":{"start":{"line":260,"column":9},"end":{"line":260,"column":33}},"66":{"start":{"line":262,"column":9},"end":{"line":262,"column":56}},"67":{"start":{"line":263,"column":9},"end":{"line":263,"column":56}},"68":{"start":{"line":265,"column":9},"end":{"line":265,"column":92}},"69":{"start":{"line":279,"column":9},"end":{"line":279,"column":25}},"70":{"start":{"line":280,"column":9},"end":{"line":280,"column":96}},"71":{"start":{"line":295,"column":9},"end":{"line":295,"column":49}},"72":{"start":{"line":296,"column":9},"end":{"line":296,"column":107}},"73":{"start":{"line":310,"column":9},"end":{"line":310,"column":110}},"74":{"start":{"line":324,"column":9},"end":{"line":324,"column":102}},"75":{"start":{"line":338,"column":9},"end":{"line":338,"column":56}},"76":{"start":{"line":340,"column":9},"end":{"line":340,"column":42}},"77":{"start":{"line":341,"column":9},"end":{"line":341,"column":96}},"78":{"start":{"line":353,"column":9},"end":{"line":375,"column":10}},"79":{"start":{"line":354,"column":12},"end":{"line":354,"column":38}},"80":{"start":{"line":355,"column":12},"end":{"line":358,"column":14}},"81":{"start":{"line":359,"column":16},"end":{"line":375,"column":10}},"82":{"start":{"line":360,"column":12},"end":{"line":360,"column":43}},"83":{"start":{"line":361,"column":12},"end":{"line":364,"column":14}},"84":{"start":{"line":365,"column":16},"end":{"line":375,"column":10}},"85":{"start":{"line":366,"column":12},"end":{"line":366,"column":50}},"86":{"start":{"line":367,"column":12},"end":{"line":370,"column":14}},"87":{"start":{"line":373,"column":12},"end":{"line":373,"column":152}},"88":{"start":{"line":374,"column":12},"end":{"line":374,"column":113}},"89":{"start":{"line":392,"column":9},"end":{"line":400,"column":11}},"90":{"start":{"line":402,"column":9},"end":{"line":402,"column":95}},"91":{"start":{"line":417,"column":9},"end":{"line":419,"column":38}},"92":{"start":{"line":435,"column":9},"end":{"line":435,"column":27}},"93":{"start":{"line":437,"column":9},"end":{"line":441,"column":11}},"94":{"start":{"line":443,"column":9},"end":{"line":446,"column":12}},"95":{"start":{"line":444,"column":12},"end":{"line":444,"column":57}},"96":{"start":{"line":445,"column":12},"end":{"line":445,"column":28}},"97":{"start":{"line":462,"column":9},"end":{"line":465,"column":16}},"98":{"start":{"line":484,"column":9},"end":{"line":484,"column":107}},"99":{"start":{"line":506,"column":9},"end":{"line":506,"column":81}},"100":{"start":{"line":519,"column":9},"end":{"line":519,"column":76}},"101":{"start":{"line":532,"column":9},"end":{"line":532,"column":94}},"102":{"start":{"line":545,"column":9},"end":{"line":545,"column":100}},"103":{"start":{"line":559,"column":9},"end":{"line":559,"column":95}},"104":{"start":{"line":573,"column":9},"end":{"line":573,"column":107}},"105":{"start":{"line":589,"column":9},"end":{"line":589,"column":49}},"106":{"start":{"line":590,"column":9},"end":{"line":592,"column":21}},"107":{"start":{"line":607,"column":9},"end":{"line":609,"column":21}},"108":{"start":{"line":622,"column":9},"end":{"line":622,"column":88}},"109":{"start":{"line":635,"column":9},"end":{"line":635,"column":87}},"110":{"start":{"line":649,"column":9},"end":{"line":649,"column":27}},"111":{"start":{"line":651,"column":9},"end":{"line":655,"column":10}},"112":{"start":{"line":652,"column":12},"end":{"line":652,"column":27}},"113":{"start":{"line":653,"column":12},"end":{"line":653,"column":34}},"114":{"start":{"line":654,"column":12},"end":{"line":654,"column":33}},"115":{"start":{"line":657,"column":9},"end":{"line":663,"column":12}},"116":{"start":{"line":658,"column":12},"end":{"line":658,"column":47}},"117":{"start":{"line":659,"column":12},"end":{"line":662,"column":19}},"118":{"start":{"line":677,"column":9},"end":{"line":677,"column":91}},"119":{"start":{"line":692,"column":9},"end":{"line":692,"column":102}},"120":{"start":{"line":705,"column":9},"end":{"line":705,"column":87}},"121":{"start":{"line":719,"column":9},"end":{"line":719,"column":93}},"122":{"start":{"line":733,"column":9},"end":{"line":733,"column":91}},"123":{"start":{"line":748,"column":9},"end":{"line":748,"column":98}},"124":{"start":{"line":762,"column":9},"end":{"line":762,"column":84}},"125":{"start":{"line":775,"column":9},"end":{"line":775,"column":86}},"126":{"start":{"line":789,"column":9},"end":{"line":789,"column":92}},"127":{"start":{"line":803,"column":9},"end":{"line":803,"column":90}},"128":{"start":{"line":817,"column":9},"end":{"line":817,"column":95}},"129":{"start":{"line":832,"column":9},"end":{"line":832,"column":27}},"130":{"start":{"line":834,"column":9},"end":{"line":841,"column":12}},"131":{"start":{"line":835,"column":12},"end":{"line":839,"column":14}},"132":{"start":{"line":840,"column":12},"end":{"line":840,"column":116}},"133":{"start":{"line":856,"column":9},"end":{"line":856,"column":27}},"134":{"start":{"line":858,"column":9},"end":{"line":858,"column":29}},"135":{"start":{"line":859,"column":9},"end":{"line":884,"column":12}},"136":{"start":{"line":860,"column":12},"end":{"line":860,"column":42}},"137":{"start":{"line":861,"column":12},"end":{"line":861,"column":66}},"138":{"start":{"line":863,"column":12},"end":{"line":865,"column":37}},"139":{"start":{"line":867,"column":12},"end":{"line":867,"column":25}},"140":{"start":{"line":868,"column":12},"end":{"line":876,"column":15}},"141":{"start":{"line":869,"column":15},"end":{"line":871,"column":16}},"142":{"start":{"line":870,"column":18},"end":{"line":870,"column":37}},"143":{"start":{"line":872,"column":15},"end":{"line":874,"column":16}},"144":{"start":{"line":873,"column":18},"end":{"line":873,"column":33}},"145":{"start":{"line":875,"column":15},"end":{"line":875,"column":26}},"146":{"start":{"line":877,"column":12},"end":{"line":877,"column":46}},"147":{"start":{"line":879,"column":12},"end":{"line":879,"column":34}},"148":{"start":{"line":880,"column":12},"end":{"line":880,"column":105}},"149":{"start":{"line":882,"column":12},"end":{"line":882,"column":36}},"150":{"start":{"line":883,"column":12},"end":{"line":883,"column":78}},"151":{"start":{"line":905,"column":9},"end":{"line":905,"column":27}},"152":{"start":{"line":907,"column":9},"end":{"line":910,"column":10}},"153":{"start":{"line":908,"column":12},"end":{"line":908,"column":25}},"154":{"start":{"line":909,"column":12},"end":{"line":909,"column":25}},"155":{"start":{"line":911,"column":9},"end":{"line":911,"column":52}},"156":{"start":{"line":912,"column":9},"end":{"line":912,"column":53}},"157":{"start":{"line":913,"column":9},"end":{"line":919,"column":11}},"158":{"start":{"line":921,"column":9},"end":{"line":926,"column":12}},"159":{"start":{"line":922,"column":12},"end":{"line":922,"column":43}},"160":{"start":{"line":923,"column":12},"end":{"line":923,"column":111}},"161":{"start":{"line":925,"column":12},"end":{"line":925,"column":111}},"162":{"start":{"line":940,"column":9},"end":{"line":940,"column":84}},"163":{"start":{"line":953,"column":9},"end":{"line":953,"column":83}},"164":{"start":{"line":966,"column":9},"end":{"line":966,"column":86}},"165":{"start":{"line":980,"column":9},"end":{"line":980,"column":94}},"166":{"start":{"line":995,"column":9},"end":{"line":995,"column":101}},"167":{"start":{"line":1008,"column":9},"end":{"line":1008,"column":90}},"168":{"start":{"line":1022,"column":9},"end":{"line":1022,"column":96}},"169":{"start":{"line":1036,"column":9},"end":{"line":1036,"column":99}},"170":{"start":{"line":1051,"column":9},"end":{"line":1051,"column":111}},"171":{"start":{"line":1064,"column":9},"end":{"line":1064,"column":122}},"172":{"start":{"line":1078,"column":9},"end":{"line":1078,"column":33}},"173":{"start":{"line":1079,"column":9},"end":{"line":1079,"column":50}},"174":{"start":{"line":1080,"column":9},"end":{"line":1080,"column":94}},"175":{"start":{"line":1084,"column":3},"end":{"line":1084,"column":21}},"176":{"start":{"line":1087,"column":0},"end":{"line":1087,"column":28}}},"branchMap":{"1":{"line":3,"type":"cond-expr","locations":[{"start":{"line":3,"column":84},"end":{"line":3,"column":121}},{"start":{"line":3,"column":124},"end":{"line":3,"column":268}}]},"2":{"line":3,"type":"binary-expr","locations":[{"start":{"line":3,"column":14},"end":{"line":3,"column":42}},{"start":{"line":3,"column":46},"end":{"line":3,"column":81}}]},"3":{"line":3,"type":"cond-expr","locations":[{"start":{"line":3,"column":244},"end":{"line":3,"column":252}},{"start":{"line":3,"column":255},"end":{"line":3,"column":265}}]},"4":{"line":3,"type":"binary-expr","locations":[{"start":{"line":3,"column":148},"end":{"line":3,"column":151}},{"start":{"line":3,"column":155},"end":{"line":3,"column":183}},{"start":{"line":3,"column":187},"end":{"line":3,"column":213}},{"start":{"line":3,"column":217},"end":{"line":3,"column":241}}]},"5":{"line":5,"type":"binary-expr","locations":[{"start":{"line":5,"column":168},"end":{"line":5,"column":189}},{"start":{"line":5,"column":193},"end":{"line":5,"column":198}}]},"6":{"line":5,"type":"if","locations":[{"start":{"line":5,"column":232},"end":{"line":5,"column":232}},{"start":{"line":5,"column":232},"end":{"line":5,"column":232}}]},"7":{"line":5,"type":"if","locations":[{"start":{"line":5,"column":407},"end":{"line":5,"column":407}},{"start":{"line":5,"column":407},"end":{"line":5,"column":407}}]},"8":{"line":5,"type":"if","locations":[{"start":{"line":5,"column":476},"end":{"line":5,"column":476}},{"start":{"line":5,"column":476},"end":{"line":5,"column":476}}]},"9":{"line":21,"type":"cond-expr","locations":[{"start":{"line":21,"column":70},"end":{"line":21,"column":73}},{"start":{"line":21,"column":76},"end":{"line":21,"column":92}}]},"10":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":46},"end":{"line":21,"column":49}},{"start":{"line":21,"column":53},"end":{"line":21,"column":67}}]},"11":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":50},"end":{"line":23,"column":50}},{"start":{"line":23,"column":50},"end":{"line":23,"column":50}}]},"12":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":50},"end":{"line":25,"column":50}},{"start":{"line":25,"column":50},"end":{"line":25,"column":50}}]},"13":{"line":25,"type":"cond-expr","locations":[{"start":{"line":25,"column":226},"end":{"line":25,"column":230}},{"start":{"line":25,"column":233},"end":{"line":25,"column":237}}]},"14":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":159},"end":{"line":25,"column":163}},{"start":{"line":25,"column":168},"end":{"line":25,"column":192}},{"start":{"line":25,"column":196},"end":{"line":25,"column":222}}]},"15":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":43},"end":{"line":27,"column":43}},{"start":{"line":27,"column":43},"end":{"line":27,"column":43}}]},"16":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":47},"end":{"line":27,"column":79}},{"start":{"line":27,"column":83},"end":{"line":27,"column":102}}]},"17":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":244},"end":{"line":27,"column":254}},{"start":{"line":27,"column":258},"end":{"line":27,"column":278}}]},"18":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":374},"end":{"line":27,"column":374}},{"start":{"line":27,"column":374},"end":{"line":27,"column":374}}]},"19":{"line":27,"type":"cond-expr","locations":[{"start":{"line":27,"column":414},"end":{"line":27,"column":457}},{"start":{"line":27,"column":460},"end":{"line":27,"column":491}}]},"20":{"line":52,"type":"binary-expr","locations":[{"start":{"line":52,"column":52},"end":{"line":52,"column":72}},{"start":{"line":52,"column":76},"end":{"line":52,"column":109}}]},"21":{"line":142,"type":"binary-expr","locations":[{"start":{"line":142,"column":19},"end":{"line":142,"column":26}},{"start":{"line":142,"column":30},"end":{"line":142,"column":32}}]},"22":{"line":260,"type":"binary-expr","locations":[{"start":{"line":260,"column":19},"end":{"line":260,"column":26}},{"start":{"line":260,"column":30},"end":{"line":260,"column":32}}]},"23":{"line":279,"type":"binary-expr","locations":[{"start":{"line":279,"column":15},"end":{"line":279,"column":18}},{"start":{"line":279,"column":22},"end":{"line":279,"column":24}}]},"24":{"line":295,"type":"cond-expr","locations":[{"start":{"line":295,"column":27},"end":{"line":295,"column":43}},{"start":{"line":295,"column":46},"end":{"line":295,"column":48}}]},"25":{"line":353,"type":"if","locations":[{"start":{"line":353,"column":9},"end":{"line":353,"column":9}},{"start":{"line":353,"column":9},"end":{"line":353,"column":9}}]},"26":{"line":359,"type":"if","locations":[{"start":{"line":359,"column":16},"end":{"line":359,"column":16}},{"start":{"line":359,"column":16},"end":{"line":359,"column":16}}]},"27":{"line":359,"type":"binary-expr","locations":[{"start":{"line":359,"column":20},"end":{"line":359,"column":49}},{"start":{"line":359,"column":53},"end":{"line":359,"column":78}}]},"28":{"line":365,"type":"if","locations":[{"start":{"line":365,"column":16},"end":{"line":365,"column":16}},{"start":{"line":365,"column":16},"end":{"line":365,"column":16}}]},"29":{"line":365,"type":"binary-expr","locations":[{"start":{"line":365,"column":20},"end":{"line":365,"column":47}},{"start":{"line":365,"column":51},"end":{"line":365,"column":74}}]},"30":{"line":373,"type":"cond-expr","locations":[{"start":{"line":373,"column":86},"end":{"line":373,"column":97}},{"start":{"line":373,"column":100},"end":{"line":373,"column":116}}]},"31":{"line":589,"type":"cond-expr","locations":[{"start":{"line":589,"column":23},"end":{"line":589,"column":43}},{"start":{"line":589,"column":46},"end":{"line":589,"column":48}}]},"32":{"line":651,"type":"if","locations":[{"start":{"line":651,"column":9},"end":{"line":651,"column":9}},{"start":{"line":651,"column":9},"end":{"line":651,"column":9}}]},"33":{"line":869,"type":"if","locations":[{"start":{"line":869,"column":15},"end":{"line":869,"column":15}},{"start":{"line":869,"column":15},"end":{"line":869,"column":15}}]},"34":{"line":872,"type":"if","locations":[{"start":{"line":872,"column":15},"end":{"line":872,"column":15}},{"start":{"line":872,"column":15},"end":{"line":872,"column":15}}]},"35":{"line":907,"type":"if","locations":[{"start":{"line":907,"column":9},"end":{"line":907,"column":9}},{"start":{"line":907,"column":9},"end":{"line":907,"column":9}}]},"36":{"line":911,"type":"cond-expr","locations":[{"start":{"line":911,"column":31},"end":{"line":911,"column":46}},{"start":{"line":911,"column":49},"end":{"line":911,"column":51}}]},"37":{"line":918,"type":"cond-expr","locations":[{"start":{"line":918,"column":36},"end":{"line":918,"column":66}},{"start":{"line":918,"column":69},"end":{"line":918,"column":76}}]},"38":{"line":1078,"type":"binary-expr","locations":[{"start":{"line":1078,"column":19},"end":{"line":1078,"column":26}},{"start":{"line":1078,"column":30},"end":{"line":1078,"column":32}}]}},"code":["'use strict';","","var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };","","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();","","var _Requestable2 = require('./Requestable');","","var _Requestable3 = _interopRequireDefault(_Requestable2);","","var _utf = require('utf8');","","var _utf2 = _interopRequireDefault(_utf);","","var _jsBase = require('js-base64');","","var _debug = require('debug');","","var _debug2 = _interopRequireDefault(_debug);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }","","function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }","","function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }filecopyright  2013 Michael Aufreiter (Development Seed) and 2016 Yahoo Inclicense    Licensed under {@link https://spdx.org/licenses/BSD-3-Clause-Clear.html BSD-3-Clause-Clear}ithub.js is freely distributablevar log = (0, _debug2.default)('github:repository');","","/**"," * Respository encapsulates the functionality to create, query, and modify files."," */","","var Repository = function (_Requestable) {","   _inherits(Repository, _Requestable);","","   /**","    * Create a Repository.","    * @param {string} fullname - the full name of the repository","    * @param {Requestable.auth} [auth] - information required to authenticate to Github","    * @param {string} [apiBase=https://api.github.com] - the base Github API URL","    */","   function Repository(fullname, auth, apiBase) {","      _classCallCheck(this, Repository);","","      var _this = _possibleConstructorReturn(this, (Repository.__proto__ || Object.getPrototypeOf(Repository)).call(this, auth, apiBase));","","      _this.__fullname = fullname;","      _this.__currentTree = {","         branch: null,","         sha: null","      };","      return _this;","   }","","   /**","    * Get a reference","    * @see https://developer.github.com/v3/git/refs/#get-a-reference","    * @param {string} ref - the reference to get","    * @param {Requestable.callback} [cb] - will receive the reference's refSpec or a list of refSpecs that match `ref`","    * @return {Promise} - the promise for the http request","    */","","","   _createClass(Repository, [{","      key: 'getRef',","      value: function getRef(ref, cb) {","         return this._request('GET', '/repos/' + this.__fullname + '/git/refs/' + ref, null, cb);","      }","","      /**","       * Create a reference","       * @see https://developer.github.com/v3/git/refs/#create-a-reference","       * @param {Object} options - the object describing the ref","       * @param {Requestable.callback} [cb] - will receive the ref","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: 'createRef',","      value: function createRef(options, cb) {","         return this._request('POST', '/repos/' + this.__fullname + '/git/refs', options, cb);","      }","","      /**","       * Delete a reference","       * @see https://developer.github.com/v3/git/refs/#delete-a-reference","       * @param {string} ref - the name of the ref to delte","       * @param {Requestable.callback} [cb] - will receive true if the request is successful","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: 'deleteRef',","      value: function deleteRef(ref, cb) {","         return this._request('DELETE', '/repos/' + this.__fullname + '/git/refs/' + ref, null, cb);","      }","","      /**","       * Delete a repository","       * @see https://developer.github.com/v3/repos/#delete-a-repository","       * @param {Requestable.callback} [cb] - will receive true if the request is successful","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: 'deleteRepo',","      value: function deleteRepo(cb) {","         return this._request('DELETE', '/repos/' + this.__fullname, null, cb);","      }","","      /**","       * List the tags on a repository","       * @see https://developer.github.com/v3/repos/#list-tags","       * @param {Requestable.callback} [cb] - will receive the tag data","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: 'listTags',","      value: function listTags(cb) {","         return this._request('GET', '/repos/' + this.__fullname + '/tags', null, cb);","      }","","      /**","       * List the open pull requests on the repository","       * @see https://developer.github.com/v3/pulls/#list-pull-requests","       * @param {Object} options - options to filter the search","       * @param {Requestable.callback} [cb] - will receive the list of PRs","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: 'listPullRequests',","      value: function listPullRequests(options, cb) {","         options = options || {};","         return this._request('GET', '/repos/' + this.__fullname + '/pulls', options, cb);","      }","","      /**","       * Get information about a specific pull request","       * @see https://developer.github.com/v3/pulls/#get-a-single-pull-request","       * @param {number} number - the PR you wish to fetch","       * @param {Requestable.callback} [cb] - will receive the PR from the API","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: 'getPullRequest',","      value: function getPullRequest(number, cb) {","         return this._request('GET', '/repos/' + this.__fullname + '/pulls/' + number, null, cb);","      }","","      /**","       * List the files of a specific pull request","       * @see https://developer.github.com/v3/pulls/#list-pull-requests-files","       * @param {number|string} number - the PR you wish to fetch","       * @param {Requestable.callback} [cb] - will receive the list of files from the API","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: 'listPullRequestFiles',","      value: function listPullRequestFiles(number, cb) {","         return this._request('GET', '/repos/' + this.__fullname + '/pulls/' + number + '/files', null, cb);","      }","","      /**","       * Compare two branches/commits/repositories","       * @see https://developer.github.com/v3/repos/commits/#compare-two-commits","       * @param {string} base - the base commit","       * @param {string} head - the head commit","       * @param {Requestable.callback} cb - will receive the comparison","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: 'compareBranches',","      value: function compareBranches(base, head, cb) {","         return this._request('GET', '/repos/' + this.__fullname + '/compare/' + base + '...' + head, null, cb);","      }","","      /**","       * List all the branches for the repository","       * @see https://developer.github.com/v3/repos/#list-branches","       * @param {Requestable.callback} cb - will receive the list of branches","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: 'listBranches',","      value: function listBranches(cb) {","         return this._request('GET', '/repos/' + this.__fullname + '/branches', null, cb);","      }","","      /**","       * Get a raw blob from the repository","       * @see https://developer.github.com/v3/git/blobs/#get-a-blob","       * @param {string} sha - the sha of the blob to fetch","       * @param {Requestable.callback} cb - will receive the blob from the API","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: 'getBlob',","      value: function getBlob(sha, cb) {","         return this._request('GET', '/repos/' + this.__fullname + '/git/blobs/' + sha, null, cb, 'raw');","      }","","      /**","       * Get a single branch","       * @see https://developer.github.com/v3/repos/branches/#get-branch","       * @param {string} branch - the name of the branch to fetch","       * @param {Requestable.callback} cb - will receive the branch from the API","       * @returns {Promise} - the promise for the http request","       */","","   }, {","      key: 'getBranch',","      value: function getBranch(branch, cb) {","         return this._request('GET', '/repos/' + this.__fullname + '/branches/' + branch, null, cb);","      }","","      /**","       * Get a commit from the repository","       * @see https://developer.github.com/v3/repos/commits/#get-a-single-commit","       * @param {string} sha - the sha for the commit to fetch","       * @param {Requestable.callback} cb - will receive the commit data","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: 'getCommit',","      value: function getCommit(sha, cb) {","         return this._request('GET', '/repos/' + this.__fullname + '/git/commits/' + sha, null, cb);","      }","","      /**","       * List the commits on a repository, optionally filtering by path, author or time range","       * @see https://developer.github.com/v3/repos/commits/#list-commits-on-a-repository","       * @param {Object} [options] - the filtering options for commits","       * @param {string} [options.sha] - the SHA or branch to start from","       * @param {string} [options.path] - the path to search on","       * @param {string} [options.author] - the commit author","       * @param {(Date|string)} [options.since] - only commits after this date will be returned","       * @param {(Date|string)} [options.until] - only commits before this date will be returned","       * @param {Requestable.callback} cb - will receive the list of commits found matching the criteria","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: 'listCommits',","      value: function listCommits(options, cb) {","         options = options || {};","","         options.since = this._dateToISO(options.since);","         options.until = this._dateToISO(options.until);","","         return this._request('GET', '/repos/' + this.__fullname + '/commits', options, cb);","      }","","      /**","       * Gets a single commit information for a repository","       * @see https://developer.github.com/v3/repos/commits/#get-a-single-commit","       * @param {string} ref - the reference for the commit-ish","       * @param {Requestable.callback} cb - will receive the commit information","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: 'getSingleCommit',","      value: function getSingleCommit(ref, cb) {","         ref = ref || '';","         return this._request('GET', '/repos/' + this.__fullname + '/commits/' + ref, null, cb);","      }","","      /**","       * Get tha sha for a particular object in the repository. This is a convenience function","       * @see https://developer.github.com/v3/repos/contents/#get-contents","       * @param {string} [branch] - the branch to look in, or the repository's default branch if omitted","       * @param {string} path - the path of the file or directory","       * @param {Requestable.callback} cb - will receive a description of the requested object, including a `SHA` property","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: 'getSha',","      value: function getSha(branch, path, cb) {","         branch = branch ? '?ref=' + branch : '';","         return this._request('GET', '/repos/' + this.__fullname + '/contents/' + path + branch, null, cb);","      }","","      /**","       * List the commit statuses for a particular sha, branch, or tag","       * @see https://developer.github.com/v3/repos/statuses/#list-statuses-for-a-specific-ref","       * @param {string} sha - the sha, branch, or tag to get statuses for","       * @param {Requestable.callback} cb - will receive the list of statuses","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: 'listStatuses',","      value: function listStatuses(sha, cb) {","         return this._request('GET', '/repos/' + this.__fullname + '/commits/' + sha + '/statuses', null, cb);","      }","","      /**","       * Get a description of a git tree","       * @see https://developer.github.com/v3/git/trees/#get-a-tree","       * @param {string} treeSHA - the SHA of the tree to fetch","       * @param {Requestable.callback} cb - will receive the callback data","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: 'getTree',","      value: function getTree(treeSHA, cb) {","         return this._request('GET', '/repos/' + this.__fullname + '/git/trees/' + treeSHA, null, cb);","      }","","      /**","       * Create a blob","       * @see https://developer.github.com/v3/git/blobs/#create-a-blob","       * @param {(string|Buffer|Blob)} content - the content to add to the repository","       * @param {Requestable.callback} cb - will receive the details of the created blob","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: 'createBlob',","      value: function createBlob(content, cb) {","         var postBody = this._getContentObject(content);","","         log('sending content', postBody);","         return this._request('POST', '/repos/' + this.__fullname + '/git/blobs', postBody, cb);","      }","","      /**","       * Get the object that represents the provided content","       * @param {string|Buffer|Blob} content - the content to send to the server","       * @return {Object} the representation of `content` for the GitHub API","       */","","   }, {","      key: '_getContentObject',","      value: function _getContentObject(content) {","         if (typeof content === 'string') {","            log('contet is a string');","            return {","               content: _utf2.default.encode(content),","               encoding: 'utf-8'","            };","         } else if (typeof Buffer !== 'undefined' && content instanceof Buffer) {","            log('We appear to be in Node');","            return {","               content: content.toString('base64'),","               encoding: 'base64'","            };","         } else if (typeof Blob !== 'undefined' && content instanceof Blob) {","            log('We appear to be in the browser');","            return {","               content: _jsBase.Base64.encode(content),","               encoding: 'base64'","            };","         } else {","            // eslint-disable-line","            log('Not sure what this content is: ' + (typeof content === 'undefined' ? 'undefined' : _typeof(content)) + ', ' + JSON.stringify(content));","            throw new Error('Unknown content passed to postBlob. Must be string or Buffer (node) or Blob (web)');","         }","      }","","      /**","       * Update a tree in Git","       * @see https://developer.github.com/v3/git/trees/#create-a-tree","       * @param {string} baseTreeSHA - the SHA of the tree to update","       * @param {string} path - the path for the new file","       * @param {string} blobSHA - the SHA for the blob to put at `path`","       * @param {Requestable.callback} cb - will receive the new tree that is created","       * @return {Promise} - the promise for the http request","       * @deprecated use {@link Repository#createTree} instead","       */","","   }, {","      key: 'updateTree',","      value: function updateTree(baseTreeSHA, path, blobSHA, cb) {","         var newTree = {","            base_tree: baseTreeSHA, // eslint-disable-line","            tree: [{","               path: path,","               sha: blobSHA,","               mode: '100644',","               type: 'blob'","            }]","         };","","         return this._request('POST', '/repos/' + this.__fullname + '/git/trees', newTree, cb);","      }","","      /**","       * Create a new tree in git","       * @see https://developer.github.com/v3/git/trees/#create-a-tree","       * @param {Object} tree - the tree to create","       * @param {string} baseSHA - the root sha of the tree","       * @param {Requestable.callback} cb - will receive the new tree that is created","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: 'createTree',","      value: function createTree(tree, baseSHA, cb) {","         return this._request('POST', '/repos/' + this.__fullname + '/git/trees', {","            tree: tree,","            base_tree: baseSHA }, cb);","      }","","      /**","       * Add a commit to the repository","       * @see https://developer.github.com/v3/git/commits/#create-a-commit","       * @param {string} parent - the SHA of the parent commit","       * @param {string} tree - the SHA of the tree for this commit","       * @param {string} message - the commit message","       * @param {Requestable.callback} cb - will receive the commit that is created","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: 'commit',","      value: function commit(parent, tree, message, cb) {","         var _this2 = this;","","         var data = {","            message: message,","            tree: tree,","            parents: [parent]","         };","","         return this._request('POST', '/repos/' + this.__fullname + '/git/commits', data, cb).then(function (response) {","            _this2.__currentTree.sha = response.data.sha; // Update latest commit","            return response;","         });","      }","","      /**","       * Update a ref","       * @see https://developer.github.com/v3/git/refs/#update-a-reference","       * @param {string} ref - the ref to update","       * @param {string} commitSHA - the SHA to point the reference to","       * @param {boolean} force - indicates whether to force or ensure a fast-forward update","       * @param {Requestable.callback} cb - will receive the updated ref back","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: 'updateHead',","      value: function updateHead(ref, commitSHA, force, cb) {","         return this._request('PATCH', '/repos/' + this.__fullname + '/git/refs/' + ref, {","            sha: commitSHA,","            force: force","         }, cb);","      }","","      /**","       * Update commit status","       * @see https://developer.github.com/v3/repos/statuses/","       * @param {string} commitSHA - the SHA of the commit that should be updated","       * @param {object} options - Commit status parameters","       * @param {string} options.state - The state of the status. Can be one of: pending, success, error, or failure.","       * @param {string} [options.target_url] - The target URL to associate with this status.","       * @param {string} [options.description] - A short description of the status.","       * @param {string} [options.context] - A string label to differentiate this status among CI systems.","       * @param {Requestable.callback} cb - will receive the updated commit back","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: 'updateStatus',","      value: function updateStatus(commitSHA, options, cb) {","         return this._request('POST', '/repos/' + this.__fullname + '/statuses/' + commitSHA, options, cb);","      }","","      /**","       * Update repository information","       * @see https://developer.github.com/v3/repos/#edit","       * @param {object} options - New parameters that will be set to the repository","       * @param {string} options.name - Name of the repository","       * @param {string} [options.description] - A short description of the repository","       * @param {string} [options.homepage] - A URL with more information about the repository","       * @param {boolean} [options.private] - Either true to make the repository private, or false to make it public.","       * @param {boolean} [options.has_issues] - Either true to enable issues for this repository, false to disable them.","       * @param {boolean} [options.has_wiki] - Either true to enable the wiki for this repository, false to disable it.","       * @param {boolean} [options.has_downloads] - Either true to enable downloads, false to disable them.","       * @param {string} [options.default_branch] - Updates the default branch for this repository.","       * @param {Requestable.callback} cb - will receive the updated repository back","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: 'updateRepository',","      value: function updateRepository(options, cb) {","         return this._request('PATCH', '/repos/' + this.__fullname, options, cb);","      }","","      /**","        * Get information about the repository","        * @see https://developer.github.com/v3/repos/#get","        * @param {Requestable.callback} cb - will receive the information about the repository","        * @return {Promise} - the promise for the http request","        */","","   }, {","      key: 'getDetails',","      value: function getDetails(cb) {","         return this._request('GET', '/repos/' + this.__fullname, null, cb);","      }","","      /**","       * List the contributors to the repository","       * @see https://developer.github.com/v3/repos/#list-contributors","       * @param {Requestable.callback} cb - will receive the list of contributors","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: 'getContributors',","      value: function getContributors(cb) {","         return this._request('GET', '/repos/' + this.__fullname + '/contributors', null, cb);","      }","","      /**","       * List the contributor stats to the repository","       * @see https://developer.github.com/v3/repos/#list-contributors","       * @param {Requestable.callback} cb - will receive the list of contributors","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: 'getContributorStats',","      value: function getContributorStats(cb) {","         return this._request('GET', '/repos/' + this.__fullname + '/stats/contributors', null, cb);","      }","","      /**","       * List the users who are collaborators on the repository. The currently authenticated user must have","       * push access to use this method","       * @see https://developer.github.com/v3/repos/collaborators/#list-collaborators","       * @param {Requestable.callback} cb - will receive the list of collaborators","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: 'getCollaborators',","      value: function getCollaborators(cb) {","         return this._request('GET', '/repos/' + this.__fullname + '/collaborators', null, cb);","      }","","      /**","       * Check if a user is a collaborator on the repository","       * @see https://developer.github.com/v3/repos/collaborators/#check-if-a-user-is-a-collaborator","       * @param {string} username - the user to check","       * @param {Requestable.callback} cb - will receive true if the user is a collaborator and false if they are not","       * @return {Promise} - the promise for the http request {Boolean} [description]","       */","","   }, {","      key: 'isCollaborator',","      value: function isCollaborator(username, cb) {","         return this._request('GET', '/repos/' + this.__fullname + '/collaborators/' + username, null, cb);","      }","","      /**","       * Get the contents of a repository","       * @see https://developer.github.com/v3/repos/contents/#get-contents","       * @param {string} ref - the ref to check","       * @param {string} path - the path containing the content to fetch","       * @param {boolean} raw - `true` if the results should be returned raw instead of GitHub's normalized format","       * @param {Requestable.callback} cb - will receive the fetched data","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: 'getContents',","      value: function getContents(ref, path, raw, cb) {","         path = path ? '' + encodeURI(path) : '';","         return this._request('GET', '/repos/' + this.__fullname + '/contents/' + path, {","            ref: ref","         }, cb, raw);","      }","","      /**","       * Get the README of a repository","       * @see https://developer.github.com/v3/repos/contents/#get-the-readme","       * @param {string} ref - the ref to check","       * @param {boolean} raw - `true` if the results should be returned raw instead of GitHub's normalized format","       * @param {Requestable.callback} cb - will receive the fetched data","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: 'getReadme',","      value: function getReadme(ref, raw, cb) {","         return this._request('GET', '/repos/' + this.__fullname + '/readme', {","            ref: ref","         }, cb, raw);","      }","","      /**","       * Fork a repository","       * @see https://developer.github.com/v3/repos/forks/#create-a-fork","       * @param {Requestable.callback} cb - will receive the information about the newly created fork","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: 'fork',","      value: function fork(cb) {","         return this._request('POST', '/repos/' + this.__fullname + '/forks', null, cb);","      }","","      /**","       * List a repository's forks","       * @see https://developer.github.com/v3/repos/forks/#list-forks","       * @param {Requestable.callback} cb - will receive the list of repositories forked from this one","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: 'listForks',","      value: function listForks(cb) {","         return this._request('GET', '/repos/' + this.__fullname + '/forks', null, cb);","      }","","      /**","       * Create a new branch from an existing branch.","       * @param {string} [oldBranch=master] - the name of the existing branch","       * @param {string} newBranch - the name of the new branch","       * @param {Requestable.callback} cb - will receive the commit data for the head of the new branch","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: 'createBranch',","      value: function createBranch(oldBranch, newBranch, cb) {","         var _this3 = this;","","         if (typeof newBranch === 'function') {","            cb = newBranch;","            newBranch = oldBranch;","            oldBranch = 'master';","         }","","         return this.getRef('heads/' + oldBranch).then(function (response) {","            var sha = response.data.object.sha;","            return _this3.createRef({","               sha: sha,","               ref: 'refs/heads/' + newBranch","            }, cb);","         });","      }","","      /**","       * Create a new pull request","       * @see https://developer.github.com/v3/pulls/#create-a-pull-request","       * @param {Object} options - the pull request description","       * @param {Requestable.callback} cb - will receive the new pull request","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: 'createPullRequest',","      value: function createPullRequest(options, cb) {","         return this._request('POST', '/repos/' + this.__fullname + '/pulls', options, cb);","      }","","      /**","       * Update a pull request","       * @see https://developer.github.com/v3/pulls/#update-a-pull-request","       * @param {number|string} number - the number of the pull request to update","       * @param {Object} options - the pull request description","       * @param {Requestable.callback} [cb] - will receive the pull request information","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: 'updatePullRequest',","      value: function updatePullRequest(number, options, cb) {","         return this._request('PATCH', '/repos/' + this.__fullname + '/pulls/' + number, options, cb);","      }","","      /**","       * List the hooks for the repository","       * @see https://developer.github.com/v3/repos/hooks/#list-hooks","       * @param {Requestable.callback} cb - will receive the list of hooks","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: 'listHooks',","      value: function listHooks(cb) {","         return this._request('GET', '/repos/' + this.__fullname + '/hooks', null, cb);","      }","","      /**","       * Get a hook for the repository","       * @see https://developer.github.com/v3/repos/hooks/#get-single-hook","       * @param {number} id - the id of the webook","       * @param {Requestable.callback} cb - will receive the details of the webook","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: 'getHook',","      value: function getHook(id, cb) {","         return this._request('GET', '/repos/' + this.__fullname + '/hooks/' + id, null, cb);","      }","","      /**","       * Add a new hook to the repository","       * @see https://developer.github.com/v3/repos/hooks/#create-a-hook","       * @param {Object} options - the configuration describing the new hook","       * @param {Requestable.callback} cb - will receive the new webhook","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: 'createHook',","      value: function createHook(options, cb) {","         return this._request('POST', '/repos/' + this.__fullname + '/hooks', options, cb);","      }","","      /**","       * Edit an existing webhook","       * @see https://developer.github.com/v3/repos/hooks/#edit-a-hook","       * @param {number} id - the id of the webhook","       * @param {Object} options - the new description of the webhook","       * @param {Requestable.callback} cb - will receive the updated webhook","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: 'updateHook',","      value: function updateHook(id, options, cb) {","         return this._request('PATCH', '/repos/' + this.__fullname + '/hooks/' + id, options, cb);","      }","","      /**","       * Delete a webhook","       * @see https://developer.github.com/v3/repos/hooks/#delete-a-hook","       * @param {number} id - the id of the webhook to be deleted","       * @param {Requestable.callback} cb - will receive true if the call is successful","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: 'deleteHook',","      value: function deleteHook(id, cb) {","         return this._request('DELETE', this.__fullname + '/hooks/' + id, null, cb);","      }","","      /**","       * List the deploy keys for the repository","       * @see https://developer.github.com/v3/repos/keys/#list-deploy-keys","       * @param {Requestable.callback} cb - will receive the list of deploy keys","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: 'listKeys',","      value: function listKeys(cb) {","         return this._request('GET', '/repos/' + this.__fullname + '/keys', null, cb);","      }","","      /**","       * Get a deploy key for the repository","       * @see https://developer.github.com/v3/repos/keys/#get-a-deploy-key","       * @param {number} id - the id of the deploy key","       * @param {Requestable.callback} cb - will receive the details of the deploy key","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: 'getKey',","      value: function getKey(id, cb) {","         return this._request('GET', '/repos/' + this.__fullname + '/keys/' + id, null, cb);","      }","","      /**","       * Add a new deploy key to the repository","       * @see https://developer.github.com/v3/repos/keys/#add-a-new-deploy-key","       * @param {Object} options - the configuration describing the new deploy key","       * @param {Requestable.callback} cb - will receive the new deploy key","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: 'createKey',","      value: function createKey(options, cb) {","         return this._request('POST', '/repos/' + this.__fullname + '/keys', options, cb);","      }","","      /**","       * Delete a deploy key","       * @see https://developer.github.com/v3/repos/keys/#remove-a-deploy-key","       * @param {number} id - the id of the deploy key to be deleted","       * @param {Requestable.callback} cb - will receive true if the call is successful","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: 'deleteKey',","      value: function deleteKey(id, cb) {","         return this._request('DELETE', '/repos/' + this.__fullname + '/keys/' + id, null, cb);","      }","","      /**","       * Delete a file from a branch","       * @see https://developer.github.com/v3/repos/contents/#delete-a-file","       * @param {string} branch - the branch to delete from, or the default branch if not specified","       * @param {string} path - the path of the file to remove","       * @param {Requestable.callback} cb - will receive the commit in which the delete occurred","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: 'deleteFile',","      value: function deleteFile(branch, path, cb) {","         var _this4 = this;","","         return this.getSha(branch, path).then(function (response) {","            var deleteCommit = {","               message: 'Delete the file at \\'' + path + '\\'',","               sha: response.data.sha,","               branch: branch","            };","            return _this4._request('DELETE', '/repos/' + _this4.__fullname + '/contents/' + path, deleteCommit, cb);","         });","      }","","      /**","       * Change all references in a repo from oldPath to new_path","       * @param {string} branch - the branch to carry out the reference change, or the default branch if not specified","       * @param {string} oldPath - original path","       * @param {string} newPath - new reference path","       * @param {Requestable.callback} cb - will receive the commit in which the move occurred","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: 'move',","      value: function move(branch, oldPath, newPath, cb) {","         var _this5 = this;","","         var oldSha = void 0;","         return this.getRef('heads/' + branch).then(function (_ref) {","            var object = _ref.data.object;","            return _this5.getTree(object.sha + '?recursive=true');","         }).then(function (_ref2) {","            var _ref2$data = _ref2.data,","                tree = _ref2$data.tree,","                sha = _ref2$data.sha;","","            oldSha = sha;","            var newTree = tree.map(function (ref) {","               if (ref.path === oldPath) {","                  ref.path = newPath;","               }","               if (ref.type === 'tree') {","                  delete ref.sha;","               }","               return ref;","            });","            return _this5.createTree(newTree);","         }).then(function (_ref3) {","            var tree = _ref3.data;","            return _this5.commit(oldSha, tree.sha, 'Renamed \\'' + oldPath + '\\' to \\'' + newPath + '\\'');","         }).then(function (_ref4) {","            var commit = _ref4.data;","            return _this5.updateHead('heads/' + branch, commit.sha, true, cb);","         });","      }","","      /**","       * Write a file to the repository","       * @see https://developer.github.com/v3/repos/contents/#update-a-file","       * @param {string} branch - the name of the branch","       * @param {string} path - the path for the file","       * @param {string} content - the contents of the file","       * @param {string} message - the commit message","       * @param {Object} [options] - commit options","       * @param {Object} [options.author] - the author of the commit","       * @param {Object} [options.commiter] - the committer","       * @param {boolean} [options.encode] - true if the content should be base64 encoded","       * @param {Requestable.callback} cb - will receive the new commit","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: 'writeFile',","      value: function writeFile(branch, path, content, message, options, cb) {","         var _this6 = this;","","         if (typeof options === 'function') {","            cb = options;","            options = {};","         }","         var filePath = path ? encodeURI(path) : '';","         var shouldEncode = options.encode !== false;","         var commit = {","            branch: branch,","            message: message,","            author: options.author,","            committer: options.committer,","            content: shouldEncode ? _jsBase.Base64.encode(content) : content","         };","","         return this.getSha(branch, filePath).then(function (response) {","            commit.sha = response.data.sha;","            return _this6._request('PUT', '/repos/' + _this6.__fullname + '/contents/' + filePath, commit, cb);","         }, function () {","            return _this6._request('PUT', '/repos/' + _this6.__fullname + '/contents/' + filePath, commit, cb);","         });","      }","","      /**","       * Check if a repository is starred by you","       * @see https://developer.github.com/v3/activity/starring/#check-if-you-are-starring-a-repository","       * @param {Requestable.callback} cb - will receive true if the repository is starred and false if the repository","       *                                  is not starred","       * @return {Promise} - the promise for the http request {Boolean} [description]","       */","","   }, {","      key: 'isStarred',","      value: function isStarred(cb) {","         return this._request204or404('/user/starred/' + this.__fullname, null, cb);","      }","","      /**","       * Star a repository","       * @see https://developer.github.com/v3/activity/starring/#star-a-repository","       * @param {Requestable.callback} cb - will receive true if the repository is starred","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: 'star',","      value: function star(cb) {","         return this._request('PUT', '/user/starred/' + this.__fullname, null, cb);","      }","","      /**","       * Unstar a repository","       * @see https://developer.github.com/v3/activity/starring/#unstar-a-repository","       * @param {Requestable.callback} cb - will receive true if the repository is unstarred","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: 'unstar',","      value: function unstar(cb) {","         return this._request('DELETE', '/user/starred/' + this.__fullname, null, cb);","      }","","      /**","       * Create a new release","       * @see https://developer.github.com/v3/repos/releases/#create-a-release","       * @param {Object} options - the description of the release","       * @param {Requestable.callback} cb - will receive the newly created release","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: 'createRelease',","      value: function createRelease(options, cb) {","         return this._request('POST', '/repos/' + this.__fullname + '/releases', options, cb);","      }","","      /**","       * Edit a release","       * @see https://developer.github.com/v3/repos/releases/#edit-a-release","       * @param {string} id - the id of the release","       * @param {Object} options - the description of the release","       * @param {Requestable.callback} cb - will receive the modified release","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: 'updateRelease',","      value: function updateRelease(id, options, cb) {","         return this._request('PATCH', '/repos/' + this.__fullname + '/releases/' + id, options, cb);","      }","","      /**","       * Get information about all releases","       * @see https://developer.github.com/v3/repos/releases/#list-releases-for-a-repository","       * @param {Requestable.callback} cb - will receive the release information","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: 'listReleases',","      value: function listReleases(cb) {","         return this._request('GET', '/repos/' + this.__fullname + '/releases', null, cb);","      }","","      /**","       * Get information about a release","       * @see https://developer.github.com/v3/repos/releases/#get-a-single-release","       * @param {string} id - the id of the release","       * @param {Requestable.callback} cb - will receive the release information","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: 'getRelease',","      value: function getRelease(id, cb) {","         return this._request('GET', '/repos/' + this.__fullname + '/releases/' + id, null, cb);","      }","","      /**","       * Delete a release","       * @see https://developer.github.com/v3/repos/releases/#delete-a-release","       * @param {string} id - the release to be deleted","       * @param {Requestable.callback} cb - will receive true if the operation is successful","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: 'deleteRelease',","      value: function deleteRelease(id, cb) {","         return this._request('DELETE', '/repos/' + this.__fullname + '/releases/' + id, null, cb);","      }","","      /**","       * Merge a pull request","       * @see https://developer.github.com/v3/pulls/#merge-a-pull-request-merge-button","       * @param {number|string} number - the number of the pull request to merge","       * @param {Object} options - the merge options for the pull request","       * @param {Requestable.callback} [cb] - will receive the merge information if the operation is successful","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: 'mergePullRequest',","      value: function mergePullRequest(number, options, cb) {","         return this._request('PUT', '/repos/' + this.__fullname + '/pulls/' + number + '/merge', options, cb);","      }","","      /**","       * Get information about all projects","       * @see https://developer.github.com/v3/projects/#list-repository-projects","       * @param {Requestable.callback} [cb] - will receive the list of projects","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: 'listProjects',","      value: function listProjects(cb) {","         return this._requestAllPages('/repos/' + this.__fullname + '/projects', { AcceptHeader: 'inertia-preview' }, cb);","      }","","      /**","       * Create a new project","       * @see https://developer.github.com/v3/projects/#create-a-repository-project","       * @param {Object} options - the description of the project","       * @param {Requestable.callback} cb - will receive the newly created project","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: 'createProject',","      value: function createProject(options, cb) {","         options = options || {};","         options.AcceptHeader = 'inertia-preview';","         return this._request('POST', '/repos/' + this.__fullname + '/projects', options, cb);","      }","   }]);","","   return Repository;","}(_Requestable3.default);","","module.exports = Repository;","//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlJlcG9zaXRvcnkuanMiXSwibmFtZXMiOlsibG9nIiwiUmVwb3NpdG9yeSIsImZ1bGxuYW1lIiwiYXV0aCIsImFwaUJhc2UiLCJfX2Z1bGxuYW1lIiwiX19jdXJyZW50VHJlZSIsImJyYW5jaCIsInNoYSIsInJlZiIsImNiIiwiX3JlcXVlc3QiLCJvcHRpb25zIiwibnVtYmVyIiwiYmFzZSIsImhlYWQiLCJzaW5jZSIsIl9kYXRlVG9JU08iLCJ1bnRpbCIsInBhdGgiLCJ0cmVlU0hBIiwiY29udGVudCIsInBvc3RCb2R5IiwiX2dldENvbnRlbnRPYmplY3QiLCJlbmNvZGUiLCJlbmNvZGluZyIsIkJ1ZmZlciIsInRvU3RyaW5nIiwiQmxvYiIsIkpTT04iLCJzdHJpbmdpZnkiLCJFcnJvciIsImJhc2VUcmVlU0hBIiwiYmxvYlNIQSIsIm5ld1RyZWUiLCJiYXNlX3RyZWUiLCJ0cmVlIiwibW9kZSIsInR5cGUiLCJiYXNlU0hBIiwicGFyZW50IiwibWVzc2FnZSIsImRhdGEiLCJwYXJlbnRzIiwidGhlbiIsInJlc3BvbnNlIiwiY29tbWl0U0hBIiwiZm9yY2UiLCJ1c2VybmFtZSIsInJhdyIsImVuY29kZVVSSSIsIm9sZEJyYW5jaCIsIm5ld0JyYW5jaCIsImdldFJlZiIsIm9iamVjdCIsImNyZWF0ZVJlZiIsImlkIiwiZ2V0U2hhIiwiZGVsZXRlQ29tbWl0Iiwib2xkUGF0aCIsIm5ld1BhdGgiLCJvbGRTaGEiLCJnZXRUcmVlIiwibWFwIiwiY3JlYXRlVHJlZSIsImNvbW1pdCIsInVwZGF0ZUhlYWQiLCJmaWxlUGF0aCIsInNob3VsZEVuY29kZSIsImF1dGhvciIsImNvbW1pdHRlciIsIl9yZXF1ZXN0MjA0b3I0MDQiLCJfcmVxdWVzdEFsbFBhZ2VzIiwiQWNjZXB0SGVhZGVyIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBT0E7Ozs7QUFDQTs7OztBQUNBOztBQUdBOzs7Ozs7Ozs7OytlQVpBOzs7Ozs7O0FBYUEsSUFBTUEsTUFBTSxxQkFBTSxtQkFBTixDQUFaOztBQUVBOzs7O0lBR01DLFU7OztBQUNIOzs7Ozs7QUFNQSx1QkFBWUMsUUFBWixFQUFzQkMsSUFBdEIsRUFBNEJDLE9BQTVCLEVBQXFDO0FBQUE7O0FBQUEsMEhBQzVCRCxJQUQ0QixFQUN0QkMsT0FEc0I7O0FBRWxDLFlBQUtDLFVBQUwsR0FBa0JILFFBQWxCO0FBQ0EsWUFBS0ksYUFBTCxHQUFxQjtBQUNsQkMsaUJBQVEsSUFEVTtBQUVsQkMsY0FBSztBQUZhLE9BQXJCO0FBSGtDO0FBT3BDOztBQUVEOzs7Ozs7Ozs7Ozs2QkFPT0MsRyxFQUFLQyxFLEVBQUk7QUFDYixnQkFBTyxLQUFLQyxRQUFMLENBQWMsS0FBZCxjQUErQixLQUFLTixVQUFwQyxrQkFBMkRJLEdBQTNELEVBQWtFLElBQWxFLEVBQXdFQyxFQUF4RSxDQUFQO0FBQ0Y7O0FBRUQ7Ozs7Ozs7Ozs7Z0NBT1VFLE8sRUFBU0YsRSxFQUFJO0FBQ3BCLGdCQUFPLEtBQUtDLFFBQUwsQ0FBYyxNQUFkLGNBQWdDLEtBQUtOLFVBQXJDLGdCQUE0RE8sT0FBNUQsRUFBcUVGLEVBQXJFLENBQVA7QUFDRjs7QUFFRDs7Ozs7Ozs7OztnQ0FPVUQsRyxFQUFLQyxFLEVBQUk7QUFDaEIsZ0JBQU8sS0FBS0MsUUFBTCxDQUFjLFFBQWQsY0FBa0MsS0FBS04sVUFBdkMsa0JBQThESSxHQUE5RCxFQUFxRSxJQUFyRSxFQUEyRUMsRUFBM0UsQ0FBUDtBQUNGOztBQUVEOzs7Ozs7Ozs7aUNBTVdBLEUsRUFBSTtBQUNaLGdCQUFPLEtBQUtDLFFBQUwsQ0FBYyxRQUFkLGNBQWtDLEtBQUtOLFVBQXZDLEVBQXFELElBQXJELEVBQTJESyxFQUEzRCxDQUFQO0FBQ0Y7O0FBRUQ7Ozs7Ozs7OzsrQkFNU0EsRSxFQUFJO0FBQ1YsZ0JBQU8sS0FBS0MsUUFBTCxDQUFjLEtBQWQsY0FBK0IsS0FBS04sVUFBcEMsWUFBdUQsSUFBdkQsRUFBNkRLLEVBQTdELENBQVA7QUFDRjs7QUFFRDs7Ozs7Ozs7Ozt1Q0FPaUJFLE8sRUFBU0YsRSxFQUFJO0FBQzNCRSxtQkFBVUEsV0FBVyxFQUFyQjtBQUNBLGdCQUFPLEtBQUtELFFBQUwsQ0FBYyxLQUFkLGNBQStCLEtBQUtOLFVBQXBDLGFBQXdETyxPQUF4RCxFQUFpRUYsRUFBakUsQ0FBUDtBQUNGOztBQUVEOzs7Ozs7Ozs7O3FDQU9lRyxNLEVBQVFILEUsRUFBSTtBQUN4QixnQkFBTyxLQUFLQyxRQUFMLENBQWMsS0FBZCxjQUErQixLQUFLTixVQUFwQyxlQUF3RFEsTUFBeEQsRUFBa0UsSUFBbEUsRUFBd0VILEVBQXhFLENBQVA7QUFDRjs7QUFFRDs7Ozs7Ozs7OzsyQ0FPcUJHLE0sRUFBUUgsRSxFQUFJO0FBQzlCLGdCQUFPLEtBQUtDLFFBQUwsQ0FBYyxLQUFkLGNBQStCLEtBQUtOLFVBQXBDLGVBQXdEUSxNQUF4RCxhQUF3RSxJQUF4RSxFQUE4RUgsRUFBOUUsQ0FBUDtBQUNGOztBQUVEOzs7Ozs7Ozs7OztzQ0FRZ0JJLEksRUFBTUMsSSxFQUFNTCxFLEVBQUk7QUFDN0IsZ0JBQU8sS0FBS0MsUUFBTCxDQUFjLEtBQWQsY0FBK0IsS0FBS04sVUFBcEMsaUJBQTBEUyxJQUExRCxXQUFvRUMsSUFBcEUsRUFBNEUsSUFBNUUsRUFBa0ZMLEVBQWxGLENBQVA7QUFDRjs7QUFFRDs7Ozs7Ozs7O21DQU1hQSxFLEVBQUk7QUFDZCxnQkFBTyxLQUFLQyxRQUFMLENBQWMsS0FBZCxjQUErQixLQUFLTixVQUFwQyxnQkFBMkQsSUFBM0QsRUFBaUVLLEVBQWpFLENBQVA7QUFDRjs7QUFFRDs7Ozs7Ozs7Ozs4QkFPUUYsRyxFQUFLRSxFLEVBQUk7QUFDZCxnQkFBTyxLQUFLQyxRQUFMLENBQWMsS0FBZCxjQUErQixLQUFLTixVQUFwQyxtQkFBNERHLEdBQTVELEVBQW1FLElBQW5FLEVBQXlFRSxFQUF6RSxFQUE2RSxLQUE3RSxDQUFQO0FBQ0Y7O0FBRUQ7Ozs7Ozs7Ozs7Z0NBT1VILE0sRUFBUUcsRSxFQUFJO0FBQ25CLGdCQUFPLEtBQUtDLFFBQUwsQ0FBYyxLQUFkLGNBQStCLEtBQUtOLFVBQXBDLGtCQUEyREUsTUFBM0QsRUFBcUUsSUFBckUsRUFBMkVHLEVBQTNFLENBQVA7QUFDRjs7QUFFRDs7Ozs7Ozs7OztnQ0FPVUYsRyxFQUFLRSxFLEVBQUk7QUFDaEIsZ0JBQU8sS0FBS0MsUUFBTCxDQUFjLEtBQWQsY0FBK0IsS0FBS04sVUFBcEMscUJBQThERyxHQUE5RCxFQUFxRSxJQUFyRSxFQUEyRUUsRUFBM0UsQ0FBUDtBQUNGOztBQUVEOzs7Ozs7Ozs7Ozs7Ozs7a0NBWVlFLE8sRUFBU0YsRSxFQUFJO0FBQ3RCRSxtQkFBVUEsV0FBVyxFQUFyQjs7QUFFQUEsaUJBQVFJLEtBQVIsR0FBZ0IsS0FBS0MsVUFBTCxDQUFnQkwsUUFBUUksS0FBeEIsQ0FBaEI7QUFDQUosaUJBQVFNLEtBQVIsR0FBZ0IsS0FBS0QsVUFBTCxDQUFnQkwsUUFBUU0sS0FBeEIsQ0FBaEI7O0FBRUEsZ0JBQU8sS0FBS1AsUUFBTCxDQUFjLEtBQWQsY0FBK0IsS0FBS04sVUFBcEMsZUFBMERPLE9BQTFELEVBQW1FRixFQUFuRSxDQUFQO0FBQ0Y7O0FBRUE7Ozs7Ozs7Ozs7c0NBT2VELEcsRUFBS0MsRSxFQUFJO0FBQ3RCRCxlQUFNQSxPQUFPLEVBQWI7QUFDQSxnQkFBTyxLQUFLRSxRQUFMLENBQWMsS0FBZCxjQUErQixLQUFLTixVQUFwQyxpQkFBMERJLEdBQTFELEVBQWlFLElBQWpFLEVBQXVFQyxFQUF2RSxDQUFQO0FBQ0Y7O0FBRUQ7Ozs7Ozs7Ozs7OzZCQVFPSCxNLEVBQVFZLEksRUFBTVQsRSxFQUFJO0FBQ3RCSCxrQkFBU0EsbUJBQWlCQSxNQUFqQixHQUE0QixFQUFyQztBQUNBLGdCQUFPLEtBQUtJLFFBQUwsQ0FBYyxLQUFkLGNBQStCLEtBQUtOLFVBQXBDLGtCQUEyRGMsSUFBM0QsR0FBa0VaLE1BQWxFLEVBQTRFLElBQTVFLEVBQWtGRyxFQUFsRixDQUFQO0FBQ0Y7O0FBRUQ7Ozs7Ozs7Ozs7bUNBT2FGLEcsRUFBS0UsRSxFQUFJO0FBQ25CLGdCQUFPLEtBQUtDLFFBQUwsQ0FBYyxLQUFkLGNBQStCLEtBQUtOLFVBQXBDLGlCQUEwREcsR0FBMUQsZ0JBQTBFLElBQTFFLEVBQWdGRSxFQUFoRixDQUFQO0FBQ0Y7O0FBRUQ7Ozs7Ozs7Ozs7OEJBT1FVLE8sRUFBU1YsRSxFQUFJO0FBQ2xCLGdCQUFPLEtBQUtDLFFBQUwsQ0FBYyxLQUFkLGNBQStCLEtBQUtOLFVBQXBDLG1CQUE0RGUsT0FBNUQsRUFBdUUsSUFBdkUsRUFBNkVWLEVBQTdFLENBQVA7QUFDRjs7QUFFRDs7Ozs7Ozs7OztpQ0FPV1csTyxFQUFTWCxFLEVBQUk7QUFDckIsYUFBSVksV0FBVyxLQUFLQyxpQkFBTCxDQUF1QkYsT0FBdkIsQ0FBZjs7QUFFQXJCLGFBQUksaUJBQUosRUFBdUJzQixRQUF2QjtBQUNBLGdCQUFPLEtBQUtYLFFBQUwsQ0FBYyxNQUFkLGNBQWdDLEtBQUtOLFVBQXJDLGlCQUE2RGlCLFFBQTdELEVBQXVFWixFQUF2RSxDQUFQO0FBQ0Y7O0FBRUQ7Ozs7Ozs7O3dDQUtrQlcsTyxFQUFTO0FBQ3hCLGFBQUksT0FBT0EsT0FBUCxLQUFtQixRQUF2QixFQUFpQztBQUM5QnJCLGdCQUFJLG9CQUFKO0FBQ0EsbUJBQU87QUFDSnFCLHdCQUFTLGNBQUtHLE1BQUwsQ0FBWUgsT0FBWixDQURMO0FBRUpJLHlCQUFVO0FBRk4sYUFBUDtBQUtGLFVBUEQsTUFPTyxJQUFJLE9BQU9DLE1BQVAsS0FBa0IsV0FBbEIsSUFBaUNMLG1CQUFtQkssTUFBeEQsRUFBZ0U7QUFDcEUxQixnQkFBSSx5QkFBSjtBQUNBLG1CQUFPO0FBQ0pxQix3QkFBU0EsUUFBUU0sUUFBUixDQUFpQixRQUFqQixDQURMO0FBRUpGLHlCQUFVO0FBRk4sYUFBUDtBQUtGLFVBUE0sTUFPQSxJQUFJLE9BQU9HLElBQVAsS0FBZ0IsV0FBaEIsSUFBK0JQLG1CQUFtQk8sSUFBdEQsRUFBNEQ7QUFDaEU1QixnQkFBSSxnQ0FBSjtBQUNBLG1CQUFPO0FBQ0pxQix3QkFBUyxlQUFPRyxNQUFQLENBQWNILE9BQWQsQ0FETDtBQUVKSSx5QkFBVTtBQUZOLGFBQVA7QUFLRixVQVBNLE1BT0E7QUFBRTtBQUNOekIsNERBQTZDcUIsT0FBN0MseUNBQTZDQSxPQUE3QyxZQUF5RFEsS0FBS0MsU0FBTCxDQUFlVCxPQUFmLENBQXpEO0FBQ0Esa0JBQU0sSUFBSVUsS0FBSixDQUFVLG1GQUFWLENBQU47QUFDRjtBQUNIOztBQUVEOzs7Ozs7Ozs7Ozs7O2lDQVVXQyxXLEVBQWFiLEksRUFBTWMsTyxFQUFTdkIsRSxFQUFJO0FBQ3hDLGFBQUl3QixVQUFVO0FBQ1hDLHVCQUFXSCxXQURBLEVBQ2E7QUFDeEJJLGtCQUFNLENBQUM7QUFDSmpCLHFCQUFNQSxJQURGO0FBRUpYLG9CQUFLeUIsT0FGRDtBQUdKSSxxQkFBTSxRQUhGO0FBSUpDLHFCQUFNO0FBSkYsYUFBRDtBQUZLLFVBQWQ7O0FBVUEsZ0JBQU8sS0FBSzNCLFFBQUwsQ0FBYyxNQUFkLGNBQWdDLEtBQUtOLFVBQXJDLGlCQUE2RDZCLE9BQTdELEVBQXNFeEIsRUFBdEUsQ0FBUDtBQUNGOztBQUVEOzs7Ozs7Ozs7OztpQ0FRVzBCLEksRUFBTUcsTyxFQUFTN0IsRSxFQUFJO0FBQzNCLGdCQUFPLEtBQUtDLFFBQUwsQ0FBYyxNQUFkLGNBQWdDLEtBQUtOLFVBQXJDLGlCQUE2RDtBQUNqRStCLHNCQURpRTtBQUVqRUQsdUJBQVdJLE9BRnNELEVBQTdELEVBR0o3QixFQUhJLENBQVA7QUFJRjs7QUFFRDs7Ozs7Ozs7Ozs7OzZCQVNPOEIsTSxFQUFRSixJLEVBQU1LLE8sRUFBUy9CLEUsRUFBSTtBQUFBOztBQUMvQixhQUFJZ0MsT0FBTztBQUNSRCw0QkFEUTtBQUVSTCxzQkFGUTtBQUdSTyxxQkFBUyxDQUFDSCxNQUFEO0FBSEQsVUFBWDs7QUFNQSxnQkFBTyxLQUFLN0IsUUFBTCxDQUFjLE1BQWQsY0FBZ0MsS0FBS04sVUFBckMsbUJBQStEcUMsSUFBL0QsRUFBcUVoQyxFQUFyRSxFQUNIa0MsSUFERyxDQUNFLFVBQUNDLFFBQUQsRUFBYztBQUNqQixtQkFBS3ZDLGFBQUwsQ0FBbUJFLEdBQW5CLEdBQXlCcUMsU0FBU0gsSUFBVCxDQUFjbEMsR0FBdkMsQ0FEaUIsQ0FDMkI7QUFDNUMsbUJBQU9xQyxRQUFQO0FBQ0YsVUFKRyxDQUFQO0FBS0Y7O0FBRUQ7Ozs7Ozs7Ozs7OztpQ0FTV3BDLEcsRUFBS3FDLFMsRUFBV0MsSyxFQUFPckMsRSxFQUFJO0FBQ25DLGdCQUFPLEtBQUtDLFFBQUwsQ0FBYyxPQUFkLGNBQWlDLEtBQUtOLFVBQXRDLGtCQUE2REksR0FBN0QsRUFBb0U7QUFDeEVELGlCQUFLc0MsU0FEbUU7QUFFeEVDLG1CQUFPQTtBQUZpRSxVQUFwRSxFQUdKckMsRUFISSxDQUFQO0FBSUY7O0FBRUQ7Ozs7Ozs7Ozs7Ozs7OzttQ0FZYW9DLFMsRUFBV2xDLE8sRUFBU0YsRSxFQUFJO0FBQ2xDLGdCQUFPLEtBQUtDLFFBQUwsQ0FBYyxNQUFkLGNBQWdDLEtBQUtOLFVBQXJDLGtCQUE0RHlDLFNBQTVELEVBQXlFbEMsT0FBekUsRUFBa0ZGLEVBQWxGLENBQVA7QUFDRjs7QUFFRDs7Ozs7Ozs7Ozs7Ozs7Ozs7O3VDQWVpQkUsTyxFQUFTRixFLEVBQUk7QUFDM0IsZ0JBQU8sS0FBS0MsUUFBTCxDQUFjLE9BQWQsY0FBaUMsS0FBS04sVUFBdEMsRUFBb0RPLE9BQXBELEVBQTZERixFQUE3RCxDQUFQO0FBQ0Y7O0FBRUY7Ozs7Ozs7OztpQ0FNWUEsRSxFQUFJO0FBQ1osZ0JBQU8sS0FBS0MsUUFBTCxDQUFjLEtBQWQsY0FBK0IsS0FBS04sVUFBcEMsRUFBa0QsSUFBbEQsRUFBd0RLLEVBQXhELENBQVA7QUFDRjs7QUFFRDs7Ozs7Ozs7O3NDQU1nQkEsRSxFQUFJO0FBQ2pCLGdCQUFPLEtBQUtDLFFBQUwsQ0FBYyxLQUFkLGNBQStCLEtBQUtOLFVBQXBDLG9CQUErRCxJQUEvRCxFQUFxRUssRUFBckUsQ0FBUDtBQUNGOztBQUVEOzs7Ozs7Ozs7MENBTW9CQSxFLEVBQUk7QUFDckIsZ0JBQU8sS0FBS0MsUUFBTCxDQUFjLEtBQWQsY0FBK0IsS0FBS04sVUFBcEMsMEJBQXFFLElBQXJFLEVBQTJFSyxFQUEzRSxDQUFQO0FBQ0Y7O0FBRUQ7Ozs7Ozs7Ozs7dUNBT2lCQSxFLEVBQUk7QUFDbEIsZ0JBQU8sS0FBS0MsUUFBTCxDQUFjLEtBQWQsY0FBK0IsS0FBS04sVUFBcEMscUJBQWdFLElBQWhFLEVBQXNFSyxFQUF0RSxDQUFQO0FBQ0Y7O0FBRUQ7Ozs7Ozs7Ozs7cUNBT2VzQyxRLEVBQVV0QyxFLEVBQUk7QUFDMUIsZ0JBQU8sS0FBS0MsUUFBTCxDQUFjLEtBQWQsY0FBK0IsS0FBS04sVUFBcEMsdUJBQWdFMkMsUUFBaEUsRUFBNEUsSUFBNUUsRUFBa0Z0QyxFQUFsRixDQUFQO0FBQ0Y7O0FBRUQ7Ozs7Ozs7Ozs7OztrQ0FTWUQsRyxFQUFLVSxJLEVBQU04QixHLEVBQUt2QyxFLEVBQUk7QUFDN0JTLGdCQUFPQSxZQUFVK0IsVUFBVS9CLElBQVYsQ0FBVixHQUE4QixFQUFyQztBQUNBLGdCQUFPLEtBQUtSLFFBQUwsQ0FBYyxLQUFkLGNBQStCLEtBQUtOLFVBQXBDLGtCQUEyRGMsSUFBM0QsRUFBbUU7QUFDdkVWO0FBRHVFLFVBQW5FLEVBRUpDLEVBRkksRUFFQXVDLEdBRkEsQ0FBUDtBQUdGOztBQUVEOzs7Ozs7Ozs7OztnQ0FRVXhDLEcsRUFBS3dDLEcsRUFBS3ZDLEUsRUFBSTtBQUNyQixnQkFBTyxLQUFLQyxRQUFMLENBQWMsS0FBZCxjQUErQixLQUFLTixVQUFwQyxjQUF5RDtBQUM3REk7QUFENkQsVUFBekQsRUFFSkMsRUFGSSxFQUVBdUMsR0FGQSxDQUFQO0FBR0Y7O0FBRUQ7Ozs7Ozs7OzsyQkFNS3ZDLEUsRUFBSTtBQUNOLGdCQUFPLEtBQUtDLFFBQUwsQ0FBYyxNQUFkLGNBQWdDLEtBQUtOLFVBQXJDLGFBQXlELElBQXpELEVBQStESyxFQUEvRCxDQUFQO0FBQ0Y7O0FBRUQ7Ozs7Ozs7OztnQ0FNVUEsRSxFQUFJO0FBQ1gsZ0JBQU8sS0FBS0MsUUFBTCxDQUFjLEtBQWQsY0FBK0IsS0FBS04sVUFBcEMsYUFBd0QsSUFBeEQsRUFBOERLLEVBQTlELENBQVA7QUFDRjs7QUFFRDs7Ozs7Ozs7OzttQ0FPYXlDLFMsRUFBV0MsUyxFQUFXMUMsRSxFQUFJO0FBQUE7O0FBQ3BDLGFBQUksT0FBTzBDLFNBQVAsS0FBcUIsVUFBekIsRUFBcUM7QUFDbEMxQyxpQkFBSzBDLFNBQUw7QUFDQUEsd0JBQVlELFNBQVo7QUFDQUEsd0JBQVksUUFBWjtBQUNGOztBQUVELGdCQUFPLEtBQUtFLE1BQUwsWUFBcUJGLFNBQXJCLEVBQ0hQLElBREcsQ0FDRSxVQUFDQyxRQUFELEVBQWM7QUFDakIsZ0JBQUlyQyxNQUFNcUMsU0FBU0gsSUFBVCxDQUFjWSxNQUFkLENBQXFCOUMsR0FBL0I7QUFDQSxtQkFBTyxPQUFLK0MsU0FBTCxDQUFlO0FBQ25CL0MsdUJBRG1CO0FBRW5CQyxvQ0FBbUIyQztBQUZBLGFBQWYsRUFHSjFDLEVBSEksQ0FBUDtBQUlGLFVBUEcsQ0FBUDtBQVFGOztBQUVEOzs7Ozs7Ozs7O3dDQU9rQkUsTyxFQUFTRixFLEVBQUk7QUFDNUIsZ0JBQU8sS0FBS0MsUUFBTCxDQUFjLE1BQWQsY0FBZ0MsS0FBS04sVUFBckMsYUFBeURPLE9BQXpELEVBQWtFRixFQUFsRSxDQUFQO0FBQ0Y7O0FBRUQ7Ozs7Ozs7Ozs7O3dDQVFrQkcsTSxFQUFRRCxPLEVBQVNGLEUsRUFBSTtBQUNwQyxnQkFBTyxLQUFLQyxRQUFMLENBQWMsT0FBZCxjQUFpQyxLQUFLTixVQUF0QyxlQUEwRFEsTUFBMUQsRUFBb0VELE9BQXBFLEVBQTZFRixFQUE3RSxDQUFQO0FBQ0Y7O0FBRUQ7Ozs7Ozs7OztnQ0FNVUEsRSxFQUFJO0FBQ1gsZ0JBQU8sS0FBS0MsUUFBTCxDQUFjLEtBQWQsY0FBK0IsS0FBS04sVUFBcEMsYUFBd0QsSUFBeEQsRUFBOERLLEVBQTlELENBQVA7QUFDRjs7QUFFRDs7Ozs7Ozs7Ozs4QkFPUThDLEUsRUFBSTlDLEUsRUFBSTtBQUNiLGdCQUFPLEtBQUtDLFFBQUwsQ0FBYyxLQUFkLGNBQStCLEtBQUtOLFVBQXBDLGVBQXdEbUQsRUFBeEQsRUFBOEQsSUFBOUQsRUFBb0U5QyxFQUFwRSxDQUFQO0FBQ0Y7O0FBRUQ7Ozs7Ozs7Ozs7aUNBT1dFLE8sRUFBU0YsRSxFQUFJO0FBQ3JCLGdCQUFPLEtBQUtDLFFBQUwsQ0FBYyxNQUFkLGNBQWdDLEtBQUtOLFVBQXJDLGFBQXlETyxPQUF6RCxFQUFrRUYsRUFBbEUsQ0FBUDtBQUNGOztBQUVEOzs7Ozs7Ozs7OztpQ0FRVzhDLEUsRUFBSTVDLE8sRUFBU0YsRSxFQUFJO0FBQ3pCLGdCQUFPLEtBQUtDLFFBQUwsQ0FBYyxPQUFkLGNBQWlDLEtBQUtOLFVBQXRDLGVBQTBEbUQsRUFBMUQsRUFBZ0U1QyxPQUFoRSxFQUF5RUYsRUFBekUsQ0FBUDtBQUNGOztBQUVEOzs7Ozs7Ozs7O2lDQU9XOEMsRSxFQUFJOUMsRSxFQUFJO0FBQ2hCLGdCQUFPLEtBQUtDLFFBQUwsQ0FBYyxRQUFkLEVBQTJCLEtBQUtOLFVBQWhDLGVBQW9EbUQsRUFBcEQsRUFBMEQsSUFBMUQsRUFBZ0U5QyxFQUFoRSxDQUFQO0FBQ0Y7O0FBRUQ7Ozs7Ozs7OzsrQkFNU0EsRSxFQUFJO0FBQ1YsZ0JBQU8sS0FBS0MsUUFBTCxDQUFjLEtBQWQsY0FBK0IsS0FBS04sVUFBcEMsWUFBdUQsSUFBdkQsRUFBNkRLLEVBQTdELENBQVA7QUFDRjs7QUFFRDs7Ozs7Ozs7Ozs2QkFPTzhDLEUsRUFBSTlDLEUsRUFBSTtBQUNaLGdCQUFPLEtBQUtDLFFBQUwsQ0FBYyxLQUFkLGNBQStCLEtBQUtOLFVBQXBDLGNBQXVEbUQsRUFBdkQsRUFBNkQsSUFBN0QsRUFBbUU5QyxFQUFuRSxDQUFQO0FBQ0Y7O0FBRUQ7Ozs7Ozs7Ozs7Z0NBT1VFLE8sRUFBU0YsRSxFQUFJO0FBQ3BCLGdCQUFPLEtBQUtDLFFBQUwsQ0FBYyxNQUFkLGNBQWdDLEtBQUtOLFVBQXJDLFlBQXdETyxPQUF4RCxFQUFpRUYsRUFBakUsQ0FBUDtBQUNGOztBQUVEOzs7Ozs7Ozs7O2dDQU9VOEMsRSxFQUFJOUMsRSxFQUFJO0FBQ2YsZ0JBQU8sS0FBS0MsUUFBTCxDQUFjLFFBQWQsY0FBa0MsS0FBS04sVUFBdkMsY0FBMERtRCxFQUExRCxFQUFnRSxJQUFoRSxFQUFzRTlDLEVBQXRFLENBQVA7QUFDRjs7QUFFRDs7Ozs7Ozs7Ozs7aUNBUVdILE0sRUFBUVksSSxFQUFNVCxFLEVBQUk7QUFBQTs7QUFDMUIsZ0JBQU8sS0FBSytDLE1BQUwsQ0FBWWxELE1BQVosRUFBb0JZLElBQXBCLEVBQ0h5QixJQURHLENBQ0UsVUFBQ0MsUUFBRCxFQUFjO0FBQ2pCLGdCQUFNYSxlQUFlO0FBQ2xCakIsa0RBQWdDdEIsSUFBaEMsT0FEa0I7QUFFbEJYLG9CQUFLcUMsU0FBU0gsSUFBVCxDQUFjbEMsR0FGRDtBQUdsQkQ7QUFIa0IsYUFBckI7QUFLQSxtQkFBTyxPQUFLSSxRQUFMLENBQWMsUUFBZCxjQUFrQyxPQUFLTixVQUF2QyxrQkFBOERjLElBQTlELEVBQXNFdUMsWUFBdEUsRUFBb0ZoRCxFQUFwRixDQUFQO0FBQ0YsVUFSRyxDQUFQO0FBU0Y7O0FBRUQ7Ozs7Ozs7Ozs7OzJCQVFLSCxNLEVBQVFvRCxPLEVBQVNDLE8sRUFBU2xELEUsRUFBSTtBQUFBOztBQUNoQyxhQUFJbUQsZUFBSjtBQUNBLGdCQUFPLEtBQUtSLE1BQUwsWUFBcUI5QyxNQUFyQixFQUNIcUMsSUFERyxDQUNFO0FBQUEsZ0JBQVNVLE1BQVQsUUFBRVosSUFBRixDQUFTWSxNQUFUO0FBQUEsbUJBQXNCLE9BQUtRLE9BQUwsQ0FBZ0JSLE9BQU85QyxHQUF2QixxQkFBdEI7QUFBQSxVQURGLEVBRUhvQyxJQUZHLENBRUUsaUJBQXlCO0FBQUEsbUNBQXZCRixJQUF1QjtBQUFBLGdCQUFoQk4sSUFBZ0IsY0FBaEJBLElBQWdCO0FBQUEsZ0JBQVY1QixHQUFVLGNBQVZBLEdBQVU7O0FBQzVCcUQscUJBQVNyRCxHQUFUO0FBQ0EsZ0JBQUkwQixVQUFVRSxLQUFLMkIsR0FBTCxDQUFTLFVBQUN0RCxHQUFELEVBQVM7QUFDN0IsbUJBQUlBLElBQUlVLElBQUosS0FBYXdDLE9BQWpCLEVBQTBCO0FBQ3ZCbEQsc0JBQUlVLElBQUosR0FBV3lDLE9BQVg7QUFDRjtBQUNELG1CQUFJbkQsSUFBSTZCLElBQUosS0FBYSxNQUFqQixFQUF5QjtBQUN0Qix5QkFBTzdCLElBQUlELEdBQVg7QUFDRjtBQUNELHNCQUFPQyxHQUFQO0FBQ0YsYUFSYSxDQUFkO0FBU0EsbUJBQU8sT0FBS3VELFVBQUwsQ0FBZ0I5QixPQUFoQixDQUFQO0FBQ0YsVUFkRyxFQWVIVSxJQWZHLENBZUU7QUFBQSxnQkFBUVIsSUFBUixTQUFFTSxJQUFGO0FBQUEsbUJBQWtCLE9BQUt1QixNQUFMLENBQVlKLE1BQVosRUFBb0J6QixLQUFLNUIsR0FBekIsaUJBQTBDbUQsT0FBMUMsZ0JBQTBEQyxPQUExRCxRQUFsQjtBQUFBLFVBZkYsRUFnQkhoQixJQWhCRyxDQWdCRTtBQUFBLGdCQUFRcUIsTUFBUixTQUFFdkIsSUFBRjtBQUFBLG1CQUFvQixPQUFLd0IsVUFBTCxZQUF5QjNELE1BQXpCLEVBQW1DMEQsT0FBT3pELEdBQTFDLEVBQStDLElBQS9DLEVBQXFERSxFQUFyRCxDQUFwQjtBQUFBLFVBaEJGLENBQVA7QUFpQkY7O0FBRUQ7Ozs7Ozs7Ozs7Ozs7Ozs7O2dDQWNVSCxNLEVBQVFZLEksRUFBTUUsTyxFQUFTb0IsTyxFQUFTN0IsTyxFQUFTRixFLEVBQUk7QUFBQTs7QUFDcEQsYUFBSSxPQUFPRSxPQUFQLEtBQW1CLFVBQXZCLEVBQW1DO0FBQ2hDRixpQkFBS0UsT0FBTDtBQUNBQSxzQkFBVSxFQUFWO0FBQ0Y7QUFDRCxhQUFJdUQsV0FBV2hELE9BQU8rQixVQUFVL0IsSUFBVixDQUFQLEdBQXlCLEVBQXhDO0FBQ0EsYUFBSWlELGVBQWV4RCxRQUFRWSxNQUFSLEtBQW1CLEtBQXRDO0FBQ0EsYUFBSXlDLFNBQVM7QUFDVjFELDBCQURVO0FBRVZrQyw0QkFGVTtBQUdWNEIsb0JBQVF6RCxRQUFReUQsTUFITjtBQUlWQyx1QkFBVzFELFFBQVEwRCxTQUpUO0FBS1ZqRCxxQkFBUytDLGVBQWUsZUFBTzVDLE1BQVAsQ0FBY0gsT0FBZCxDQUFmLEdBQXdDQTtBQUx2QyxVQUFiOztBQVFBLGdCQUFPLEtBQUtvQyxNQUFMLENBQVlsRCxNQUFaLEVBQW9CNEQsUUFBcEIsRUFDSHZCLElBREcsQ0FDRSxVQUFDQyxRQUFELEVBQWM7QUFDakJvQixtQkFBT3pELEdBQVAsR0FBYXFDLFNBQVNILElBQVQsQ0FBY2xDLEdBQTNCO0FBQ0EsbUJBQU8sT0FBS0csUUFBTCxDQUFjLEtBQWQsY0FBK0IsT0FBS04sVUFBcEMsa0JBQTJEOEQsUUFBM0QsRUFBdUVGLE1BQXZFLEVBQStFdkQsRUFBL0UsQ0FBUDtBQUNGLFVBSkcsRUFJRCxZQUFNO0FBQ04sbUJBQU8sT0FBS0MsUUFBTCxDQUFjLEtBQWQsY0FBK0IsT0FBS04sVUFBcEMsa0JBQTJEOEQsUUFBM0QsRUFBdUVGLE1BQXZFLEVBQStFdkQsRUFBL0UsQ0FBUDtBQUNGLFVBTkcsQ0FBUDtBQU9GOztBQUVEOzs7Ozs7Ozs7O2dDQU9VQSxFLEVBQUk7QUFDWCxnQkFBTyxLQUFLNkQsZ0JBQUwsb0JBQXVDLEtBQUtsRSxVQUE1QyxFQUEwRCxJQUExRCxFQUFnRUssRUFBaEUsQ0FBUDtBQUNGOztBQUVEOzs7Ozs7Ozs7MkJBTUtBLEUsRUFBSTtBQUNOLGdCQUFPLEtBQUtDLFFBQUwsQ0FBYyxLQUFkLHFCQUFzQyxLQUFLTixVQUEzQyxFQUF5RCxJQUF6RCxFQUErREssRUFBL0QsQ0FBUDtBQUNGOztBQUVEOzs7Ozs7Ozs7NkJBTU9BLEUsRUFBSTtBQUNSLGdCQUFPLEtBQUtDLFFBQUwsQ0FBYyxRQUFkLHFCQUF5QyxLQUFLTixVQUE5QyxFQUE0RCxJQUE1RCxFQUFrRUssRUFBbEUsQ0FBUDtBQUNGOztBQUVEOzs7Ozs7Ozs7O29DQU9jRSxPLEVBQVNGLEUsRUFBSTtBQUN4QixnQkFBTyxLQUFLQyxRQUFMLENBQWMsTUFBZCxjQUFnQyxLQUFLTixVQUFyQyxnQkFBNERPLE9BQTVELEVBQXFFRixFQUFyRSxDQUFQO0FBQ0Y7O0FBRUQ7Ozs7Ozs7Ozs7O29DQVFjOEMsRSxFQUFJNUMsTyxFQUFTRixFLEVBQUk7QUFDNUIsZ0JBQU8sS0FBS0MsUUFBTCxDQUFjLE9BQWQsY0FBaUMsS0FBS04sVUFBdEMsa0JBQTZEbUQsRUFBN0QsRUFBbUU1QyxPQUFuRSxFQUE0RUYsRUFBNUUsQ0FBUDtBQUNGOztBQUVEOzs7Ozs7Ozs7bUNBTWFBLEUsRUFBSTtBQUNkLGdCQUFPLEtBQUtDLFFBQUwsQ0FBYyxLQUFkLGNBQStCLEtBQUtOLFVBQXBDLGdCQUEyRCxJQUEzRCxFQUFpRUssRUFBakUsQ0FBUDtBQUNGOztBQUVEOzs7Ozs7Ozs7O2lDQU9XOEMsRSxFQUFJOUMsRSxFQUFJO0FBQ2hCLGdCQUFPLEtBQUtDLFFBQUwsQ0FBYyxLQUFkLGNBQStCLEtBQUtOLFVBQXBDLGtCQUEyRG1ELEVBQTNELEVBQWlFLElBQWpFLEVBQXVFOUMsRUFBdkUsQ0FBUDtBQUNGOztBQUVEOzs7Ozs7Ozs7O29DQU9jOEMsRSxFQUFJOUMsRSxFQUFJO0FBQ25CLGdCQUFPLEtBQUtDLFFBQUwsQ0FBYyxRQUFkLGNBQWtDLEtBQUtOLFVBQXZDLGtCQUE4RG1ELEVBQTlELEVBQW9FLElBQXBFLEVBQTBFOUMsRUFBMUUsQ0FBUDtBQUNGOztBQUVEOzs7Ozs7Ozs7Ozt1Q0FRaUJHLE0sRUFBUUQsTyxFQUFTRixFLEVBQUk7QUFDbkMsZ0JBQU8sS0FBS0MsUUFBTCxDQUFjLEtBQWQsY0FBK0IsS0FBS04sVUFBcEMsZUFBd0RRLE1BQXhELGFBQXdFRCxPQUF4RSxFQUFpRkYsRUFBakYsQ0FBUDtBQUNGOztBQUVEOzs7Ozs7Ozs7bUNBTWFBLEUsRUFBSTtBQUNkLGdCQUFPLEtBQUs4RCxnQkFBTCxhQUFnQyxLQUFLbkUsVUFBckMsZ0JBQTRELEVBQUNvRSxjQUFjLGlCQUFmLEVBQTVELEVBQStGL0QsRUFBL0YsQ0FBUDtBQUNGOztBQUVEOzs7Ozs7Ozs7O29DQU9jRSxPLEVBQVNGLEUsRUFBSTtBQUN4QkUsbUJBQVVBLFdBQVcsRUFBckI7QUFDQUEsaUJBQVE2RCxZQUFSLEdBQXVCLGlCQUF2QjtBQUNBLGdCQUFPLEtBQUs5RCxRQUFMLENBQWMsTUFBZCxjQUFnQyxLQUFLTixVQUFyQyxnQkFBNERPLE9BQTVELEVBQXFFRixFQUFyRSxDQUFQO0FBQ0Y7Ozs7OztBQUlKZ0UsT0FBT0MsT0FBUCxHQUFpQjFFLFVBQWpCIiwiZmlsZSI6IlJlcG9zaXRvcnkuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBmaWxlXG4gKiBAY29weXJpZ2h0ICAyMDEzIE1pY2hhZWwgQXVmcmVpdGVyIChEZXZlbG9wbWVudCBTZWVkKSBhbmQgMjAxNiBZYWhvbyBJbmMuXG4gKiBAbGljZW5zZSAgICBMaWNlbnNlZCB1bmRlciB7QGxpbmsgaHR0cHM6Ly9zcGR4Lm9yZy9saWNlbnNlcy9CU0QtMy1DbGF1c2UtQ2xlYXIuaHRtbCBCU0QtMy1DbGF1c2UtQ2xlYXJ9LlxuICogICAgICAgICAgICAgR2l0aHViLmpzIGlzIGZyZWVseSBkaXN0cmlidXRhYmxlLlxuICovXG5cbmltcG9ydCBSZXF1ZXN0YWJsZSBmcm9tICcuL1JlcXVlc3RhYmxlJztcbmltcG9ydCBVdGY4IGZyb20gJ3V0ZjgnO1xuaW1wb3J0IHtcbiAgIEJhc2U2NCxcbn0gZnJvbSAnanMtYmFzZTY0JztcbmltcG9ydCBkZWJ1ZyBmcm9tICdkZWJ1Zyc7XG5jb25zdCBsb2cgPSBkZWJ1ZygnZ2l0aHViOnJlcG9zaXRvcnknKTtcblxuLyoqXG4gKiBSZXNwb3NpdG9yeSBlbmNhcHN1bGF0ZXMgdGhlIGZ1bmN0aW9uYWxpdHkgdG8gY3JlYXRlLCBxdWVyeSwgYW5kIG1vZGlmeSBmaWxlcy5cbiAqL1xuY2xhc3MgUmVwb3NpdG9yeSBleHRlbmRzIFJlcXVlc3RhYmxlIHtcbiAgIC8qKlxuICAgICogQ3JlYXRlIGEgUmVwb3NpdG9yeS5cbiAgICAqIEBwYXJhbSB7c3RyaW5nfSBmdWxsbmFtZSAtIHRoZSBmdWxsIG5hbWUgb2YgdGhlIHJlcG9zaXRvcnlcbiAgICAqIEBwYXJhbSB7UmVxdWVzdGFibGUuYXV0aH0gW2F1dGhdIC0gaW5mb3JtYXRpb24gcmVxdWlyZWQgdG8gYXV0aGVudGljYXRlIHRvIEdpdGh1YlxuICAgICogQHBhcmFtIHtzdHJpbmd9IFthcGlCYXNlPWh0dHBzOi8vYXBpLmdpdGh1Yi5jb21dIC0gdGhlIGJhc2UgR2l0aHViIEFQSSBVUkxcbiAgICAqL1xuICAgY29uc3RydWN0b3IoZnVsbG5hbWUsIGF1dGgsIGFwaUJhc2UpIHtcbiAgICAgIHN1cGVyKGF1dGgsIGFwaUJhc2UpO1xuICAgICAgdGhpcy5fX2Z1bGxuYW1lID0gZnVsbG5hbWU7XG4gICAgICB0aGlzLl9fY3VycmVudFRyZWUgPSB7XG4gICAgICAgICBicmFuY2g6IG51bGwsXG4gICAgICAgICBzaGE6IG51bGwsXG4gICAgICB9O1xuICAgfVxuXG4gICAvKipcbiAgICAqIEdldCBhIHJlZmVyZW5jZVxuICAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5naXRodWIuY29tL3YzL2dpdC9yZWZzLyNnZXQtYS1yZWZlcmVuY2VcbiAgICAqIEBwYXJhbSB7c3RyaW5nfSByZWYgLSB0aGUgcmVmZXJlbmNlIHRvIGdldFxuICAgICogQHBhcmFtIHtSZXF1ZXN0YWJsZS5jYWxsYmFja30gW2NiXSAtIHdpbGwgcmVjZWl2ZSB0aGUgcmVmZXJlbmNlJ3MgcmVmU3BlYyBvciBhIGxpc3Qgb2YgcmVmU3BlY3MgdGhhdCBtYXRjaCBgcmVmYFxuICAgICogQHJldHVybiB7UHJvbWlzZX0gLSB0aGUgcHJvbWlzZSBmb3IgdGhlIGh0dHAgcmVxdWVzdFxuICAgICovXG4gICBnZXRSZWYocmVmLCBjYikge1xuICAgICAgcmV0dXJuIHRoaXMuX3JlcXVlc3QoJ0dFVCcsIGAvcmVwb3MvJHt0aGlzLl9fZnVsbG5hbWV9L2dpdC9yZWZzLyR7cmVmfWAsIG51bGwsIGNiKTtcbiAgIH1cblxuICAgLyoqXG4gICAgKiBDcmVhdGUgYSByZWZlcmVuY2VcbiAgICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIuZ2l0aHViLmNvbS92My9naXQvcmVmcy8jY3JlYXRlLWEtcmVmZXJlbmNlXG4gICAgKiBAcGFyYW0ge09iamVjdH0gb3B0aW9ucyAtIHRoZSBvYmplY3QgZGVzY3JpYmluZyB0aGUgcmVmXG4gICAgKiBAcGFyYW0ge1JlcXVlc3RhYmxlLmNhbGxiYWNrfSBbY2JdIC0gd2lsbCByZWNlaXZlIHRoZSByZWZcbiAgICAqIEByZXR1cm4ge1Byb21pc2V9IC0gdGhlIHByb21pc2UgZm9yIHRoZSBodHRwIHJlcXVlc3RcbiAgICAqL1xuICAgY3JlYXRlUmVmKG9wdGlvbnMsIGNiKSB7XG4gICAgICByZXR1cm4gdGhpcy5fcmVxdWVzdCgnUE9TVCcsIGAvcmVwb3MvJHt0aGlzLl9fZnVsbG5hbWV9L2dpdC9yZWZzYCwgb3B0aW9ucywgY2IpO1xuICAgfVxuXG4gICAvKipcbiAgICAqIERlbGV0ZSBhIHJlZmVyZW5jZVxuICAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5naXRodWIuY29tL3YzL2dpdC9yZWZzLyNkZWxldGUtYS1yZWZlcmVuY2VcbiAgICAqIEBwYXJhbSB7c3RyaW5nfSByZWYgLSB0aGUgbmFtZSBvZiB0aGUgcmVmIHRvIGRlbHRlXG4gICAgKiBAcGFyYW0ge1JlcXVlc3RhYmxlLmNhbGxiYWNrfSBbY2JdIC0gd2lsbCByZWNlaXZlIHRydWUgaWYgdGhlIHJlcXVlc3QgaXMgc3VjY2Vzc2Z1bFxuICAgICogQHJldHVybiB7UHJvbWlzZX0gLSB0aGUgcHJvbWlzZSBmb3IgdGhlIGh0dHAgcmVxdWVzdFxuICAgICovXG4gICBkZWxldGVSZWYocmVmLCBjYikge1xuICAgICAgcmV0dXJuIHRoaXMuX3JlcXVlc3QoJ0RFTEVURScsIGAvcmVwb3MvJHt0aGlzLl9fZnVsbG5hbWV9L2dpdC9yZWZzLyR7cmVmfWAsIG51bGwsIGNiKTtcbiAgIH1cblxuICAgLyoqXG4gICAgKiBEZWxldGUgYSByZXBvc2l0b3J5XG4gICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLmdpdGh1Yi5jb20vdjMvcmVwb3MvI2RlbGV0ZS1hLXJlcG9zaXRvcnlcbiAgICAqIEBwYXJhbSB7UmVxdWVzdGFibGUuY2FsbGJhY2t9IFtjYl0gLSB3aWxsIHJlY2VpdmUgdHJ1ZSBpZiB0aGUgcmVxdWVzdCBpcyBzdWNjZXNzZnVsXG4gICAgKiBAcmV0dXJuIHtQcm9taXNlfSAtIHRoZSBwcm9taXNlIGZvciB0aGUgaHR0cCByZXF1ZXN0XG4gICAgKi9cbiAgIGRlbGV0ZVJlcG8oY2IpIHtcbiAgICAgIHJldHVybiB0aGlzLl9yZXF1ZXN0KCdERUxFVEUnLCBgL3JlcG9zLyR7dGhpcy5fX2Z1bGxuYW1lfWAsIG51bGwsIGNiKTtcbiAgIH1cblxuICAgLyoqXG4gICAgKiBMaXN0IHRoZSB0YWdzIG9uIGEgcmVwb3NpdG9yeVxuICAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5naXRodWIuY29tL3YzL3JlcG9zLyNsaXN0LXRhZ3NcbiAgICAqIEBwYXJhbSB7UmVxdWVzdGFibGUuY2FsbGJhY2t9IFtjYl0gLSB3aWxsIHJlY2VpdmUgdGhlIHRhZyBkYXRhXG4gICAgKiBAcmV0dXJuIHtQcm9taXNlfSAtIHRoZSBwcm9taXNlIGZvciB0aGUgaHR0cCByZXF1ZXN0XG4gICAgKi9cbiAgIGxpc3RUYWdzKGNiKSB7XG4gICAgICByZXR1cm4gdGhpcy5fcmVxdWVzdCgnR0VUJywgYC9yZXBvcy8ke3RoaXMuX19mdWxsbmFtZX0vdGFnc2AsIG51bGwsIGNiKTtcbiAgIH1cblxuICAgLyoqXG4gICAgKiBMaXN0IHRoZSBvcGVuIHB1bGwgcmVxdWVzdHMgb24gdGhlIHJlcG9zaXRvcnlcbiAgICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIuZ2l0aHViLmNvbS92My9wdWxscy8jbGlzdC1wdWxsLXJlcXVlc3RzXG4gICAgKiBAcGFyYW0ge09iamVjdH0gb3B0aW9ucyAtIG9wdGlvbnMgdG8gZmlsdGVyIHRoZSBzZWFyY2hcbiAgICAqIEBwYXJhbSB7UmVxdWVzdGFibGUuY2FsbGJhY2t9IFtjYl0gLSB3aWxsIHJlY2VpdmUgdGhlIGxpc3Qgb2YgUFJzXG4gICAgKiBAcmV0dXJuIHtQcm9taXNlfSAtIHRoZSBwcm9taXNlIGZvciB0aGUgaHR0cCByZXF1ZXN0XG4gICAgKi9cbiAgIGxpc3RQdWxsUmVxdWVzdHMob3B0aW9ucywgY2IpIHtcbiAgICAgIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICAgICAgcmV0dXJuIHRoaXMuX3JlcXVlc3QoJ0dFVCcsIGAvcmVwb3MvJHt0aGlzLl9fZnVsbG5hbWV9L3B1bGxzYCwgb3B0aW9ucywgY2IpO1xuICAgfVxuXG4gICAvKipcbiAgICAqIEdldCBpbmZvcm1hdGlvbiBhYm91dCBhIHNwZWNpZmljIHB1bGwgcmVxdWVzdFxuICAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5naXRodWIuY29tL3YzL3B1bGxzLyNnZXQtYS1zaW5nbGUtcHVsbC1yZXF1ZXN0XG4gICAgKiBAcGFyYW0ge251bWJlcn0gbnVtYmVyIC0gdGhlIFBSIHlvdSB3aXNoIHRvIGZldGNoXG4gICAgKiBAcGFyYW0ge1JlcXVlc3RhYmxlLmNhbGxiYWNrfSBbY2JdIC0gd2lsbCByZWNlaXZlIHRoZSBQUiBmcm9tIHRoZSBBUElcbiAgICAqIEByZXR1cm4ge1Byb21pc2V9IC0gdGhlIHByb21pc2UgZm9yIHRoZSBodHRwIHJlcXVlc3RcbiAgICAqL1xuICAgZ2V0UHVsbFJlcXVlc3QobnVtYmVyLCBjYikge1xuICAgICAgcmV0dXJuIHRoaXMuX3JlcXVlc3QoJ0dFVCcsIGAvcmVwb3MvJHt0aGlzLl9fZnVsbG5hbWV9L3B1bGxzLyR7bnVtYmVyfWAsIG51bGwsIGNiKTtcbiAgIH1cblxuICAgLyoqXG4gICAgKiBMaXN0IHRoZSBmaWxlcyBvZiBhIHNwZWNpZmljIHB1bGwgcmVxdWVzdFxuICAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5naXRodWIuY29tL3YzL3B1bGxzLyNsaXN0LXB1bGwtcmVxdWVzdHMtZmlsZXNcbiAgICAqIEBwYXJhbSB7bnVtYmVyfHN0cmluZ30gbnVtYmVyIC0gdGhlIFBSIHlvdSB3aXNoIHRvIGZldGNoXG4gICAgKiBAcGFyYW0ge1JlcXVlc3RhYmxlLmNhbGxiYWNrfSBbY2JdIC0gd2lsbCByZWNlaXZlIHRoZSBsaXN0IG9mIGZpbGVzIGZyb20gdGhlIEFQSVxuICAgICogQHJldHVybiB7UHJvbWlzZX0gLSB0aGUgcHJvbWlzZSBmb3IgdGhlIGh0dHAgcmVxdWVzdFxuICAgICovXG4gICBsaXN0UHVsbFJlcXVlc3RGaWxlcyhudW1iZXIsIGNiKSB7XG4gICAgICByZXR1cm4gdGhpcy5fcmVxdWVzdCgnR0VUJywgYC9yZXBvcy8ke3RoaXMuX19mdWxsbmFtZX0vcHVsbHMvJHtudW1iZXJ9L2ZpbGVzYCwgbnVsbCwgY2IpO1xuICAgfVxuXG4gICAvKipcbiAgICAqIENvbXBhcmUgdHdvIGJyYW5jaGVzL2NvbW1pdHMvcmVwb3NpdG9yaWVzXG4gICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLmdpdGh1Yi5jb20vdjMvcmVwb3MvY29tbWl0cy8jY29tcGFyZS10d28tY29tbWl0c1xuICAgICogQHBhcmFtIHtzdHJpbmd9IGJhc2UgLSB0aGUgYmFzZSBjb21taXRcbiAgICAqIEBwYXJhbSB7c3RyaW5nfSBoZWFkIC0gdGhlIGhlYWQgY29tbWl0XG4gICAgKiBAcGFyYW0ge1JlcXVlc3RhYmxlLmNhbGxiYWNrfSBjYiAtIHdpbGwgcmVjZWl2ZSB0aGUgY29tcGFyaXNvblxuICAgICogQHJldHVybiB7UHJvbWlzZX0gLSB0aGUgcHJvbWlzZSBmb3IgdGhlIGh0dHAgcmVxdWVzdFxuICAgICovXG4gICBjb21wYXJlQnJhbmNoZXMoYmFzZSwgaGVhZCwgY2IpIHtcbiAgICAgIHJldHVybiB0aGlzLl9yZXF1ZXN0KCdHRVQnLCBgL3JlcG9zLyR7dGhpcy5fX2Z1bGxuYW1lfS9jb21wYXJlLyR7YmFzZX0uLi4ke2hlYWR9YCwgbnVsbCwgY2IpO1xuICAgfVxuXG4gICAvKipcbiAgICAqIExpc3QgYWxsIHRoZSBicmFuY2hlcyBmb3IgdGhlIHJlcG9zaXRvcnlcbiAgICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIuZ2l0aHViLmNvbS92My9yZXBvcy8jbGlzdC1icmFuY2hlc1xuICAgICogQHBhcmFtIHtSZXF1ZXN0YWJsZS5jYWxsYmFja30gY2IgLSB3aWxsIHJlY2VpdmUgdGhlIGxpc3Qgb2YgYnJhbmNoZXNcbiAgICAqIEByZXR1cm4ge1Byb21pc2V9IC0gdGhlIHByb21pc2UgZm9yIHRoZSBodHRwIHJlcXVlc3RcbiAgICAqL1xuICAgbGlzdEJyYW5jaGVzKGNiKSB7XG4gICAgICByZXR1cm4gdGhpcy5fcmVxdWVzdCgnR0VUJywgYC9yZXBvcy8ke3RoaXMuX19mdWxsbmFtZX0vYnJhbmNoZXNgLCBudWxsLCBjYik7XG4gICB9XG5cbiAgIC8qKlxuICAgICogR2V0IGEgcmF3IGJsb2IgZnJvbSB0aGUgcmVwb3NpdG9yeVxuICAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5naXRodWIuY29tL3YzL2dpdC9ibG9icy8jZ2V0LWEtYmxvYlxuICAgICogQHBhcmFtIHtzdHJpbmd9IHNoYSAtIHRoZSBzaGEgb2YgdGhlIGJsb2IgdG8gZmV0Y2hcbiAgICAqIEBwYXJhbSB7UmVxdWVzdGFibGUuY2FsbGJhY2t9IGNiIC0gd2lsbCByZWNlaXZlIHRoZSBibG9iIGZyb20gdGhlIEFQSVxuICAgICogQHJldHVybiB7UHJvbWlzZX0gLSB0aGUgcHJvbWlzZSBmb3IgdGhlIGh0dHAgcmVxdWVzdFxuICAgICovXG4gICBnZXRCbG9iKHNoYSwgY2IpIHtcbiAgICAgIHJldHVybiB0aGlzLl9yZXF1ZXN0KCdHRVQnLCBgL3JlcG9zLyR7dGhpcy5fX2Z1bGxuYW1lfS9naXQvYmxvYnMvJHtzaGF9YCwgbnVsbCwgY2IsICdyYXcnKTtcbiAgIH1cblxuICAgLyoqXG4gICAgKiBHZXQgYSBzaW5nbGUgYnJhbmNoXG4gICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLmdpdGh1Yi5jb20vdjMvcmVwb3MvYnJhbmNoZXMvI2dldC1icmFuY2hcbiAgICAqIEBwYXJhbSB7c3RyaW5nfSBicmFuY2ggLSB0aGUgbmFtZSBvZiB0aGUgYnJhbmNoIHRvIGZldGNoXG4gICAgKiBAcGFyYW0ge1JlcXVlc3RhYmxlLmNhbGxiYWNrfSBjYiAtIHdpbGwgcmVjZWl2ZSB0aGUgYnJhbmNoIGZyb20gdGhlIEFQSVxuICAgICogQHJldHVybnMge1Byb21pc2V9IC0gdGhlIHByb21pc2UgZm9yIHRoZSBodHRwIHJlcXVlc3RcbiAgICAqL1xuICAgZ2V0QnJhbmNoKGJyYW5jaCwgY2IpIHtcbiAgICAgIHJldHVybiB0aGlzLl9yZXF1ZXN0KCdHRVQnLCBgL3JlcG9zLyR7dGhpcy5fX2Z1bGxuYW1lfS9icmFuY2hlcy8ke2JyYW5jaH1gLCBudWxsLCBjYik7XG4gICB9XG5cbiAgIC8qKlxuICAgICogR2V0IGEgY29tbWl0IGZyb20gdGhlIHJlcG9zaXRvcnlcbiAgICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIuZ2l0aHViLmNvbS92My9yZXBvcy9jb21taXRzLyNnZXQtYS1zaW5nbGUtY29tbWl0XG4gICAgKiBAcGFyYW0ge3N0cmluZ30gc2hhIC0gdGhlIHNoYSBmb3IgdGhlIGNvbW1pdCB0byBmZXRjaFxuICAgICogQHBhcmFtIHtSZXF1ZXN0YWJsZS5jYWxsYmFja30gY2IgLSB3aWxsIHJlY2VpdmUgdGhlIGNvbW1pdCBkYXRhXG4gICAgKiBAcmV0dXJuIHtQcm9taXNlfSAtIHRoZSBwcm9taXNlIGZvciB0aGUgaHR0cCByZXF1ZXN0XG4gICAgKi9cbiAgIGdldENvbW1pdChzaGEsIGNiKSB7XG4gICAgICByZXR1cm4gdGhpcy5fcmVxdWVzdCgnR0VUJywgYC9yZXBvcy8ke3RoaXMuX19mdWxsbmFtZX0vZ2l0L2NvbW1pdHMvJHtzaGF9YCwgbnVsbCwgY2IpO1xuICAgfVxuXG4gICAvKipcbiAgICAqIExpc3QgdGhlIGNvbW1pdHMgb24gYSByZXBvc2l0b3J5LCBvcHRpb25hbGx5IGZpbHRlcmluZyBieSBwYXRoLCBhdXRob3Igb3IgdGltZSByYW5nZVxuICAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5naXRodWIuY29tL3YzL3JlcG9zL2NvbW1pdHMvI2xpc3QtY29tbWl0cy1vbi1hLXJlcG9zaXRvcnlcbiAgICAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc10gLSB0aGUgZmlsdGVyaW5nIG9wdGlvbnMgZm9yIGNvbW1pdHNcbiAgICAqIEBwYXJhbSB7c3RyaW5nfSBbb3B0aW9ucy5zaGFdIC0gdGhlIFNIQSBvciBicmFuY2ggdG8gc3RhcnQgZnJvbVxuICAgICogQHBhcmFtIHtzdHJpbmd9IFtvcHRpb25zLnBhdGhdIC0gdGhlIHBhdGggdG8gc2VhcmNoIG9uXG4gICAgKiBAcGFyYW0ge3N0cmluZ30gW29wdGlvbnMuYXV0aG9yXSAtIHRoZSBjb21taXQgYXV0aG9yXG4gICAgKiBAcGFyYW0geyhEYXRlfHN0cmluZyl9IFtvcHRpb25zLnNpbmNlXSAtIG9ubHkgY29tbWl0cyBhZnRlciB0aGlzIGRhdGUgd2lsbCBiZSByZXR1cm5lZFxuICAgICogQHBhcmFtIHsoRGF0ZXxzdHJpbmcpfSBbb3B0aW9ucy51bnRpbF0gLSBvbmx5IGNvbW1pdHMgYmVmb3JlIHRoaXMgZGF0ZSB3aWxsIGJlIHJldHVybmVkXG4gICAgKiBAcGFyYW0ge1JlcXVlc3RhYmxlLmNhbGxiYWNrfSBjYiAtIHdpbGwgcmVjZWl2ZSB0aGUgbGlzdCBvZiBjb21taXRzIGZvdW5kIG1hdGNoaW5nIHRoZSBjcml0ZXJpYVxuICAgICogQHJldHVybiB7UHJvbWlzZX0gLSB0aGUgcHJvbWlzZSBmb3IgdGhlIGh0dHAgcmVxdWVzdFxuICAgICovXG4gICBsaXN0Q29tbWl0cyhvcHRpb25zLCBjYikge1xuICAgICAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG5cbiAgICAgIG9wdGlvbnMuc2luY2UgPSB0aGlzLl9kYXRlVG9JU08ob3B0aW9ucy5zaW5jZSk7XG4gICAgICBvcHRpb25zLnVudGlsID0gdGhpcy5fZGF0ZVRvSVNPKG9wdGlvbnMudW50aWwpO1xuXG4gICAgICByZXR1cm4gdGhpcy5fcmVxdWVzdCgnR0VUJywgYC9yZXBvcy8ke3RoaXMuX19mdWxsbmFtZX0vY29tbWl0c2AsIG9wdGlvbnMsIGNiKTtcbiAgIH1cblxuICAgIC8qKlxuICAgICAqIEdldHMgYSBzaW5nbGUgY29tbWl0IGluZm9ybWF0aW9uIGZvciBhIHJlcG9zaXRvcnlcbiAgICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLmdpdGh1Yi5jb20vdjMvcmVwb3MvY29tbWl0cy8jZ2V0LWEtc2luZ2xlLWNvbW1pdFxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSByZWYgLSB0aGUgcmVmZXJlbmNlIGZvciB0aGUgY29tbWl0LWlzaFxuICAgICAqIEBwYXJhbSB7UmVxdWVzdGFibGUuY2FsbGJhY2t9IGNiIC0gd2lsbCByZWNlaXZlIHRoZSBjb21taXQgaW5mb3JtYXRpb25cbiAgICAgKiBAcmV0dXJuIHtQcm9taXNlfSAtIHRoZSBwcm9taXNlIGZvciB0aGUgaHR0cCByZXF1ZXN0XG4gICAgICovXG4gICBnZXRTaW5nbGVDb21taXQocmVmLCBjYikge1xuICAgICAgcmVmID0gcmVmIHx8ICcnO1xuICAgICAgcmV0dXJuIHRoaXMuX3JlcXVlc3QoJ0dFVCcsIGAvcmVwb3MvJHt0aGlzLl9fZnVsbG5hbWV9L2NvbW1pdHMvJHtyZWZ9YCwgbnVsbCwgY2IpO1xuICAgfVxuXG4gICAvKipcbiAgICAqIEdldCB0aGEgc2hhIGZvciBhIHBhcnRpY3VsYXIgb2JqZWN0IGluIHRoZSByZXBvc2l0b3J5LiBUaGlzIGlzIGEgY29udmVuaWVuY2UgZnVuY3Rpb25cbiAgICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIuZ2l0aHViLmNvbS92My9yZXBvcy9jb250ZW50cy8jZ2V0LWNvbnRlbnRzXG4gICAgKiBAcGFyYW0ge3N0cmluZ30gW2JyYW5jaF0gLSB0aGUgYnJhbmNoIHRvIGxvb2sgaW4sIG9yIHRoZSByZXBvc2l0b3J5J3MgZGVmYXVsdCBicmFuY2ggaWYgb21pdHRlZFxuICAgICogQHBhcmFtIHtzdHJpbmd9IHBhdGggLSB0aGUgcGF0aCBvZiB0aGUgZmlsZSBvciBkaXJlY3RvcnlcbiAgICAqIEBwYXJhbSB7UmVxdWVzdGFibGUuY2FsbGJhY2t9IGNiIC0gd2lsbCByZWNlaXZlIGEgZGVzY3JpcHRpb24gb2YgdGhlIHJlcXVlc3RlZCBvYmplY3QsIGluY2x1ZGluZyBhIGBTSEFgIHByb3BlcnR5XG4gICAgKiBAcmV0dXJuIHtQcm9taXNlfSAtIHRoZSBwcm9taXNlIGZvciB0aGUgaHR0cCByZXF1ZXN0XG4gICAgKi9cbiAgIGdldFNoYShicmFuY2gsIHBhdGgsIGNiKSB7XG4gICAgICBicmFuY2ggPSBicmFuY2ggPyBgP3JlZj0ke2JyYW5jaH1gIDogJyc7XG4gICAgICByZXR1cm4gdGhpcy5fcmVxdWVzdCgnR0VUJywgYC9yZXBvcy8ke3RoaXMuX19mdWxsbmFtZX0vY29udGVudHMvJHtwYXRofSR7YnJhbmNofWAsIG51bGwsIGNiKTtcbiAgIH1cblxuICAgLyoqXG4gICAgKiBMaXN0IHRoZSBjb21taXQgc3RhdHVzZXMgZm9yIGEgcGFydGljdWxhciBzaGEsIGJyYW5jaCwgb3IgdGFnXG4gICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLmdpdGh1Yi5jb20vdjMvcmVwb3Mvc3RhdHVzZXMvI2xpc3Qtc3RhdHVzZXMtZm9yLWEtc3BlY2lmaWMtcmVmXG4gICAgKiBAcGFyYW0ge3N0cmluZ30gc2hhIC0gdGhlIHNoYSwgYnJhbmNoLCBvciB0YWcgdG8gZ2V0IHN0YXR1c2VzIGZvclxuICAgICogQHBhcmFtIHtSZXF1ZXN0YWJsZS5jYWxsYmFja30gY2IgLSB3aWxsIHJlY2VpdmUgdGhlIGxpc3Qgb2Ygc3RhdHVzZXNcbiAgICAqIEByZXR1cm4ge1Byb21pc2V9IC0gdGhlIHByb21pc2UgZm9yIHRoZSBodHRwIHJlcXVlc3RcbiAgICAqL1xuICAgbGlzdFN0YXR1c2VzKHNoYSwgY2IpIHtcbiAgICAgIHJldHVybiB0aGlzLl9yZXF1ZXN0KCdHRVQnLCBgL3JlcG9zLyR7dGhpcy5fX2Z1bGxuYW1lfS9jb21taXRzLyR7c2hhfS9zdGF0dXNlc2AsIG51bGwsIGNiKTtcbiAgIH1cblxuICAgLyoqXG4gICAgKiBHZXQgYSBkZXNjcmlwdGlvbiBvZiBhIGdpdCB0cmVlXG4gICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLmdpdGh1Yi5jb20vdjMvZ2l0L3RyZWVzLyNnZXQtYS10cmVlXG4gICAgKiBAcGFyYW0ge3N0cmluZ30gdHJlZVNIQSAtIHRoZSBTSEEgb2YgdGhlIHRyZWUgdG8gZmV0Y2hcbiAgICAqIEBwYXJhbSB7UmVxdWVzdGFibGUuY2FsbGJhY2t9IGNiIC0gd2lsbCByZWNlaXZlIHRoZSBjYWxsYmFjayBkYXRhXG4gICAgKiBAcmV0dXJuIHtQcm9taXNlfSAtIHRoZSBwcm9taXNlIGZvciB0aGUgaHR0cCByZXF1ZXN0XG4gICAgKi9cbiAgIGdldFRyZWUodHJlZVNIQSwgY2IpIHtcbiAgICAgIHJldHVybiB0aGlzLl9yZXF1ZXN0KCdHRVQnLCBgL3JlcG9zLyR7dGhpcy5fX2Z1bGxuYW1lfS9naXQvdHJlZXMvJHt0cmVlU0hBfWAsIG51bGwsIGNiKTtcbiAgIH1cblxuICAgLyoqXG4gICAgKiBDcmVhdGUgYSBibG9iXG4gICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLmdpdGh1Yi5jb20vdjMvZ2l0L2Jsb2JzLyNjcmVhdGUtYS1ibG9iXG4gICAgKiBAcGFyYW0geyhzdHJpbmd8QnVmZmVyfEJsb2IpfSBjb250ZW50IC0gdGhlIGNvbnRlbnQgdG8gYWRkIHRvIHRoZSByZXBvc2l0b3J5XG4gICAgKiBAcGFyYW0ge1JlcXVlc3RhYmxlLmNhbGxiYWNrfSBjYiAtIHdpbGwgcmVjZWl2ZSB0aGUgZGV0YWlscyBvZiB0aGUgY3JlYXRlZCBibG9iXG4gICAgKiBAcmV0dXJuIHtQcm9taXNlfSAtIHRoZSBwcm9taXNlIGZvciB0aGUgaHR0cCByZXF1ZXN0XG4gICAgKi9cbiAgIGNyZWF0ZUJsb2IoY29udGVudCwgY2IpIHtcbiAgICAgIGxldCBwb3N0Qm9keSA9IHRoaXMuX2dldENvbnRlbnRPYmplY3QoY29udGVudCk7XG5cbiAgICAgIGxvZygnc2VuZGluZyBjb250ZW50JywgcG9zdEJvZHkpO1xuICAgICAgcmV0dXJuIHRoaXMuX3JlcXVlc3QoJ1BPU1QnLCBgL3JlcG9zLyR7dGhpcy5fX2Z1bGxuYW1lfS9naXQvYmxvYnNgLCBwb3N0Qm9keSwgY2IpO1xuICAgfVxuXG4gICAvKipcbiAgICAqIEdldCB0aGUgb2JqZWN0IHRoYXQgcmVwcmVzZW50cyB0aGUgcHJvdmlkZWQgY29udGVudFxuICAgICogQHBhcmFtIHtzdHJpbmd8QnVmZmVyfEJsb2J9IGNvbnRlbnQgLSB0aGUgY29udGVudCB0byBzZW5kIHRvIHRoZSBzZXJ2ZXJcbiAgICAqIEByZXR1cm4ge09iamVjdH0gdGhlIHJlcHJlc2VudGF0aW9uIG9mIGBjb250ZW50YCBmb3IgdGhlIEdpdEh1YiBBUElcbiAgICAqL1xuICAgX2dldENvbnRlbnRPYmplY3QoY29udGVudCkge1xuICAgICAgaWYgKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgbG9nKCdjb250ZXQgaXMgYSBzdHJpbmcnKTtcbiAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBjb250ZW50OiBVdGY4LmVuY29kZShjb250ZW50KSxcbiAgICAgICAgICAgIGVuY29kaW5nOiAndXRmLTgnLFxuICAgICAgICAgfTtcblxuICAgICAgfSBlbHNlIGlmICh0eXBlb2YgQnVmZmVyICE9PSAndW5kZWZpbmVkJyAmJiBjb250ZW50IGluc3RhbmNlb2YgQnVmZmVyKSB7XG4gICAgICAgICBsb2coJ1dlIGFwcGVhciB0byBiZSBpbiBOb2RlJyk7XG4gICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgY29udGVudDogY29udGVudC50b1N0cmluZygnYmFzZTY0JyksXG4gICAgICAgICAgICBlbmNvZGluZzogJ2Jhc2U2NCcsXG4gICAgICAgICB9O1xuXG4gICAgICB9IGVsc2UgaWYgKHR5cGVvZiBCbG9iICE9PSAndW5kZWZpbmVkJyAmJiBjb250ZW50IGluc3RhbmNlb2YgQmxvYikge1xuICAgICAgICAgbG9nKCdXZSBhcHBlYXIgdG8gYmUgaW4gdGhlIGJyb3dzZXInKTtcbiAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBjb250ZW50OiBCYXNlNjQuZW5jb2RlKGNvbnRlbnQpLFxuICAgICAgICAgICAgZW5jb2Rpbmc6ICdiYXNlNjQnLFxuICAgICAgICAgfTtcblxuICAgICAgfSBlbHNlIHsgLy8gZXNsaW50LWRpc2FibGUtbGluZVxuICAgICAgICAgbG9nKGBOb3Qgc3VyZSB3aGF0IHRoaXMgY29udGVudCBpczogJHt0eXBlb2YgY29udGVudH0sICR7SlNPTi5zdHJpbmdpZnkoY29udGVudCl9YCk7XG4gICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1Vua25vd24gY29udGVudCBwYXNzZWQgdG8gcG9zdEJsb2IuIE11c3QgYmUgc3RyaW5nIG9yIEJ1ZmZlciAobm9kZSkgb3IgQmxvYiAod2ViKScpO1xuICAgICAgfVxuICAgfVxuXG4gICAvKipcbiAgICAqIFVwZGF0ZSBhIHRyZWUgaW4gR2l0XG4gICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLmdpdGh1Yi5jb20vdjMvZ2l0L3RyZWVzLyNjcmVhdGUtYS10cmVlXG4gICAgKiBAcGFyYW0ge3N0cmluZ30gYmFzZVRyZWVTSEEgLSB0aGUgU0hBIG9mIHRoZSB0cmVlIHRvIHVwZGF0ZVxuICAgICogQHBhcmFtIHtzdHJpbmd9IHBhdGggLSB0aGUgcGF0aCBmb3IgdGhlIG5ldyBmaWxlXG4gICAgKiBAcGFyYW0ge3N0cmluZ30gYmxvYlNIQSAtIHRoZSBTSEEgZm9yIHRoZSBibG9iIHRvIHB1dCBhdCBgcGF0aGBcbiAgICAqIEBwYXJhbSB7UmVxdWVzdGFibGUuY2FsbGJhY2t9IGNiIC0gd2lsbCByZWNlaXZlIHRoZSBuZXcgdHJlZSB0aGF0IGlzIGNyZWF0ZWRcbiAgICAqIEByZXR1cm4ge1Byb21pc2V9IC0gdGhlIHByb21pc2UgZm9yIHRoZSBodHRwIHJlcXVlc3RcbiAgICAqIEBkZXByZWNhdGVkIHVzZSB7QGxpbmsgUmVwb3NpdG9yeSNjcmVhdGVUcmVlfSBpbnN0ZWFkXG4gICAgKi9cbiAgIHVwZGF0ZVRyZWUoYmFzZVRyZWVTSEEsIHBhdGgsIGJsb2JTSEEsIGNiKSB7XG4gICAgICBsZXQgbmV3VHJlZSA9IHtcbiAgICAgICAgIGJhc2VfdHJlZTogYmFzZVRyZWVTSEEsIC8vIGVzbGludC1kaXNhYmxlLWxpbmVcbiAgICAgICAgIHRyZWU6IFt7XG4gICAgICAgICAgICBwYXRoOiBwYXRoLFxuICAgICAgICAgICAgc2hhOiBibG9iU0hBLFxuICAgICAgICAgICAgbW9kZTogJzEwMDY0NCcsXG4gICAgICAgICAgICB0eXBlOiAnYmxvYicsXG4gICAgICAgICB9XSxcbiAgICAgIH07XG5cbiAgICAgIHJldHVybiB0aGlzLl9yZXF1ZXN0KCdQT1NUJywgYC9yZXBvcy8ke3RoaXMuX19mdWxsbmFtZX0vZ2l0L3RyZWVzYCwgbmV3VHJlZSwgY2IpO1xuICAgfVxuXG4gICAvKipcbiAgICAqIENyZWF0ZSBhIG5ldyB0cmVlIGluIGdpdFxuICAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5naXRodWIuY29tL3YzL2dpdC90cmVlcy8jY3JlYXRlLWEtdHJlZVxuICAgICogQHBhcmFtIHtPYmplY3R9IHRyZWUgLSB0aGUgdHJlZSB0byBjcmVhdGVcbiAgICAqIEBwYXJhbSB7c3RyaW5nfSBiYXNlU0hBIC0gdGhlIHJvb3Qgc2hhIG9mIHRoZSB0cmVlXG4gICAgKiBAcGFyYW0ge1JlcXVlc3RhYmxlLmNhbGxiYWNrfSBjYiAtIHdpbGwgcmVjZWl2ZSB0aGUgbmV3IHRyZWUgdGhhdCBpcyBjcmVhdGVkXG4gICAgKiBAcmV0dXJuIHtQcm9taXNlfSAtIHRoZSBwcm9taXNlIGZvciB0aGUgaHR0cCByZXF1ZXN0XG4gICAgKi9cbiAgIGNyZWF0ZVRyZWUodHJlZSwgYmFzZVNIQSwgY2IpIHtcbiAgICAgIHJldHVybiB0aGlzLl9yZXF1ZXN0KCdQT1NUJywgYC9yZXBvcy8ke3RoaXMuX19mdWxsbmFtZX0vZ2l0L3RyZWVzYCwge1xuICAgICAgICAgdHJlZSxcbiAgICAgICAgIGJhc2VfdHJlZTogYmFzZVNIQSwgLy8gZXNsaW50LWRpc2FibGUtbGluZSBjYW1lbGNhc2VcbiAgICAgIH0sIGNiKTtcbiAgIH1cblxuICAgLyoqXG4gICAgKiBBZGQgYSBjb21taXQgdG8gdGhlIHJlcG9zaXRvcnlcbiAgICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIuZ2l0aHViLmNvbS92My9naXQvY29tbWl0cy8jY3JlYXRlLWEtY29tbWl0XG4gICAgKiBAcGFyYW0ge3N0cmluZ30gcGFyZW50IC0gdGhlIFNIQSBvZiB0aGUgcGFyZW50IGNvbW1pdFxuICAgICogQHBhcmFtIHtzdHJpbmd9IHRyZWUgLSB0aGUgU0hBIG9mIHRoZSB0cmVlIGZvciB0aGlzIGNvbW1pdFxuICAgICogQHBhcmFtIHtzdHJpbmd9IG1lc3NhZ2UgLSB0aGUgY29tbWl0IG1lc3NhZ2VcbiAgICAqIEBwYXJhbSB7UmVxdWVzdGFibGUuY2FsbGJhY2t9IGNiIC0gd2lsbCByZWNlaXZlIHRoZSBjb21taXQgdGhhdCBpcyBjcmVhdGVkXG4gICAgKiBAcmV0dXJuIHtQcm9taXNlfSAtIHRoZSBwcm9taXNlIGZvciB0aGUgaHR0cCByZXF1ZXN0XG4gICAgKi9cbiAgIGNvbW1pdChwYXJlbnQsIHRyZWUsIG1lc3NhZ2UsIGNiKSB7XG4gICAgICBsZXQgZGF0YSA9IHtcbiAgICAgICAgIG1lc3NhZ2UsXG4gICAgICAgICB0cmVlLFxuICAgICAgICAgcGFyZW50czogW3BhcmVudF0sXG4gICAgICB9O1xuXG4gICAgICByZXR1cm4gdGhpcy5fcmVxdWVzdCgnUE9TVCcsIGAvcmVwb3MvJHt0aGlzLl9fZnVsbG5hbWV9L2dpdC9jb21taXRzYCwgZGF0YSwgY2IpXG4gICAgICAgICAudGhlbigocmVzcG9uc2UpID0+IHtcbiAgICAgICAgICAgIHRoaXMuX19jdXJyZW50VHJlZS5zaGEgPSByZXNwb25zZS5kYXRhLnNoYTsgLy8gVXBkYXRlIGxhdGVzdCBjb21taXRcbiAgICAgICAgICAgIHJldHVybiByZXNwb25zZTtcbiAgICAgICAgIH0pO1xuICAgfVxuXG4gICAvKipcbiAgICAqIFVwZGF0ZSBhIHJlZlxuICAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5naXRodWIuY29tL3YzL2dpdC9yZWZzLyN1cGRhdGUtYS1yZWZlcmVuY2VcbiAgICAqIEBwYXJhbSB7c3RyaW5nfSByZWYgLSB0aGUgcmVmIHRvIHVwZGF0ZVxuICAgICogQHBhcmFtIHtzdHJpbmd9IGNvbW1pdFNIQSAtIHRoZSBTSEEgdG8gcG9pbnQgdGhlIHJlZmVyZW5jZSB0b1xuICAgICogQHBhcmFtIHtib29sZWFufSBmb3JjZSAtIGluZGljYXRlcyB3aGV0aGVyIHRvIGZvcmNlIG9yIGVuc3VyZSBhIGZhc3QtZm9yd2FyZCB1cGRhdGVcbiAgICAqIEBwYXJhbSB7UmVxdWVzdGFibGUuY2FsbGJhY2t9IGNiIC0gd2lsbCByZWNlaXZlIHRoZSB1cGRhdGVkIHJlZiBiYWNrXG4gICAgKiBAcmV0dXJuIHtQcm9taXNlfSAtIHRoZSBwcm9taXNlIGZvciB0aGUgaHR0cCByZXF1ZXN0XG4gICAgKi9cbiAgIHVwZGF0ZUhlYWQocmVmLCBjb21taXRTSEEsIGZvcmNlLCBjYikge1xuICAgICAgcmV0dXJuIHRoaXMuX3JlcXVlc3QoJ1BBVENIJywgYC9yZXBvcy8ke3RoaXMuX19mdWxsbmFtZX0vZ2l0L3JlZnMvJHtyZWZ9YCwge1xuICAgICAgICAgc2hhOiBjb21taXRTSEEsXG4gICAgICAgICBmb3JjZTogZm9yY2UsXG4gICAgICB9LCBjYik7XG4gICB9XG5cbiAgIC8qKlxuICAgICogVXBkYXRlIGNvbW1pdCBzdGF0dXNcbiAgICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIuZ2l0aHViLmNvbS92My9yZXBvcy9zdGF0dXNlcy9cbiAgICAqIEBwYXJhbSB7c3RyaW5nfSBjb21taXRTSEEgLSB0aGUgU0hBIG9mIHRoZSBjb21taXQgdGhhdCBzaG91bGQgYmUgdXBkYXRlZFxuICAgICogQHBhcmFtIHtvYmplY3R9IG9wdGlvbnMgLSBDb21taXQgc3RhdHVzIHBhcmFtZXRlcnNcbiAgICAqIEBwYXJhbSB7c3RyaW5nfSBvcHRpb25zLnN0YXRlIC0gVGhlIHN0YXRlIG9mIHRoZSBzdGF0dXMuIENhbiBiZSBvbmUgb2Y6IHBlbmRpbmcsIHN1Y2Nlc3MsIGVycm9yLCBvciBmYWlsdXJlLlxuICAgICogQHBhcmFtIHtzdHJpbmd9IFtvcHRpb25zLnRhcmdldF91cmxdIC0gVGhlIHRhcmdldCBVUkwgdG8gYXNzb2NpYXRlIHdpdGggdGhpcyBzdGF0dXMuXG4gICAgKiBAcGFyYW0ge3N0cmluZ30gW29wdGlvbnMuZGVzY3JpcHRpb25dIC0gQSBzaG9ydCBkZXNjcmlwdGlvbiBvZiB0aGUgc3RhdHVzLlxuICAgICogQHBhcmFtIHtzdHJpbmd9IFtvcHRpb25zLmNvbnRleHRdIC0gQSBzdHJpbmcgbGFiZWwgdG8gZGlmZmVyZW50aWF0ZSB0aGlzIHN0YXR1cyBhbW9uZyBDSSBzeXN0ZW1zLlxuICAgICogQHBhcmFtIHtSZXF1ZXN0YWJsZS5jYWxsYmFja30gY2IgLSB3aWxsIHJlY2VpdmUgdGhlIHVwZGF0ZWQgY29tbWl0IGJhY2tcbiAgICAqIEByZXR1cm4ge1Byb21pc2V9IC0gdGhlIHByb21pc2UgZm9yIHRoZSBodHRwIHJlcXVlc3RcbiAgICAqL1xuICAgdXBkYXRlU3RhdHVzKGNvbW1pdFNIQSwgb3B0aW9ucywgY2IpIHtcbiAgICAgIHJldHVybiB0aGlzLl9yZXF1ZXN0KCdQT1NUJywgYC9yZXBvcy8ke3RoaXMuX19mdWxsbmFtZX0vc3RhdHVzZXMvJHtjb21taXRTSEF9YCwgb3B0aW9ucywgY2IpO1xuICAgfVxuXG4gICAvKipcbiAgICAqIFVwZGF0ZSByZXBvc2l0b3J5IGluZm9ybWF0aW9uXG4gICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLmdpdGh1Yi5jb20vdjMvcmVwb3MvI2VkaXRcbiAgICAqIEBwYXJhbSB7b2JqZWN0fSBvcHRpb25zIC0gTmV3IHBhcmFtZXRlcnMgdGhhdCB3aWxsIGJlIHNldCB0byB0aGUgcmVwb3NpdG9yeVxuICAgICogQHBhcmFtIHtzdHJpbmd9IG9wdGlvbnMubmFtZSAtIE5hbWUgb2YgdGhlIHJlcG9zaXRvcnlcbiAgICAqIEBwYXJhbSB7c3RyaW5nfSBbb3B0aW9ucy5kZXNjcmlwdGlvbl0gLSBBIHNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSByZXBvc2l0b3J5XG4gICAgKiBAcGFyYW0ge3N0cmluZ30gW29wdGlvbnMuaG9tZXBhZ2VdIC0gQSBVUkwgd2l0aCBtb3JlIGluZm9ybWF0aW9uIGFib3V0IHRoZSByZXBvc2l0b3J5XG4gICAgKiBAcGFyYW0ge2Jvb2xlYW59IFtvcHRpb25zLnByaXZhdGVdIC0gRWl0aGVyIHRydWUgdG8gbWFrZSB0aGUgcmVwb3NpdG9yeSBwcml2YXRlLCBvciBmYWxzZSB0byBtYWtlIGl0IHB1YmxpYy5cbiAgICAqIEBwYXJhbSB7Ym9vbGVhbn0gW29wdGlvbnMuaGFzX2lzc3Vlc10gLSBFaXRoZXIgdHJ1ZSB0byBlbmFibGUgaXNzdWVzIGZvciB0aGlzIHJlcG9zaXRvcnksIGZhbHNlIHRvIGRpc2FibGUgdGhlbS5cbiAgICAqIEBwYXJhbSB7Ym9vbGVhbn0gW29wdGlvbnMuaGFzX3dpa2ldIC0gRWl0aGVyIHRydWUgdG8gZW5hYmxlIHRoZSB3aWtpIGZvciB0aGlzIHJlcG9zaXRvcnksIGZhbHNlIHRvIGRpc2FibGUgaXQuXG4gICAgKiBAcGFyYW0ge2Jvb2xlYW59IFtvcHRpb25zLmhhc19kb3dubG9hZHNdIC0gRWl0aGVyIHRydWUgdG8gZW5hYmxlIGRvd25sb2FkcywgZmFsc2UgdG8gZGlzYWJsZSB0aGVtLlxuICAgICogQHBhcmFtIHtzdHJpbmd9IFtvcHRpb25zLmRlZmF1bHRfYnJhbmNoXSAtIFVwZGF0ZXMgdGhlIGRlZmF1bHQgYnJhbmNoIGZvciB0aGlzIHJlcG9zaXRvcnkuXG4gICAgKiBAcGFyYW0ge1JlcXVlc3RhYmxlLmNhbGxiYWNrfSBjYiAtIHdpbGwgcmVjZWl2ZSB0aGUgdXBkYXRlZCByZXBvc2l0b3J5IGJhY2tcbiAgICAqIEByZXR1cm4ge1Byb21pc2V9IC0gdGhlIHByb21pc2UgZm9yIHRoZSBodHRwIHJlcXVlc3RcbiAgICAqL1xuICAgdXBkYXRlUmVwb3NpdG9yeShvcHRpb25zLCBjYikge1xuICAgICAgcmV0dXJuIHRoaXMuX3JlcXVlc3QoJ1BBVENIJywgYC9yZXBvcy8ke3RoaXMuX19mdWxsbmFtZX1gLCBvcHRpb25zLCBjYik7XG4gICB9XG5cbiAgLyoqXG4gICAgKiBHZXQgaW5mb3JtYXRpb24gYWJvdXQgdGhlIHJlcG9zaXRvcnlcbiAgICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIuZ2l0aHViLmNvbS92My9yZXBvcy8jZ2V0XG4gICAgKiBAcGFyYW0ge1JlcXVlc3RhYmxlLmNhbGxiYWNrfSBjYiAtIHdpbGwgcmVjZWl2ZSB0aGUgaW5mb3JtYXRpb24gYWJvdXQgdGhlIHJlcG9zaXRvcnlcbiAgICAqIEByZXR1cm4ge1Byb21pc2V9IC0gdGhlIHByb21pc2UgZm9yIHRoZSBodHRwIHJlcXVlc3RcbiAgICAqL1xuICAgZ2V0RGV0YWlscyhjYikge1xuICAgICAgcmV0dXJuIHRoaXMuX3JlcXVlc3QoJ0dFVCcsIGAvcmVwb3MvJHt0aGlzLl9fZnVsbG5hbWV9YCwgbnVsbCwgY2IpO1xuICAgfVxuXG4gICAvKipcbiAgICAqIExpc3QgdGhlIGNvbnRyaWJ1dG9ycyB0byB0aGUgcmVwb3NpdG9yeVxuICAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5naXRodWIuY29tL3YzL3JlcG9zLyNsaXN0LWNvbnRyaWJ1dG9yc1xuICAgICogQHBhcmFtIHtSZXF1ZXN0YWJsZS5jYWxsYmFja30gY2IgLSB3aWxsIHJlY2VpdmUgdGhlIGxpc3Qgb2YgY29udHJpYnV0b3JzXG4gICAgKiBAcmV0dXJuIHtQcm9taXNlfSAtIHRoZSBwcm9taXNlIGZvciB0aGUgaHR0cCByZXF1ZXN0XG4gICAgKi9cbiAgIGdldENvbnRyaWJ1dG9ycyhjYikge1xuICAgICAgcmV0dXJuIHRoaXMuX3JlcXVlc3QoJ0dFVCcsIGAvcmVwb3MvJHt0aGlzLl9fZnVsbG5hbWV9L2NvbnRyaWJ1dG9yc2AsIG51bGwsIGNiKTtcbiAgIH1cblxuICAgLyoqXG4gICAgKiBMaXN0IHRoZSBjb250cmlidXRvciBzdGF0cyB0byB0aGUgcmVwb3NpdG9yeVxuICAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5naXRodWIuY29tL3YzL3JlcG9zLyNsaXN0LWNvbnRyaWJ1dG9yc1xuICAgICogQHBhcmFtIHtSZXF1ZXN0YWJsZS5jYWxsYmFja30gY2IgLSB3aWxsIHJlY2VpdmUgdGhlIGxpc3Qgb2YgY29udHJpYnV0b3JzXG4gICAgKiBAcmV0dXJuIHtQcm9taXNlfSAtIHRoZSBwcm9taXNlIGZvciB0aGUgaHR0cCByZXF1ZXN0XG4gICAgKi9cbiAgIGdldENvbnRyaWJ1dG9yU3RhdHMoY2IpIHtcbiAgICAgIHJldHVybiB0aGlzLl9yZXF1ZXN0KCdHRVQnLCBgL3JlcG9zLyR7dGhpcy5fX2Z1bGxuYW1lfS9zdGF0cy9jb250cmlidXRvcnNgLCBudWxsLCBjYik7XG4gICB9XG5cbiAgIC8qKlxuICAgICogTGlzdCB0aGUgdXNlcnMgd2hvIGFyZSBjb2xsYWJvcmF0b3JzIG9uIHRoZSByZXBvc2l0b3J5LiBUaGUgY3VycmVudGx5IGF1dGhlbnRpY2F0ZWQgdXNlciBtdXN0IGhhdmVcbiAgICAqIHB1c2ggYWNjZXNzIHRvIHVzZSB0aGlzIG1ldGhvZFxuICAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5naXRodWIuY29tL3YzL3JlcG9zL2NvbGxhYm9yYXRvcnMvI2xpc3QtY29sbGFib3JhdG9yc1xuICAgICogQHBhcmFtIHtSZXF1ZXN0YWJsZS5jYWxsYmFja30gY2IgLSB3aWxsIHJlY2VpdmUgdGhlIGxpc3Qgb2YgY29sbGFib3JhdG9yc1xuICAgICogQHJldHVybiB7UHJvbWlzZX0gLSB0aGUgcHJvbWlzZSBmb3IgdGhlIGh0dHAgcmVxdWVzdFxuICAgICovXG4gICBnZXRDb2xsYWJvcmF0b3JzKGNiKSB7XG4gICAgICByZXR1cm4gdGhpcy5fcmVxdWVzdCgnR0VUJywgYC9yZXBvcy8ke3RoaXMuX19mdWxsbmFtZX0vY29sbGFib3JhdG9yc2AsIG51bGwsIGNiKTtcbiAgIH1cblxuICAgLyoqXG4gICAgKiBDaGVjayBpZiBhIHVzZXIgaXMgYSBjb2xsYWJvcmF0b3Igb24gdGhlIHJlcG9zaXRvcnlcbiAgICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIuZ2l0aHViLmNvbS92My9yZXBvcy9jb2xsYWJvcmF0b3JzLyNjaGVjay1pZi1hLXVzZXItaXMtYS1jb2xsYWJvcmF0b3JcbiAgICAqIEBwYXJhbSB7c3RyaW5nfSB1c2VybmFtZSAtIHRoZSB1c2VyIHRvIGNoZWNrXG4gICAgKiBAcGFyYW0ge1JlcXVlc3RhYmxlLmNhbGxiYWNrfSBjYiAtIHdpbGwgcmVjZWl2ZSB0cnVlIGlmIHRoZSB1c2VyIGlzIGEgY29sbGFib3JhdG9yIGFuZCBmYWxzZSBpZiB0aGV5IGFyZSBub3RcbiAgICAqIEByZXR1cm4ge1Byb21pc2V9IC0gdGhlIHByb21pc2UgZm9yIHRoZSBodHRwIHJlcXVlc3Qge0Jvb2xlYW59IFtkZXNjcmlwdGlvbl1cbiAgICAqL1xuICAgaXNDb2xsYWJvcmF0b3IodXNlcm5hbWUsIGNiKSB7XG4gICAgICByZXR1cm4gdGhpcy5fcmVxdWVzdCgnR0VUJywgYC9yZXBvcy8ke3RoaXMuX19mdWxsbmFtZX0vY29sbGFib3JhdG9ycy8ke3VzZXJuYW1lfWAsIG51bGwsIGNiKTtcbiAgIH1cblxuICAgLyoqXG4gICAgKiBHZXQgdGhlIGNvbnRlbnRzIG9mIGEgcmVwb3NpdG9yeVxuICAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5naXRodWIuY29tL3YzL3JlcG9zL2NvbnRlbnRzLyNnZXQtY29udGVudHNcbiAgICAqIEBwYXJhbSB7c3RyaW5nfSByZWYgLSB0aGUgcmVmIHRvIGNoZWNrXG4gICAgKiBAcGFyYW0ge3N0cmluZ30gcGF0aCAtIHRoZSBwYXRoIGNvbnRhaW5pbmcgdGhlIGNvbnRlbnQgdG8gZmV0Y2hcbiAgICAqIEBwYXJhbSB7Ym9vbGVhbn0gcmF3IC0gYHRydWVgIGlmIHRoZSByZXN1bHRzIHNob3VsZCBiZSByZXR1cm5lZCByYXcgaW5zdGVhZCBvZiBHaXRIdWIncyBub3JtYWxpemVkIGZvcm1hdFxuICAgICogQHBhcmFtIHtSZXF1ZXN0YWJsZS5jYWxsYmFja30gY2IgLSB3aWxsIHJlY2VpdmUgdGhlIGZldGNoZWQgZGF0YVxuICAgICogQHJldHVybiB7UHJvbWlzZX0gLSB0aGUgcHJvbWlzZSBmb3IgdGhlIGh0dHAgcmVxdWVzdFxuICAgICovXG4gICBnZXRDb250ZW50cyhyZWYsIHBhdGgsIHJhdywgY2IpIHtcbiAgICAgIHBhdGggPSBwYXRoID8gYCR7ZW5jb2RlVVJJKHBhdGgpfWAgOiAnJztcbiAgICAgIHJldHVybiB0aGlzLl9yZXF1ZXN0KCdHRVQnLCBgL3JlcG9zLyR7dGhpcy5fX2Z1bGxuYW1lfS9jb250ZW50cy8ke3BhdGh9YCwge1xuICAgICAgICAgcmVmLFxuICAgICAgfSwgY2IsIHJhdyk7XG4gICB9XG5cbiAgIC8qKlxuICAgICogR2V0IHRoZSBSRUFETUUgb2YgYSByZXBvc2l0b3J5XG4gICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLmdpdGh1Yi5jb20vdjMvcmVwb3MvY29udGVudHMvI2dldC10aGUtcmVhZG1lXG4gICAgKiBAcGFyYW0ge3N0cmluZ30gcmVmIC0gdGhlIHJlZiB0byBjaGVja1xuICAgICogQHBhcmFtIHtib29sZWFufSByYXcgLSBgdHJ1ZWAgaWYgdGhlIHJlc3VsdHMgc2hvdWxkIGJlIHJldHVybmVkIHJhdyBpbnN0ZWFkIG9mIEdpdEh1YidzIG5vcm1hbGl6ZWQgZm9ybWF0XG4gICAgKiBAcGFyYW0ge1JlcXVlc3RhYmxlLmNhbGxiYWNrfSBjYiAtIHdpbGwgcmVjZWl2ZSB0aGUgZmV0Y2hlZCBkYXRhXG4gICAgKiBAcmV0dXJuIHtQcm9taXNlfSAtIHRoZSBwcm9taXNlIGZvciB0aGUgaHR0cCByZXF1ZXN0XG4gICAgKi9cbiAgIGdldFJlYWRtZShyZWYsIHJhdywgY2IpIHtcbiAgICAgIHJldHVybiB0aGlzLl9yZXF1ZXN0KCdHRVQnLCBgL3JlcG9zLyR7dGhpcy5fX2Z1bGxuYW1lfS9yZWFkbWVgLCB7XG4gICAgICAgICByZWYsXG4gICAgICB9LCBjYiwgcmF3KTtcbiAgIH1cblxuICAgLyoqXG4gICAgKiBGb3JrIGEgcmVwb3NpdG9yeVxuICAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5naXRodWIuY29tL3YzL3JlcG9zL2ZvcmtzLyNjcmVhdGUtYS1mb3JrXG4gICAgKiBAcGFyYW0ge1JlcXVlc3RhYmxlLmNhbGxiYWNrfSBjYiAtIHdpbGwgcmVjZWl2ZSB0aGUgaW5mb3JtYXRpb24gYWJvdXQgdGhlIG5ld2x5IGNyZWF0ZWQgZm9ya1xuICAgICogQHJldHVybiB7UHJvbWlzZX0gLSB0aGUgcHJvbWlzZSBmb3IgdGhlIGh0dHAgcmVxdWVzdFxuICAgICovXG4gICBmb3JrKGNiKSB7XG4gICAgICByZXR1cm4gdGhpcy5fcmVxdWVzdCgnUE9TVCcsIGAvcmVwb3MvJHt0aGlzLl9fZnVsbG5hbWV9L2ZvcmtzYCwgbnVsbCwgY2IpO1xuICAgfVxuXG4gICAvKipcbiAgICAqIExpc3QgYSByZXBvc2l0b3J5J3MgZm9ya3NcbiAgICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIuZ2l0aHViLmNvbS92My9yZXBvcy9mb3Jrcy8jbGlzdC1mb3Jrc1xuICAgICogQHBhcmFtIHtSZXF1ZXN0YWJsZS5jYWxsYmFja30gY2IgLSB3aWxsIHJlY2VpdmUgdGhlIGxpc3Qgb2YgcmVwb3NpdG9yaWVzIGZvcmtlZCBmcm9tIHRoaXMgb25lXG4gICAgKiBAcmV0dXJuIHtQcm9taXNlfSAtIHRoZSBwcm9taXNlIGZvciB0aGUgaHR0cCByZXF1ZXN0XG4gICAgKi9cbiAgIGxpc3RGb3JrcyhjYikge1xuICAgICAgcmV0dXJuIHRoaXMuX3JlcXVlc3QoJ0dFVCcsIGAvcmVwb3MvJHt0aGlzLl9fZnVsbG5hbWV9L2ZvcmtzYCwgbnVsbCwgY2IpO1xuICAgfVxuXG4gICAvKipcbiAgICAqIENyZWF0ZSBhIG5ldyBicmFuY2ggZnJvbSBhbiBleGlzdGluZyBicmFuY2guXG4gICAgKiBAcGFyYW0ge3N0cmluZ30gW29sZEJyYW5jaD1tYXN0ZXJdIC0gdGhlIG5hbWUgb2YgdGhlIGV4aXN0aW5nIGJyYW5jaFxuICAgICogQHBhcmFtIHtzdHJpbmd9IG5ld0JyYW5jaCAtIHRoZSBuYW1lIG9mIHRoZSBuZXcgYnJhbmNoXG4gICAgKiBAcGFyYW0ge1JlcXVlc3RhYmxlLmNhbGxiYWNrfSBjYiAtIHdpbGwgcmVjZWl2ZSB0aGUgY29tbWl0IGRhdGEgZm9yIHRoZSBoZWFkIG9mIHRoZSBuZXcgYnJhbmNoXG4gICAgKiBAcmV0dXJuIHtQcm9taXNlfSAtIHRoZSBwcm9taXNlIGZvciB0aGUgaHR0cCByZXF1ZXN0XG4gICAgKi9cbiAgIGNyZWF0ZUJyYW5jaChvbGRCcmFuY2gsIG5ld0JyYW5jaCwgY2IpIHtcbiAgICAgIGlmICh0eXBlb2YgbmV3QnJhbmNoID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICBjYiA9IG5ld0JyYW5jaDtcbiAgICAgICAgIG5ld0JyYW5jaCA9IG9sZEJyYW5jaDtcbiAgICAgICAgIG9sZEJyYW5jaCA9ICdtYXN0ZXInO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdGhpcy5nZXRSZWYoYGhlYWRzLyR7b2xkQnJhbmNofWApXG4gICAgICAgICAudGhlbigocmVzcG9uc2UpID0+IHtcbiAgICAgICAgICAgIGxldCBzaGEgPSByZXNwb25zZS5kYXRhLm9iamVjdC5zaGE7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5jcmVhdGVSZWYoe1xuICAgICAgICAgICAgICAgc2hhLFxuICAgICAgICAgICAgICAgcmVmOiBgcmVmcy9oZWFkcy8ke25ld0JyYW5jaH1gLFxuICAgICAgICAgICAgfSwgY2IpO1xuICAgICAgICAgfSk7XG4gICB9XG5cbiAgIC8qKlxuICAgICogQ3JlYXRlIGEgbmV3IHB1bGwgcmVxdWVzdFxuICAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5naXRodWIuY29tL3YzL3B1bGxzLyNjcmVhdGUtYS1wdWxsLXJlcXVlc3RcbiAgICAqIEBwYXJhbSB7T2JqZWN0fSBvcHRpb25zIC0gdGhlIHB1bGwgcmVxdWVzdCBkZXNjcmlwdGlvblxuICAgICogQHBhcmFtIHtSZXF1ZXN0YWJsZS5jYWxsYmFja30gY2IgLSB3aWxsIHJlY2VpdmUgdGhlIG5ldyBwdWxsIHJlcXVlc3RcbiAgICAqIEByZXR1cm4ge1Byb21pc2V9IC0gdGhlIHByb21pc2UgZm9yIHRoZSBodHRwIHJlcXVlc3RcbiAgICAqL1xuICAgY3JlYXRlUHVsbFJlcXVlc3Qob3B0aW9ucywgY2IpIHtcbiAgICAgIHJldHVybiB0aGlzLl9yZXF1ZXN0KCdQT1NUJywgYC9yZXBvcy8ke3RoaXMuX19mdWxsbmFtZX0vcHVsbHNgLCBvcHRpb25zLCBjYik7XG4gICB9XG5cbiAgIC8qKlxuICAgICogVXBkYXRlIGEgcHVsbCByZXF1ZXN0XG4gICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLmdpdGh1Yi5jb20vdjMvcHVsbHMvI3VwZGF0ZS1hLXB1bGwtcmVxdWVzdFxuICAgICogQHBhcmFtIHtudW1iZXJ8c3RyaW5nfSBudW1iZXIgLSB0aGUgbnVtYmVyIG9mIHRoZSBwdWxsIHJlcXVlc3QgdG8gdXBkYXRlXG4gICAgKiBAcGFyYW0ge09iamVjdH0gb3B0aW9ucyAtIHRoZSBwdWxsIHJlcXVlc3QgZGVzY3JpcHRpb25cbiAgICAqIEBwYXJhbSB7UmVxdWVzdGFibGUuY2FsbGJhY2t9IFtjYl0gLSB3aWxsIHJlY2VpdmUgdGhlIHB1bGwgcmVxdWVzdCBpbmZvcm1hdGlvblxuICAgICogQHJldHVybiB7UHJvbWlzZX0gLSB0aGUgcHJvbWlzZSBmb3IgdGhlIGh0dHAgcmVxdWVzdFxuICAgICovXG4gICB1cGRhdGVQdWxsUmVxdWVzdChudW1iZXIsIG9wdGlvbnMsIGNiKSB7XG4gICAgICByZXR1cm4gdGhpcy5fcmVxdWVzdCgnUEFUQ0gnLCBgL3JlcG9zLyR7dGhpcy5fX2Z1bGxuYW1lfS9wdWxscy8ke251bWJlcn1gLCBvcHRpb25zLCBjYik7XG4gICB9XG5cbiAgIC8qKlxuICAgICogTGlzdCB0aGUgaG9va3MgZm9yIHRoZSByZXBvc2l0b3J5XG4gICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLmdpdGh1Yi5jb20vdjMvcmVwb3MvaG9va3MvI2xpc3QtaG9va3NcbiAgICAqIEBwYXJhbSB7UmVxdWVzdGFibGUuY2FsbGJhY2t9IGNiIC0gd2lsbCByZWNlaXZlIHRoZSBsaXN0IG9mIGhvb2tzXG4gICAgKiBAcmV0dXJuIHtQcm9taXNlfSAtIHRoZSBwcm9taXNlIGZvciB0aGUgaHR0cCByZXF1ZXN0XG4gICAgKi9cbiAgIGxpc3RIb29rcyhjYikge1xuICAgICAgcmV0dXJuIHRoaXMuX3JlcXVlc3QoJ0dFVCcsIGAvcmVwb3MvJHt0aGlzLl9fZnVsbG5hbWV9L2hvb2tzYCwgbnVsbCwgY2IpO1xuICAgfVxuXG4gICAvKipcbiAgICAqIEdldCBhIGhvb2sgZm9yIHRoZSByZXBvc2l0b3J5XG4gICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLmdpdGh1Yi5jb20vdjMvcmVwb3MvaG9va3MvI2dldC1zaW5nbGUtaG9va1xuICAgICogQHBhcmFtIHtudW1iZXJ9IGlkIC0gdGhlIGlkIG9mIHRoZSB3ZWJvb2tcbiAgICAqIEBwYXJhbSB7UmVxdWVzdGFibGUuY2FsbGJhY2t9IGNiIC0gd2lsbCByZWNlaXZlIHRoZSBkZXRhaWxzIG9mIHRoZSB3ZWJvb2tcbiAgICAqIEByZXR1cm4ge1Byb21pc2V9IC0gdGhlIHByb21pc2UgZm9yIHRoZSBodHRwIHJlcXVlc3RcbiAgICAqL1xuICAgZ2V0SG9vayhpZCwgY2IpIHtcbiAgICAgIHJldHVybiB0aGlzLl9yZXF1ZXN0KCdHRVQnLCBgL3JlcG9zLyR7dGhpcy5fX2Z1bGxuYW1lfS9ob29rcy8ke2lkfWAsIG51bGwsIGNiKTtcbiAgIH1cblxuICAgLyoqXG4gICAgKiBBZGQgYSBuZXcgaG9vayB0byB0aGUgcmVwb3NpdG9yeVxuICAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5naXRodWIuY29tL3YzL3JlcG9zL2hvb2tzLyNjcmVhdGUtYS1ob29rXG4gICAgKiBAcGFyYW0ge09iamVjdH0gb3B0aW9ucyAtIHRoZSBjb25maWd1cmF0aW9uIGRlc2NyaWJpbmcgdGhlIG5ldyBob29rXG4gICAgKiBAcGFyYW0ge1JlcXVlc3RhYmxlLmNhbGxiYWNrfSBjYiAtIHdpbGwgcmVjZWl2ZSB0aGUgbmV3IHdlYmhvb2tcbiAgICAqIEByZXR1cm4ge1Byb21pc2V9IC0gdGhlIHByb21pc2UgZm9yIHRoZSBodHRwIHJlcXVlc3RcbiAgICAqL1xuICAgY3JlYXRlSG9vayhvcHRpb25zLCBjYikge1xuICAgICAgcmV0dXJuIHRoaXMuX3JlcXVlc3QoJ1BPU1QnLCBgL3JlcG9zLyR7dGhpcy5fX2Z1bGxuYW1lfS9ob29rc2AsIG9wdGlvbnMsIGNiKTtcbiAgIH1cblxuICAgLyoqXG4gICAgKiBFZGl0IGFuIGV4aXN0aW5nIHdlYmhvb2tcbiAgICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIuZ2l0aHViLmNvbS92My9yZXBvcy9ob29rcy8jZWRpdC1hLWhvb2tcbiAgICAqIEBwYXJhbSB7bnVtYmVyfSBpZCAtIHRoZSBpZCBvZiB0aGUgd2ViaG9va1xuICAgICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnMgLSB0aGUgbmV3IGRlc2NyaXB0aW9uIG9mIHRoZSB3ZWJob29rXG4gICAgKiBAcGFyYW0ge1JlcXVlc3RhYmxlLmNhbGxiYWNrfSBjYiAtIHdpbGwgcmVjZWl2ZSB0aGUgdXBkYXRlZCB3ZWJob29rXG4gICAgKiBAcmV0dXJuIHtQcm9taXNlfSAtIHRoZSBwcm9taXNlIGZvciB0aGUgaHR0cCByZXF1ZXN0XG4gICAgKi9cbiAgIHVwZGF0ZUhvb2soaWQsIG9wdGlvbnMsIGNiKSB7XG4gICAgICByZXR1cm4gdGhpcy5fcmVxdWVzdCgnUEFUQ0gnLCBgL3JlcG9zLyR7dGhpcy5fX2Z1bGxuYW1lfS9ob29rcy8ke2lkfWAsIG9wdGlvbnMsIGNiKTtcbiAgIH1cblxuICAgLyoqXG4gICAgKiBEZWxldGUgYSB3ZWJob29rXG4gICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLmdpdGh1Yi5jb20vdjMvcmVwb3MvaG9va3MvI2RlbGV0ZS1hLWhvb2tcbiAgICAqIEBwYXJhbSB7bnVtYmVyfSBpZCAtIHRoZSBpZCBvZiB0aGUgd2ViaG9vayB0byBiZSBkZWxldGVkXG4gICAgKiBAcGFyYW0ge1JlcXVlc3RhYmxlLmNhbGxiYWNrfSBjYiAtIHdpbGwgcmVjZWl2ZSB0cnVlIGlmIHRoZSBjYWxsIGlzIHN1Y2Nlc3NmdWxcbiAgICAqIEByZXR1cm4ge1Byb21pc2V9IC0gdGhlIHByb21pc2UgZm9yIHRoZSBodHRwIHJlcXVlc3RcbiAgICAqL1xuICAgZGVsZXRlSG9vayhpZCwgY2IpIHtcbiAgICAgIHJldHVybiB0aGlzLl9yZXF1ZXN0KCdERUxFVEUnLCBgJHt0aGlzLl9fZnVsbG5hbWV9L2hvb2tzLyR7aWR9YCwgbnVsbCwgY2IpO1xuICAgfVxuXG4gICAvKipcbiAgICAqIExpc3QgdGhlIGRlcGxveSBrZXlzIGZvciB0aGUgcmVwb3NpdG9yeVxuICAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5naXRodWIuY29tL3YzL3JlcG9zL2tleXMvI2xpc3QtZGVwbG95LWtleXNcbiAgICAqIEBwYXJhbSB7UmVxdWVzdGFibGUuY2FsbGJhY2t9IGNiIC0gd2lsbCByZWNlaXZlIHRoZSBsaXN0IG9mIGRlcGxveSBrZXlzXG4gICAgKiBAcmV0dXJuIHtQcm9taXNlfSAtIHRoZSBwcm9taXNlIGZvciB0aGUgaHR0cCByZXF1ZXN0XG4gICAgKi9cbiAgIGxpc3RLZXlzKGNiKSB7XG4gICAgICByZXR1cm4gdGhpcy5fcmVxdWVzdCgnR0VUJywgYC9yZXBvcy8ke3RoaXMuX19mdWxsbmFtZX0va2V5c2AsIG51bGwsIGNiKTtcbiAgIH1cblxuICAgLyoqXG4gICAgKiBHZXQgYSBkZXBsb3kga2V5IGZvciB0aGUgcmVwb3NpdG9yeVxuICAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5naXRodWIuY29tL3YzL3JlcG9zL2tleXMvI2dldC1hLWRlcGxveS1rZXlcbiAgICAqIEBwYXJhbSB7bnVtYmVyfSBpZCAtIHRoZSBpZCBvZiB0aGUgZGVwbG95IGtleVxuICAgICogQHBhcmFtIHtSZXF1ZXN0YWJsZS5jYWxsYmFja30gY2IgLSB3aWxsIHJlY2VpdmUgdGhlIGRldGFpbHMgb2YgdGhlIGRlcGxveSBrZXlcbiAgICAqIEByZXR1cm4ge1Byb21pc2V9IC0gdGhlIHByb21pc2UgZm9yIHRoZSBodHRwIHJlcXVlc3RcbiAgICAqL1xuICAgZ2V0S2V5KGlkLCBjYikge1xuICAgICAgcmV0dXJuIHRoaXMuX3JlcXVlc3QoJ0dFVCcsIGAvcmVwb3MvJHt0aGlzLl9fZnVsbG5hbWV9L2tleXMvJHtpZH1gLCBudWxsLCBjYik7XG4gICB9XG5cbiAgIC8qKlxuICAgICogQWRkIGEgbmV3IGRlcGxveSBrZXkgdG8gdGhlIHJlcG9zaXRvcnlcbiAgICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIuZ2l0aHViLmNvbS92My9yZXBvcy9rZXlzLyNhZGQtYS1uZXctZGVwbG95LWtleVxuICAgICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnMgLSB0aGUgY29uZmlndXJhdGlvbiBkZXNjcmliaW5nIHRoZSBuZXcgZGVwbG95IGtleVxuICAgICogQHBhcmFtIHtSZXF1ZXN0YWJsZS5jYWxsYmFja30gY2IgLSB3aWxsIHJlY2VpdmUgdGhlIG5ldyBkZXBsb3kga2V5XG4gICAgKiBAcmV0dXJuIHtQcm9taXNlfSAtIHRoZSBwcm9taXNlIGZvciB0aGUgaHR0cCByZXF1ZXN0XG4gICAgKi9cbiAgIGNyZWF0ZUtleShvcHRpb25zLCBjYikge1xuICAgICAgcmV0dXJuIHRoaXMuX3JlcXVlc3QoJ1BPU1QnLCBgL3JlcG9zLyR7dGhpcy5fX2Z1bGxuYW1lfS9rZXlzYCwgb3B0aW9ucywgY2IpO1xuICAgfVxuXG4gICAvKipcbiAgICAqIERlbGV0ZSBhIGRlcGxveSBrZXlcbiAgICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIuZ2l0aHViLmNvbS92My9yZXBvcy9rZXlzLyNyZW1vdmUtYS1kZXBsb3kta2V5XG4gICAgKiBAcGFyYW0ge251bWJlcn0gaWQgLSB0aGUgaWQgb2YgdGhlIGRlcGxveSBrZXkgdG8gYmUgZGVsZXRlZFxuICAgICogQHBhcmFtIHtSZXF1ZXN0YWJsZS5jYWxsYmFja30gY2IgLSB3aWxsIHJlY2VpdmUgdHJ1ZSBpZiB0aGUgY2FsbCBpcyBzdWNjZXNzZnVsXG4gICAgKiBAcmV0dXJuIHtQcm9taXNlfSAtIHRoZSBwcm9taXNlIGZvciB0aGUgaHR0cCByZXF1ZXN0XG4gICAgKi9cbiAgIGRlbGV0ZUtleShpZCwgY2IpIHtcbiAgICAgIHJldHVybiB0aGlzLl9yZXF1ZXN0KCdERUxFVEUnLCBgL3JlcG9zLyR7dGhpcy5fX2Z1bGxuYW1lfS9rZXlzLyR7aWR9YCwgbnVsbCwgY2IpO1xuICAgfVxuXG4gICAvKipcbiAgICAqIERlbGV0ZSBhIGZpbGUgZnJvbSBhIGJyYW5jaFxuICAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5naXRodWIuY29tL3YzL3JlcG9zL2NvbnRlbnRzLyNkZWxldGUtYS1maWxlXG4gICAgKiBAcGFyYW0ge3N0cmluZ30gYnJhbmNoIC0gdGhlIGJyYW5jaCB0byBkZWxldGUgZnJvbSwgb3IgdGhlIGRlZmF1bHQgYnJhbmNoIGlmIG5vdCBzcGVjaWZpZWRcbiAgICAqIEBwYXJhbSB7c3RyaW5nfSBwYXRoIC0gdGhlIHBhdGggb2YgdGhlIGZpbGUgdG8gcmVtb3ZlXG4gICAgKiBAcGFyYW0ge1JlcXVlc3RhYmxlLmNhbGxiYWNrfSBjYiAtIHdpbGwgcmVjZWl2ZSB0aGUgY29tbWl0IGluIHdoaWNoIHRoZSBkZWxldGUgb2NjdXJyZWRcbiAgICAqIEByZXR1cm4ge1Byb21pc2V9IC0gdGhlIHByb21pc2UgZm9yIHRoZSBodHRwIHJlcXVlc3RcbiAgICAqL1xuICAgZGVsZXRlRmlsZShicmFuY2gsIHBhdGgsIGNiKSB7XG4gICAgICByZXR1cm4gdGhpcy5nZXRTaGEoYnJhbmNoLCBwYXRoKVxuICAgICAgICAgLnRoZW4oKHJlc3BvbnNlKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBkZWxldGVDb21taXQgPSB7XG4gICAgICAgICAgICAgICBtZXNzYWdlOiBgRGVsZXRlIHRoZSBmaWxlIGF0ICcke3BhdGh9J2AsXG4gICAgICAgICAgICAgICBzaGE6IHJlc3BvbnNlLmRhdGEuc2hhLFxuICAgICAgICAgICAgICAgYnJhbmNoLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9yZXF1ZXN0KCdERUxFVEUnLCBgL3JlcG9zLyR7dGhpcy5fX2Z1bGxuYW1lfS9jb250ZW50cy8ke3BhdGh9YCwgZGVsZXRlQ29tbWl0LCBjYik7XG4gICAgICAgICB9KTtcbiAgIH1cblxuICAgLyoqXG4gICAgKiBDaGFuZ2UgYWxsIHJlZmVyZW5jZXMgaW4gYSByZXBvIGZyb20gb2xkUGF0aCB0byBuZXdfcGF0aFxuICAgICogQHBhcmFtIHtzdHJpbmd9IGJyYW5jaCAtIHRoZSBicmFuY2ggdG8gY2Fycnkgb3V0IHRoZSByZWZlcmVuY2UgY2hhbmdlLCBvciB0aGUgZGVmYXVsdCBicmFuY2ggaWYgbm90IHNwZWNpZmllZFxuICAgICogQHBhcmFtIHtzdHJpbmd9IG9sZFBhdGggLSBvcmlnaW5hbCBwYXRoXG4gICAgKiBAcGFyYW0ge3N0cmluZ30gbmV3UGF0aCAtIG5ldyByZWZlcmVuY2UgcGF0aFxuICAgICogQHBhcmFtIHtSZXF1ZXN0YWJsZS5jYWxsYmFja30gY2IgLSB3aWxsIHJlY2VpdmUgdGhlIGNvbW1pdCBpbiB3aGljaCB0aGUgbW92ZSBvY2N1cnJlZFxuICAgICogQHJldHVybiB7UHJvbWlzZX0gLSB0aGUgcHJvbWlzZSBmb3IgdGhlIGh0dHAgcmVxdWVzdFxuICAgICovXG4gICBtb3ZlKGJyYW5jaCwgb2xkUGF0aCwgbmV3UGF0aCwgY2IpIHtcbiAgICAgIGxldCBvbGRTaGE7XG4gICAgICByZXR1cm4gdGhpcy5nZXRSZWYoYGhlYWRzLyR7YnJhbmNofWApXG4gICAgICAgICAudGhlbigoe2RhdGE6IHtvYmplY3R9fSkgPT4gdGhpcy5nZXRUcmVlKGAke29iamVjdC5zaGF9P3JlY3Vyc2l2ZT10cnVlYCkpXG4gICAgICAgICAudGhlbigoe2RhdGE6IHt0cmVlLCBzaGF9fSkgPT4ge1xuICAgICAgICAgICAgb2xkU2hhID0gc2hhO1xuICAgICAgICAgICAgbGV0IG5ld1RyZWUgPSB0cmVlLm1hcCgocmVmKSA9PiB7XG4gICAgICAgICAgICAgICBpZiAocmVmLnBhdGggPT09IG9sZFBhdGgpIHtcbiAgICAgICAgICAgICAgICAgIHJlZi5wYXRoID0gbmV3UGF0aDtcbiAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgIGlmIChyZWYudHlwZSA9PT0gJ3RyZWUnKSB7XG4gICAgICAgICAgICAgICAgICBkZWxldGUgcmVmLnNoYTtcbiAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgIHJldHVybiByZWY7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmNyZWF0ZVRyZWUobmV3VHJlZSk7XG4gICAgICAgICB9KVxuICAgICAgICAgLnRoZW4oKHtkYXRhOiB0cmVlfSkgPT4gdGhpcy5jb21taXQob2xkU2hhLCB0cmVlLnNoYSwgYFJlbmFtZWQgJyR7b2xkUGF0aH0nIHRvICcke25ld1BhdGh9J2ApKVxuICAgICAgICAgLnRoZW4oKHtkYXRhOiBjb21taXR9KSA9PiB0aGlzLnVwZGF0ZUhlYWQoYGhlYWRzLyR7YnJhbmNofWAsIGNvbW1pdC5zaGEsIHRydWUsIGNiKSk7XG4gICB9XG5cbiAgIC8qKlxuICAgICogV3JpdGUgYSBmaWxlIHRvIHRoZSByZXBvc2l0b3J5XG4gICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLmdpdGh1Yi5jb20vdjMvcmVwb3MvY29udGVudHMvI3VwZGF0ZS1hLWZpbGVcbiAgICAqIEBwYXJhbSB7c3RyaW5nfSBicmFuY2ggLSB0aGUgbmFtZSBvZiB0aGUgYnJhbmNoXG4gICAgKiBAcGFyYW0ge3N0cmluZ30gcGF0aCAtIHRoZSBwYXRoIGZvciB0aGUgZmlsZVxuICAgICogQHBhcmFtIHtzdHJpbmd9IGNvbnRlbnQgLSB0aGUgY29udGVudHMgb2YgdGhlIGZpbGVcbiAgICAqIEBwYXJhbSB7c3RyaW5nfSBtZXNzYWdlIC0gdGhlIGNvbW1pdCBtZXNzYWdlXG4gICAgKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdIC0gY29tbWl0IG9wdGlvbnNcbiAgICAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9ucy5hdXRob3JdIC0gdGhlIGF1dGhvciBvZiB0aGUgY29tbWl0XG4gICAgKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnMuY29tbWl0ZXJdIC0gdGhlIGNvbW1pdHRlclxuICAgICogQHBhcmFtIHtib29sZWFufSBbb3B0aW9ucy5lbmNvZGVdIC0gdHJ1ZSBpZiB0aGUgY29udGVudCBzaG91bGQgYmUgYmFzZTY0IGVuY29kZWRcbiAgICAqIEBwYXJhbSB7UmVxdWVzdGFibGUuY2FsbGJhY2t9IGNiIC0gd2lsbCByZWNlaXZlIHRoZSBuZXcgY29tbWl0XG4gICAgKiBAcmV0dXJuIHtQcm9taXNlfSAtIHRoZSBwcm9taXNlIGZvciB0aGUgaHR0cCByZXF1ZXN0XG4gICAgKi9cbiAgIHdyaXRlRmlsZShicmFuY2gsIHBhdGgsIGNvbnRlbnQsIG1lc3NhZ2UsIG9wdGlvbnMsIGNiKSB7XG4gICAgICBpZiAodHlwZW9mIG9wdGlvbnMgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgIGNiID0gb3B0aW9ucztcbiAgICAgICAgIG9wdGlvbnMgPSB7fTtcbiAgICAgIH1cbiAgICAgIGxldCBmaWxlUGF0aCA9IHBhdGggPyBlbmNvZGVVUkkocGF0aCkgOiAnJztcbiAgICAgIGxldCBzaG91bGRFbmNvZGUgPSBvcHRpb25zLmVuY29kZSAhPT0gZmFsc2U7XG4gICAgICBsZXQgY29tbWl0ID0ge1xuICAgICAgICAgYnJhbmNoLFxuICAgICAgICAgbWVzc2FnZSxcbiAgICAgICAgIGF1dGhvcjogb3B0aW9ucy5hdXRob3IsXG4gICAgICAgICBjb21taXR0ZXI6IG9wdGlvbnMuY29tbWl0dGVyLFxuICAgICAgICAgY29udGVudDogc2hvdWxkRW5jb2RlID8gQmFzZTY0LmVuY29kZShjb250ZW50KSA6IGNvbnRlbnQsXG4gICAgICB9O1xuXG4gICAgICByZXR1cm4gdGhpcy5nZXRTaGEoYnJhbmNoLCBmaWxlUGF0aClcbiAgICAgICAgIC50aGVuKChyZXNwb25zZSkgPT4ge1xuICAgICAgICAgICAgY29tbWl0LnNoYSA9IHJlc3BvbnNlLmRhdGEuc2hhO1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX3JlcXVlc3QoJ1BVVCcsIGAvcmVwb3MvJHt0aGlzLl9fZnVsbG5hbWV9L2NvbnRlbnRzLyR7ZmlsZVBhdGh9YCwgY29tbWl0LCBjYik7XG4gICAgICAgICB9LCAoKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fcmVxdWVzdCgnUFVUJywgYC9yZXBvcy8ke3RoaXMuX19mdWxsbmFtZX0vY29udGVudHMvJHtmaWxlUGF0aH1gLCBjb21taXQsIGNiKTtcbiAgICAgICAgIH0pO1xuICAgfVxuXG4gICAvKipcbiAgICAqIENoZWNrIGlmIGEgcmVwb3NpdG9yeSBpcyBzdGFycmVkIGJ5IHlvdVxuICAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5naXRodWIuY29tL3YzL2FjdGl2aXR5L3N0YXJyaW5nLyNjaGVjay1pZi15b3UtYXJlLXN0YXJyaW5nLWEtcmVwb3NpdG9yeVxuICAgICogQHBhcmFtIHtSZXF1ZXN0YWJsZS5jYWxsYmFja30gY2IgLSB3aWxsIHJlY2VpdmUgdHJ1ZSBpZiB0aGUgcmVwb3NpdG9yeSBpcyBzdGFycmVkIGFuZCBmYWxzZSBpZiB0aGUgcmVwb3NpdG9yeVxuICAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaXMgbm90IHN0YXJyZWRcbiAgICAqIEByZXR1cm4ge1Byb21pc2V9IC0gdGhlIHByb21pc2UgZm9yIHRoZSBodHRwIHJlcXVlc3Qge0Jvb2xlYW59IFtkZXNjcmlwdGlvbl1cbiAgICAqL1xuICAgaXNTdGFycmVkKGNiKSB7XG4gICAgICByZXR1cm4gdGhpcy5fcmVxdWVzdDIwNG9yNDA0KGAvdXNlci9zdGFycmVkLyR7dGhpcy5fX2Z1bGxuYW1lfWAsIG51bGwsIGNiKTtcbiAgIH1cblxuICAgLyoqXG4gICAgKiBTdGFyIGEgcmVwb3NpdG9yeVxuICAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5naXRodWIuY29tL3YzL2FjdGl2aXR5L3N0YXJyaW5nLyNzdGFyLWEtcmVwb3NpdG9yeVxuICAgICogQHBhcmFtIHtSZXF1ZXN0YWJsZS5jYWxsYmFja30gY2IgLSB3aWxsIHJlY2VpdmUgdHJ1ZSBpZiB0aGUgcmVwb3NpdG9yeSBpcyBzdGFycmVkXG4gICAgKiBAcmV0dXJuIHtQcm9taXNlfSAtIHRoZSBwcm9taXNlIGZvciB0aGUgaHR0cCByZXF1ZXN0XG4gICAgKi9cbiAgIHN0YXIoY2IpIHtcbiAgICAgIHJldHVybiB0aGlzLl9yZXF1ZXN0KCdQVVQnLCBgL3VzZXIvc3RhcnJlZC8ke3RoaXMuX19mdWxsbmFtZX1gLCBudWxsLCBjYik7XG4gICB9XG5cbiAgIC8qKlxuICAgICogVW5zdGFyIGEgcmVwb3NpdG9yeVxuICAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5naXRodWIuY29tL3YzL2FjdGl2aXR5L3N0YXJyaW5nLyN1bnN0YXItYS1yZXBvc2l0b3J5XG4gICAgKiBAcGFyYW0ge1JlcXVlc3RhYmxlLmNhbGxiYWNrfSBjYiAtIHdpbGwgcmVjZWl2ZSB0cnVlIGlmIHRoZSByZXBvc2l0b3J5IGlzIHVuc3RhcnJlZFxuICAgICogQHJldHVybiB7UHJvbWlzZX0gLSB0aGUgcHJvbWlzZSBmb3IgdGhlIGh0dHAgcmVxdWVzdFxuICAgICovXG4gICB1bnN0YXIoY2IpIHtcbiAgICAgIHJldHVybiB0aGlzLl9yZXF1ZXN0KCdERUxFVEUnLCBgL3VzZXIvc3RhcnJlZC8ke3RoaXMuX19mdWxsbmFtZX1gLCBudWxsLCBjYik7XG4gICB9XG5cbiAgIC8qKlxuICAgICogQ3JlYXRlIGEgbmV3IHJlbGVhc2VcbiAgICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIuZ2l0aHViLmNvbS92My9yZXBvcy9yZWxlYXNlcy8jY3JlYXRlLWEtcmVsZWFzZVxuICAgICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnMgLSB0aGUgZGVzY3JpcHRpb24gb2YgdGhlIHJlbGVhc2VcbiAgICAqIEBwYXJhbSB7UmVxdWVzdGFibGUuY2FsbGJhY2t9IGNiIC0gd2lsbCByZWNlaXZlIHRoZSBuZXdseSBjcmVhdGVkIHJlbGVhc2VcbiAgICAqIEByZXR1cm4ge1Byb21pc2V9IC0gdGhlIHByb21pc2UgZm9yIHRoZSBodHRwIHJlcXVlc3RcbiAgICAqL1xuICAgY3JlYXRlUmVsZWFzZShvcHRpb25zLCBjYikge1xuICAgICAgcmV0dXJuIHRoaXMuX3JlcXVlc3QoJ1BPU1QnLCBgL3JlcG9zLyR7dGhpcy5fX2Z1bGxuYW1lfS9yZWxlYXNlc2AsIG9wdGlvbnMsIGNiKTtcbiAgIH1cblxuICAgLyoqXG4gICAgKiBFZGl0IGEgcmVsZWFzZVxuICAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5naXRodWIuY29tL3YzL3JlcG9zL3JlbGVhc2VzLyNlZGl0LWEtcmVsZWFzZVxuICAgICogQHBhcmFtIHtzdHJpbmd9IGlkIC0gdGhlIGlkIG9mIHRoZSByZWxlYXNlXG4gICAgKiBAcGFyYW0ge09iamVjdH0gb3B0aW9ucyAtIHRoZSBkZXNjcmlwdGlvbiBvZiB0aGUgcmVsZWFzZVxuICAgICogQHBhcmFtIHtSZXF1ZXN0YWJsZS5jYWxsYmFja30gY2IgLSB3aWxsIHJlY2VpdmUgdGhlIG1vZGlmaWVkIHJlbGVhc2VcbiAgICAqIEByZXR1cm4ge1Byb21pc2V9IC0gdGhlIHByb21pc2UgZm9yIHRoZSBodHRwIHJlcXVlc3RcbiAgICAqL1xuICAgdXBkYXRlUmVsZWFzZShpZCwgb3B0aW9ucywgY2IpIHtcbiAgICAgIHJldHVybiB0aGlzLl9yZXF1ZXN0KCdQQVRDSCcsIGAvcmVwb3MvJHt0aGlzLl9fZnVsbG5hbWV9L3JlbGVhc2VzLyR7aWR9YCwgb3B0aW9ucywgY2IpO1xuICAgfVxuXG4gICAvKipcbiAgICAqIEdldCBpbmZvcm1hdGlvbiBhYm91dCBhbGwgcmVsZWFzZXNcbiAgICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIuZ2l0aHViLmNvbS92My9yZXBvcy9yZWxlYXNlcy8jbGlzdC1yZWxlYXNlcy1mb3ItYS1yZXBvc2l0b3J5XG4gICAgKiBAcGFyYW0ge1JlcXVlc3RhYmxlLmNhbGxiYWNrfSBjYiAtIHdpbGwgcmVjZWl2ZSB0aGUgcmVsZWFzZSBpbmZvcm1hdGlvblxuICAgICogQHJldHVybiB7UHJvbWlzZX0gLSB0aGUgcHJvbWlzZSBmb3IgdGhlIGh0dHAgcmVxdWVzdFxuICAgICovXG4gICBsaXN0UmVsZWFzZXMoY2IpIHtcbiAgICAgIHJldHVybiB0aGlzLl9yZXF1ZXN0KCdHRVQnLCBgL3JlcG9zLyR7dGhpcy5fX2Z1bGxuYW1lfS9yZWxlYXNlc2AsIG51bGwsIGNiKTtcbiAgIH1cblxuICAgLyoqXG4gICAgKiBHZXQgaW5mb3JtYXRpb24gYWJvdXQgYSByZWxlYXNlXG4gICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLmdpdGh1Yi5jb20vdjMvcmVwb3MvcmVsZWFzZXMvI2dldC1hLXNpbmdsZS1yZWxlYXNlXG4gICAgKiBAcGFyYW0ge3N0cmluZ30gaWQgLSB0aGUgaWQgb2YgdGhlIHJlbGVhc2VcbiAgICAqIEBwYXJhbSB7UmVxdWVzdGFibGUuY2FsbGJhY2t9IGNiIC0gd2lsbCByZWNlaXZlIHRoZSByZWxlYXNlIGluZm9ybWF0aW9uXG4gICAgKiBAcmV0dXJuIHtQcm9taXNlfSAtIHRoZSBwcm9taXNlIGZvciB0aGUgaHR0cCByZXF1ZXN0XG4gICAgKi9cbiAgIGdldFJlbGVhc2UoaWQsIGNiKSB7XG4gICAgICByZXR1cm4gdGhpcy5fcmVxdWVzdCgnR0VUJywgYC9yZXBvcy8ke3RoaXMuX19mdWxsbmFtZX0vcmVsZWFzZXMvJHtpZH1gLCBudWxsLCBjYik7XG4gICB9XG5cbiAgIC8qKlxuICAgICogRGVsZXRlIGEgcmVsZWFzZVxuICAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5naXRodWIuY29tL3YzL3JlcG9zL3JlbGVhc2VzLyNkZWxldGUtYS1yZWxlYXNlXG4gICAgKiBAcGFyYW0ge3N0cmluZ30gaWQgLSB0aGUgcmVsZWFzZSB0byBiZSBkZWxldGVkXG4gICAgKiBAcGFyYW0ge1JlcXVlc3RhYmxlLmNhbGxiYWNrfSBjYiAtIHdpbGwgcmVjZWl2ZSB0cnVlIGlmIHRoZSBvcGVyYXRpb24gaXMgc3VjY2Vzc2Z1bFxuICAgICogQHJldHVybiB7UHJvbWlzZX0gLSB0aGUgcHJvbWlzZSBmb3IgdGhlIGh0dHAgcmVxdWVzdFxuICAgICovXG4gICBkZWxldGVSZWxlYXNlKGlkLCBjYikge1xuICAgICAgcmV0dXJuIHRoaXMuX3JlcXVlc3QoJ0RFTEVURScsIGAvcmVwb3MvJHt0aGlzLl9fZnVsbG5hbWV9L3JlbGVhc2VzLyR7aWR9YCwgbnVsbCwgY2IpO1xuICAgfVxuXG4gICAvKipcbiAgICAqIE1lcmdlIGEgcHVsbCByZXF1ZXN0XG4gICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLmdpdGh1Yi5jb20vdjMvcHVsbHMvI21lcmdlLWEtcHVsbC1yZXF1ZXN0LW1lcmdlLWJ1dHRvblxuICAgICogQHBhcmFtIHtudW1iZXJ8c3RyaW5nfSBudW1iZXIgLSB0aGUgbnVtYmVyIG9mIHRoZSBwdWxsIHJlcXVlc3QgdG8gbWVyZ2VcbiAgICAqIEBwYXJhbSB7T2JqZWN0fSBvcHRpb25zIC0gdGhlIG1lcmdlIG9wdGlvbnMgZm9yIHRoZSBwdWxsIHJlcXVlc3RcbiAgICAqIEBwYXJhbSB7UmVxdWVzdGFibGUuY2FsbGJhY2t9IFtjYl0gLSB3aWxsIHJlY2VpdmUgdGhlIG1lcmdlIGluZm9ybWF0aW9uIGlmIHRoZSBvcGVyYXRpb24gaXMgc3VjY2Vzc2Z1bFxuICAgICogQHJldHVybiB7UHJvbWlzZX0gLSB0aGUgcHJvbWlzZSBmb3IgdGhlIGh0dHAgcmVxdWVzdFxuICAgICovXG4gICBtZXJnZVB1bGxSZXF1ZXN0KG51bWJlciwgb3B0aW9ucywgY2IpIHtcbiAgICAgIHJldHVybiB0aGlzLl9yZXF1ZXN0KCdQVVQnLCBgL3JlcG9zLyR7dGhpcy5fX2Z1bGxuYW1lfS9wdWxscy8ke251bWJlcn0vbWVyZ2VgLCBvcHRpb25zLCBjYik7XG4gICB9XG5cbiAgIC8qKlxuICAgICogR2V0IGluZm9ybWF0aW9uIGFib3V0IGFsbCBwcm9qZWN0c1xuICAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5naXRodWIuY29tL3YzL3Byb2plY3RzLyNsaXN0LXJlcG9zaXRvcnktcHJvamVjdHNcbiAgICAqIEBwYXJhbSB7UmVxdWVzdGFibGUuY2FsbGJhY2t9IFtjYl0gLSB3aWxsIHJlY2VpdmUgdGhlIGxpc3Qgb2YgcHJvamVjdHNcbiAgICAqIEByZXR1cm4ge1Byb21pc2V9IC0gdGhlIHByb21pc2UgZm9yIHRoZSBodHRwIHJlcXVlc3RcbiAgICAqL1xuICAgbGlzdFByb2plY3RzKGNiKSB7XG4gICAgICByZXR1cm4gdGhpcy5fcmVxdWVzdEFsbFBhZ2VzKGAvcmVwb3MvJHt0aGlzLl9fZnVsbG5hbWV9L3Byb2plY3RzYCwge0FjY2VwdEhlYWRlcjogJ2luZXJ0aWEtcHJldmlldyd9LCBjYik7XG4gICB9XG5cbiAgIC8qKlxuICAgICogQ3JlYXRlIGEgbmV3IHByb2plY3RcbiAgICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIuZ2l0aHViLmNvbS92My9wcm9qZWN0cy8jY3JlYXRlLWEtcmVwb3NpdG9yeS1wcm9qZWN0XG4gICAgKiBAcGFyYW0ge09iamVjdH0gb3B0aW9ucyAtIHRoZSBkZXNjcmlwdGlvbiBvZiB0aGUgcHJvamVjdFxuICAgICogQHBhcmFtIHtSZXF1ZXN0YWJsZS5jYWxsYmFja30gY2IgLSB3aWxsIHJlY2VpdmUgdGhlIG5ld2x5IGNyZWF0ZWQgcHJvamVjdFxuICAgICogQHJldHVybiB7UHJvbWlzZX0gLSB0aGUgcHJvbWlzZSBmb3IgdGhlIGh0dHAgcmVxdWVzdFxuICAgICovXG4gICBjcmVhdGVQcm9qZWN0KG9wdGlvbnMsIGNiKSB7XG4gICAgICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgICAgIG9wdGlvbnMuQWNjZXB0SGVhZGVyID0gJ2luZXJ0aWEtcHJldmlldyc7XG4gICAgICByZXR1cm4gdGhpcy5fcmVxdWVzdCgnUE9TVCcsIGAvcmVwb3MvJHt0aGlzLl9fZnVsbG5hbWV9L3Byb2plY3RzYCwgb3B0aW9ucywgY2IpO1xuICAgfVxuXG59XG5cbm1vZHVsZS5leHBvcnRzID0gUmVwb3NpdG9yeTtcbiJdfQ==","//# sourceMappingURL=Repository.js.map",""],"l":{"3":1,"5":61,"7":1,"9":1,"11":1,"13":1,"15":1,"17":1,"19":1,"21":3,"23":1,"25":1,"27":1,"34":1,"40":1,"41":1,"49":1,"50":0,"52":0,"54":0,"55":0,"59":0,"71":1,"74":0,"88":0,"102":0,"115":0,"128":0,"142":0,"143":0,"157":0,"171":0,"186":0,"199":0,"213":0,"227":0,"241":0,"260":0,"262":0,"263":0,"265":0,"279":0,"280":0,"295":0,"296":0,"310":0,"324":0,"338":0,"340":0,"341":0,"353":0,"354":0,"355":0,"359":0,"360":0,"361":0,"365":0,"366":0,"367":0,"373":0,"374":0,"392":0,"402":0,"417":0,"435":0,"437":0,"443":0,"444":0,"445":0,"462":0,"484":0,"506":0,"519":0,"532":0,"545":0,"559":0,"573":0,"589":0,"590":0,"607":0,"622":0,"635":0,"649":0,"651":0,"652":0,"653":0,"654":0,"657":0,"658":0,"659":0,"677":0,"692":0,"705":0,"719":0,"733":0,"748":0,"762":0,"775":0,"789":0,"803":0,"817":0,"832":0,"834":0,"835":0,"840":0,"856":0,"858":0,"859":0,"860":0,"861":0,"863":0,"867":0,"868":0,"869":0,"870":0,"872":0,"873":0,"875":0,"877":0,"879":0,"880":0,"882":0,"883":0,"905":0,"907":0,"908":0,"909":0,"911":0,"912":0,"913":0,"921":0,"922":0,"923":0,"925":0,"940":0,"953":0,"966":0,"980":0,"995":0,"1008":0,"1022":0,"1036":0,"1051":0,"1064":0,"1078":0,"1079":0,"1080":0,"1084":1,"1087":1}},"/home/travis/build/npmtest/node-npmtest-github-api/node_modules/github-api/dist/components/Organization.js":{"path":"/home/travis/build/npmtest/node-npmtest-github-api/node_modules/github-api/dist/components/Organization.js","s":{"1":1,"2":1,"3":1,"4":8,"5":8,"6":8,"7":8,"8":8,"9":8,"10":1,"11":1,"12":1,"13":1,"14":0,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":0,"22":0,"23":1,"24":0,"25":0,"26":0,"27":1,"28":1,"29":0,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":0,"37":0,"38":0,"39":0,"40":1,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":1,"53":1},"b":{"1":[8,8],"2":[8,0],"3":[1,0],"4":[0,1],"5":[0,1],"6":[1,1],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0,0],"11":[0,1],"12":[1,0],"13":[1,1],"14":[1,0],"15":[1,0],"16":[0,0],"17":[0,0]},"f":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},"fnMap":{"1":{"name":"(anonymous_1)","line":3,"loc":{"start":{"line":3,"column":19},"end":{"line":3,"column":31}}},"2":{"name":"defineProperties","line":3,"loc":{"start":{"line":3,"column":33},"end":{"line":3,"column":74}}},"3":{"name":"(anonymous_3)","line":3,"loc":{"start":{"line":3,"column":357},"end":{"line":3,"column":405}}},"4":{"name":"_interopRequireDefault","line":9,"loc":{"start":{"line":9,"column":0},"end":{"line":9,"column":37}}},"5":{"name":"_classCallCheck","line":11,"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":48}}},"6":{"name":"_possibleConstructorReturn","line":13,"loc":{"start":{"line":13,"column":0},"end":{"line":13,"column":48}}},"7":{"name":"_inherits","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":41}}},"8":{"name":"(anonymous_8)","line":25,"loc":{"start":{"line":25,"column":19},"end":{"line":25,"column":43}}},"9":{"name":"Organization","line":34,"loc":{"start":{"line":34,"column":2},"end":{"line":34,"column":53}}},"10":{"name":"createRepo","line":54,"loc":{"start":{"line":54,"column":11},"end":{"line":54,"column":44}}},"11":{"name":"getRepos","line":67,"loc":{"start":{"line":67,"column":11},"end":{"line":67,"column":33}}},"12":{"name":"isMember","line":82,"loc":{"start":{"line":82,"column":11},"end":{"line":82,"column":43}}},"13":{"name":"listMembers","line":98,"loc":{"start":{"line":98,"column":11},"end":{"line":98,"column":45}}},"14":{"name":"getTeams","line":111,"loc":{"start":{"line":111,"column":11},"end":{"line":111,"column":33}}},"15":{"name":"createTeam","line":130,"loc":{"start":{"line":130,"column":11},"end":{"line":130,"column":44}}},"16":{"name":"listProjects","line":143,"loc":{"start":{"line":143,"column":11},"end":{"line":143,"column":37}}},"17":{"name":"createProject","line":157,"loc":{"start":{"line":157,"column":11},"end":{"line":157,"column":47}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":564}},"2":{"start":{"line":3,"column":33},"end":{"line":3,"column":349}},"3":{"start":{"line":3,"column":76},"end":{"line":3,"column":347}},"4":{"start":{"line":3,"column":117},"end":{"line":3,"column":143}},"5":{"start":{"line":3,"column":144},"end":{"line":3,"column":199}},"6":{"start":{"line":3,"column":200},"end":{"line":3,"column":231}},"7":{"start":{"line":3,"column":232},"end":{"line":3,"column":286}},"8":{"start":{"line":3,"column":259},"end":{"line":3,"column":286}},"9":{"start":{"line":3,"column":287},"end":{"line":3,"column":345}},"10":{"start":{"line":3,"column":350},"end":{"line":3,"column":559}},"11":{"start":{"line":3,"column":407},"end":{"line":3,"column":475}},"12":{"start":{"line":3,"column":423},"end":{"line":3,"column":475}},"13":{"start":{"line":3,"column":476},"end":{"line":3,"column":536}},"14":{"start":{"line":3,"column":493},"end":{"line":3,"column":536}},"15":{"start":{"line":3,"column":537},"end":{"line":3,"column":556}},"16":{"start":{"line":5,"column":0},"end":{"line":5,"column":45}},"17":{"start":{"line":7,"column":0},"end":{"line":7,"column":58}},"18":{"start":{"line":9,"column":0},"end":{"line":9,"column":95}},"19":{"start":{"line":9,"column":39},"end":{"line":9,"column":93}},"20":{"start":{"line":11,"column":0},"end":{"line":11,"column":153}},"21":{"start":{"line":11,"column":50},"end":{"line":11,"column":151}},"22":{"start":{"line":11,"column":92},"end":{"line":11,"column":149}},"23":{"start":{"line":13,"column":0},"end":{"line":13,"column":240}},"24":{"start":{"line":13,"column":50},"end":{"line":13,"column":151}},"25":{"start":{"line":13,"column":63},"end":{"line":13,"column":149}},"26":{"start":{"line":13,"column":152},"end":{"line":13,"column":238}},"27":{"start":{"line":15,"column":0},"end":{"line":15,"column":494}},"28":{"start":{"line":15,"column":43},"end":{"line":15,"column":208}},"29":{"start":{"line":15,"column":106},"end":{"line":15,"column":206}},"30":{"start":{"line":15,"column":209},"end":{"line":15,"column":373}},"31":{"start":{"line":15,"column":374},"end":{"line":15,"column":492}},"32":{"start":{"line":15,"column":390},"end":{"line":15,"column":492}},"33":{"start":{"line":25,"column":0},"end":{"line":165,"column":25}},"34":{"start":{"line":26,"column":2},"end":{"line":26,"column":40}},"35":{"start":{"line":34,"column":2},"end":{"line":41,"column":3}},"36":{"start":{"line":35,"column":4},"end":{"line":35,"column":40}},"37":{"start":{"line":37,"column":4},"end":{"line":37,"column":140}},"38":{"start":{"line":39,"column":4},"end":{"line":39,"column":32}},"39":{"start":{"line":40,"column":4},"end":{"line":40,"column":17}},"40":{"start":{"line":52,"column":2},"end":{"line":162,"column":6}},"41":{"start":{"line":55,"column":6},"end":{"line":55,"column":83}},"42":{"start":{"line":68,"column":6},"end":{"line":68,"column":79}},"43":{"start":{"line":70,"column":6},"end":{"line":70,"column":90}},"44":{"start":{"line":83,"column":6},"end":{"line":83,"column":94}},"45":{"start":{"line":99,"column":6},"end":{"line":99,"column":84}},"46":{"start":{"line":112,"column":6},"end":{"line":112,"column":85}},"47":{"start":{"line":131,"column":6},"end":{"line":131,"column":83}},"48":{"start":{"line":144,"column":6},"end":{"line":144,"column":114}},"49":{"start":{"line":158,"column":6},"end":{"line":158,"column":30}},"50":{"start":{"line":159,"column":6},"end":{"line":159,"column":47}},"51":{"start":{"line":160,"column":6},"end":{"line":160,"column":86}},"52":{"start":{"line":164,"column":2},"end":{"line":164,"column":22}},"53":{"start":{"line":167,"column":0},"end":{"line":167,"column":30}}},"branchMap":{"1":{"line":3,"type":"binary-expr","locations":[{"start":{"line":3,"column":168},"end":{"line":3,"column":189}},{"start":{"line":3,"column":193},"end":{"line":3,"column":198}}]},"2":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":232},"end":{"line":3,"column":232}},{"start":{"line":3,"column":232},"end":{"line":3,"column":232}}]},"3":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":407},"end":{"line":3,"column":407}},{"start":{"line":3,"column":407},"end":{"line":3,"column":407}}]},"4":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":476},"end":{"line":3,"column":476}},{"start":{"line":3,"column":476},"end":{"line":3,"column":476}}]},"5":{"line":9,"type":"cond-expr","locations":[{"start":{"line":9,"column":70},"end":{"line":9,"column":73}},{"start":{"line":9,"column":76},"end":{"line":9,"column":92}}]},"6":{"line":9,"type":"binary-expr","locations":[{"start":{"line":9,"column":46},"end":{"line":9,"column":49}},{"start":{"line":9,"column":53},"end":{"line":9,"column":67}}]},"7":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":50},"end":{"line":11,"column":50}},{"start":{"line":11,"column":50},"end":{"line":11,"column":50}}]},"8":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":50},"end":{"line":13,"column":50}},{"start":{"line":13,"column":50},"end":{"line":13,"column":50}}]},"9":{"line":13,"type":"cond-expr","locations":[{"start":{"line":13,"column":226},"end":{"line":13,"column":230}},{"start":{"line":13,"column":233},"end":{"line":13,"column":237}}]},"10":{"line":13,"type":"binary-expr","locations":[{"start":{"line":13,"column":159},"end":{"line":13,"column":163}},{"start":{"line":13,"column":168},"end":{"line":13,"column":192}},{"start":{"line":13,"column":196},"end":{"line":13,"column":222}}]},"11":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":43},"end":{"line":15,"column":43}},{"start":{"line":15,"column":43},"end":{"line":15,"column":43}}]},"12":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":47},"end":{"line":15,"column":79}},{"start":{"line":15,"column":83},"end":{"line":15,"column":102}}]},"13":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":244},"end":{"line":15,"column":254}},{"start":{"line":15,"column":258},"end":{"line":15,"column":278}}]},"14":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":374},"end":{"line":15,"column":374}},{"start":{"line":15,"column":374},"end":{"line":15,"column":374}}]},"15":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":414},"end":{"line":15,"column":457}},{"start":{"line":15,"column":460},"end":{"line":15,"column":491}}]},"16":{"line":37,"type":"binary-expr","locations":[{"start":{"line":37,"column":50},"end":{"line":37,"column":72}},{"start":{"line":37,"column":76},"end":{"line":37,"column":111}}]},"17":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":16},"end":{"line":158,"column":23}},{"start":{"line":158,"column":27},"end":{"line":158,"column":29}}]}},"code":["'use strict';","","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();","","var _Requestable2 = require('./Requestable');","","var _Requestable3 = _interopRequireDefault(_Requestable2);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }","","function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }","","function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }filecopyright  2013 Michael Aufreiter (Development Seed) and 2016 Yahoo Inclicense    Licensed under {@link https://spdx.org/licenses/BSD-3-Clause-Clear.html BSD-3-Clause-Clear}ithub.js is freely distributablerganization encapsulates the functionality to create repositories in organizations"," */","var Organization = function (_Requestable) {","  _inherits(Organization, _Requestable);","","  /**","   * Create a new Organization","   * @param {string} organization - the name of the organization","   * @param {Requestable.auth} [auth] - information required to authenticate to Github","   * @param {string} [apiBase=https://api.github.com] - the base Github API URL","   */","  function Organization(organization, auth, apiBase) {","    _classCallCheck(this, Organization);","","    var _this = _possibleConstructorReturn(this, (Organization.__proto__ || Object.getPrototypeOf(Organization)).call(this, auth, apiBase));","","    _this.__name = organization;","    return _this;","  }","","  /**","   * Create a repository in an organization","   * @see https://developer.github.com/v3/repos/#create","   * @param {Object} options - the repository definition","   * @param {Requestable.callback} [cb] - will receive the created repository","   * @return {Promise} - the promise for the http request","   */","","","  _createClass(Organization, [{","    key: 'createRepo',","    value: function createRepo(options, cb) {","      return this._request('POST', '/orgs/' + this.__name + '/repos', options, cb);","    }","","    /**","     * List the repositories in an organization","     * @see https://developer.github.com/v3/repos/#list-organization-repositories","     * @param {Requestable.callback} [cb] - will receive the list of repositories","     * @return {Promise} - the promise for the http request","     */","","  }, {","    key: 'getRepos',","    value: function getRepos(cb) {","      var requestOptions = this._getOptionsWithDefaults({ direction: 'desc' });","","      return this._requestAllPages('/orgs/' + this.__name + '/repos', requestOptions, cb);","    }","","    /**","     * Query if the user is a member or not","     * @param {string} username - the user in question","     * @param {Requestable.callback} [cb] - will receive true if the user is a member","     * @return {Promise} - the promise for the http request","     */","","  }, {","    key: 'isMember',","    value: function isMember(username, cb) {","      return this._request204or404('/orgs/' + this.__name + '/members/' + username, null, cb);","    }","","    /**","     * List the users who are members of the company","     * @see https://developer.github.com/v3/orgs/members/#members-list","     * @param {object} options - filtering options","     * @param {string} [options.filter=all] - can be either `2fa_disabled` or `all`","     * @param {string} [options.role=all] - can be one of: `all`, `admin`, or `member`","     * @param {Requestable.callback} [cb] - will receive the list of users","     * @return {Promise} - the promise for the http request","     */","","  }, {","    key: 'listMembers',","    value: function listMembers(options, cb) {","      return this._request('GET', '/orgs/' + this.__name + '/members', options, cb);","    }","","    /**","     * List the Teams in the Organization","     * @see https://developer.github.com/v3/orgs/teams/#list-teams","     * @param {Requestable.callback} [cb] - will receive the list of teams","     * @return {Promise} - the promise for the http request","     */","","  }, {","    key: 'getTeams',","    value: function getTeams(cb) {","      return this._requestAllPages('/orgs/' + this.__name + '/teams', undefined, cb);","    }","","    /**","     * Create a team","     * @see https://developer.github.com/v3/orgs/teams/#create-team","     * @param {object} options - Team creation parameters","     * @param {string} options.name - The name of the team","     * @param {string} [options.description] - Team description","     * @param {string} [options.repo_names] - Repos to add the team to","     * @param {string} [options.privacy=secret] - The level of privacy the team should have. Can be either one","     * of: `secret`, or `closed`","     * @param {Requestable.callback} [cb] - will receive the created team","     * @return {Promise} - the promise for the http request","     */","","  }, {","    key: 'createTeam',","    value: function createTeam(options, cb) {","      return this._request('POST', '/orgs/' + this.__name + '/teams', options, cb);","    }","","    /**","     * Get information about all projects","     * @see https://developer.github.com/v3/projects/#list-organization-projects","     * @param {Requestable.callback} [cb] - will receive the list of projects","     * @return {Promise} - the promise for the http request","     */","","  }, {","    key: 'listProjects',","    value: function listProjects(cb) {","      return this._requestAllPages('/orgs/' + this.__name + '/projects', { AcceptHeader: 'inertia-preview' }, cb);","    }","","    /**","     * Create a new project","     * @see https://developer.github.com/v3/repos/projects/#create-a-project","     * @param {Object} options - the description of the project","     * @param {Requestable.callback} cb - will receive the newly created project","     * @return {Promise} - the promise for the http request","     */","","  }, {","    key: 'createProject',","    value: function createProject(options, cb) {","      options = options || {};","      options.AcceptHeader = 'inertia-preview';","      return this._request('POST', '/orgs/' + this.__name + '/projects', options, cb);","    }","  }]);","","  return Organization;","}(_Requestable3.default);","","module.exports = Organization;","//# sourceMappingURL=data:application/json;base64,","//# sourceMappingURL=Organization.js.map",""],"l":{"3":8,"5":1,"7":1,"9":1,"11":1,"13":1,"15":1,"25":1,"26":1,"34":1,"35":0,"37":0,"39":0,"40":0,"52":1,"55":0,"68":0,"70":0,"83":0,"99":0,"112":0,"131":0,"144":0,"158":0,"159":0,"160":0,"164":1,"167":1}},"/home/travis/build/npmtest/node-npmtest-github-api/node_modules/github-api/dist/components/Team.js":{"path":"/home/travis/build/npmtest/node-npmtest-github-api/node_modules/github-api/dist/components/Team.js","s":{"1":1,"2":1,"3":1,"4":10,"5":10,"6":10,"7":10,"8":10,"9":10,"10":1,"11":1,"12":1,"13":1,"14":0,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":2,"22":1,"23":0,"24":0,"25":1,"26":0,"27":0,"28":0,"29":1,"30":1,"31":0,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":0,"40":0,"41":0,"42":0,"43":1,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":1,"65":1},"b":{"1":[10,10],"2":[10,0],"3":[1,0],"4":[0,1],"5":[0,2],"6":[2,2],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0,0],"11":[0,1],"12":[1,0],"13":[1,1],"14":[1,0],"15":[1,0],"16":[0,0]},"f":{"1":1,"2":1,"3":1,"4":2,"5":0,"6":0,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},"fnMap":{"1":{"name":"(anonymous_1)","line":3,"loc":{"start":{"line":3,"column":19},"end":{"line":3,"column":31}}},"2":{"name":"defineProperties","line":3,"loc":{"start":{"line":3,"column":33},"end":{"line":3,"column":74}}},"3":{"name":"(anonymous_3)","line":3,"loc":{"start":{"line":3,"column":357},"end":{"line":3,"column":405}}},"4":{"name":"_interopRequireDefault","line":13,"loc":{"start":{"line":13,"column":0},"end":{"line":13,"column":37}}},"5":{"name":"_classCallCheck","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":48}}},"6":{"name":"_possibleConstructorReturn","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":48}}},"7":{"name":"_inherits","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":41}}},"8":{"name":"(anonymous_8)","line":32,"loc":{"start":{"line":32,"column":11},"end":{"line":32,"column":35}}},"9":{"name":"Team","line":41,"loc":{"start":{"line":41,"column":2},"end":{"line":41,"column":39}}},"10":{"name":"getTeam","line":60,"loc":{"start":{"line":60,"column":11},"end":{"line":60,"column":32}}},"11":{"name":"listRepos","line":74,"loc":{"start":{"line":74,"column":11},"end":{"line":74,"column":34}}},"12":{"name":"editTeam","line":94,"loc":{"start":{"line":94,"column":11},"end":{"line":94,"column":42}}},"13":{"name":"listMembers","line":110,"loc":{"start":{"line":110,"column":11},"end":{"line":110,"column":45}}},"14":{"name":"getMembership","line":125,"loc":{"start":{"line":125,"column":11},"end":{"line":125,"column":48}}},"15":{"name":"addMembership","line":143,"loc":{"start":{"line":143,"column":11},"end":{"line":143,"column":57}}},"16":{"name":"isManagedRepo","line":159,"loc":{"start":{"line":159,"column":11},"end":{"line":159,"column":51}}},"17":{"name":"manageRepo","line":178,"loc":{"start":{"line":178,"column":11},"end":{"line":178,"column":57}}},"18":{"name":"unmanageRepo","line":194,"loc":{"start":{"line":194,"column":11},"end":{"line":194,"column":50}}},"19":{"name":"deleteTeam","line":208,"loc":{"start":{"line":208,"column":11},"end":{"line":208,"column":35}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":564}},"2":{"start":{"line":3,"column":33},"end":{"line":3,"column":349}},"3":{"start":{"line":3,"column":76},"end":{"line":3,"column":347}},"4":{"start":{"line":3,"column":117},"end":{"line":3,"column":143}},"5":{"start":{"line":3,"column":144},"end":{"line":3,"column":199}},"6":{"start":{"line":3,"column":200},"end":{"line":3,"column":231}},"7":{"start":{"line":3,"column":232},"end":{"line":3,"column":286}},"8":{"start":{"line":3,"column":259},"end":{"line":3,"column":286}},"9":{"start":{"line":3,"column":287},"end":{"line":3,"column":345}},"10":{"start":{"line":3,"column":350},"end":{"line":3,"column":559}},"11":{"start":{"line":3,"column":407},"end":{"line":3,"column":475}},"12":{"start":{"line":3,"column":423},"end":{"line":3,"column":475}},"13":{"start":{"line":3,"column":476},"end":{"line":3,"column":536}},"14":{"start":{"line":3,"column":493},"end":{"line":3,"column":536}},"15":{"start":{"line":3,"column":537},"end":{"line":3,"column":556}},"16":{"start":{"line":5,"column":0},"end":{"line":5,"column":45}},"17":{"start":{"line":7,"column":0},"end":{"line":7,"column":58}},"18":{"start":{"line":9,"column":0},"end":{"line":9,"column":30}},"19":{"start":{"line":11,"column":0},"end":{"line":11,"column":45}},"20":{"start":{"line":13,"column":0},"end":{"line":13,"column":95}},"21":{"start":{"line":13,"column":39},"end":{"line":13,"column":93}},"22":{"start":{"line":15,"column":0},"end":{"line":15,"column":153}},"23":{"start":{"line":15,"column":50},"end":{"line":15,"column":151}},"24":{"start":{"line":15,"column":92},"end":{"line":15,"column":149}},"25":{"start":{"line":17,"column":0},"end":{"line":17,"column":240}},"26":{"start":{"line":17,"column":50},"end":{"line":17,"column":151}},"27":{"start":{"line":17,"column":63},"end":{"line":17,"column":149}},"28":{"start":{"line":17,"column":152},"end":{"line":17,"column":238}},"29":{"start":{"line":19,"column":0},"end":{"line":19,"column":494}},"30":{"start":{"line":19,"column":43},"end":{"line":19,"column":208}},"31":{"start":{"line":19,"column":106},"end":{"line":19,"column":206}},"32":{"start":{"line":19,"column":209},"end":{"line":19,"column":373}},"33":{"start":{"line":19,"column":374},"end":{"line":19,"column":492}},"34":{"start":{"line":19,"column":390},"end":{"line":19,"column":492}},"35":{"start":{"line":26,"column":0},"end":{"line":26,"column":46}},"36":{"start":{"line":32,"column":0},"end":{"line":215,"column":25}},"37":{"start":{"line":33,"column":2},"end":{"line":33,"column":32}},"38":{"start":{"line":41,"column":2},"end":{"line":48,"column":3}},"39":{"start":{"line":42,"column":4},"end":{"line":42,"column":32}},"40":{"start":{"line":44,"column":4},"end":{"line":44,"column":124}},"41":{"start":{"line":46,"column":4},"end":{"line":46,"column":28}},"42":{"start":{"line":47,"column":4},"end":{"line":47,"column":17}},"43":{"start":{"line":58,"column":2},"end":{"line":212,"column":6}},"44":{"start":{"line":61,"column":6},"end":{"line":61,"column":44}},"45":{"start":{"line":62,"column":6},"end":{"line":62,"column":76}},"46":{"start":{"line":75,"column":6},"end":{"line":75,"column":61}},"47":{"start":{"line":76,"column":6},"end":{"line":76,"column":88}},"48":{"start":{"line":95,"column":6},"end":{"line":95,"column":43}},"49":{"start":{"line":96,"column":6},"end":{"line":96,"column":76}},"50":{"start":{"line":111,"column":6},"end":{"line":111,"column":54}},"51":{"start":{"line":112,"column":6},"end":{"line":112,"column":88}},"52":{"start":{"line":126,"column":6},"end":{"line":126,"column":82}},"53":{"start":{"line":127,"column":6},"end":{"line":127,"column":105}},"54":{"start":{"line":144,"column":6},"end":{"line":144,"column":67}},"55":{"start":{"line":145,"column":6},"end":{"line":145,"column":103}},"56":{"start":{"line":160,"column":6},"end":{"line":160,"column":98}},"57":{"start":{"line":161,"column":6},"end":{"line":161,"column":110}},"58":{"start":{"line":179,"column":6},"end":{"line":179,"column":109}},"59":{"start":{"line":180,"column":6},"end":{"line":180,"column":115}},"60":{"start":{"line":195,"column":6},"end":{"line":195,"column":97}},"61":{"start":{"line":196,"column":6},"end":{"line":196,"column":120}},"62":{"start":{"line":209,"column":6},"end":{"line":209,"column":44}},"63":{"start":{"line":210,"column":6},"end":{"line":210,"column":87}},"64":{"start":{"line":214,"column":2},"end":{"line":214,"column":14}},"65":{"start":{"line":217,"column":0},"end":{"line":217,"column":22}}},"branchMap":{"1":{"line":3,"type":"binary-expr","locations":[{"start":{"line":3,"column":168},"end":{"line":3,"column":189}},{"start":{"line":3,"column":193},"end":{"line":3,"column":198}}]},"2":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":232},"end":{"line":3,"column":232}},{"start":{"line":3,"column":232},"end":{"line":3,"column":232}}]},"3":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":407},"end":{"line":3,"column":407}},{"start":{"line":3,"column":407},"end":{"line":3,"column":407}}]},"4":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":476},"end":{"line":3,"column":476}},{"start":{"line":3,"column":476},"end":{"line":3,"column":476}}]},"5":{"line":13,"type":"cond-expr","locations":[{"start":{"line":13,"column":70},"end":{"line":13,"column":73}},{"start":{"line":13,"column":76},"end":{"line":13,"column":92}}]},"6":{"line":13,"type":"binary-expr","locations":[{"start":{"line":13,"column":46},"end":{"line":13,"column":49}},{"start":{"line":13,"column":53},"end":{"line":13,"column":67}}]},"7":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":50},"end":{"line":15,"column":50}},{"start":{"line":15,"column":50},"end":{"line":15,"column":50}}]},"8":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":50},"end":{"line":17,"column":50}},{"start":{"line":17,"column":50},"end":{"line":17,"column":50}}]},"9":{"line":17,"type":"cond-expr","locations":[{"start":{"line":17,"column":226},"end":{"line":17,"column":230}},{"start":{"line":17,"column":233},"end":{"line":17,"column":237}}]},"10":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":159},"end":{"line":17,"column":163}},{"start":{"line":17,"column":168},"end":{"line":17,"column":192}},{"start":{"line":17,"column":196},"end":{"line":17,"column":222}}]},"11":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":43},"end":{"line":19,"column":43}},{"start":{"line":19,"column":43},"end":{"line":19,"column":43}}]},"12":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":47},"end":{"line":19,"column":79}},{"start":{"line":19,"column":83},"end":{"line":19,"column":102}}]},"13":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":244},"end":{"line":19,"column":254}},{"start":{"line":19,"column":258},"end":{"line":19,"column":278}}]},"14":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":374},"end":{"line":19,"column":374}},{"start":{"line":19,"column":374},"end":{"line":19,"column":374}}]},"15":{"line":19,"type":"cond-expr","locations":[{"start":{"line":19,"column":414},"end":{"line":19,"column":457}},{"start":{"line":19,"column":460},"end":{"line":19,"column":491}}]},"16":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":50},"end":{"line":44,"column":64}},{"start":{"line":44,"column":68},"end":{"line":44,"column":95}}]}},"code":["'use strict';","","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();","","var _Requestable2 = require('./Requestable');","","var _Requestable3 = _interopRequireDefault(_Requestable2);","","var _debug = require('debug');","","var _debug2 = _interopRequireDefault(_debug);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }","","function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }","","function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }filecopyright  2016 Matt Smith (Development Seedlicense    Licensed under {@link https://spdx.org/licenses/BSD-3-Clause-Clear.html BSD-3-Clause-Clear}ithub.js is freely distributablevar log = (0, _debug2.default)('github:team');","","/**"," * A Team allows scoping of API requests to a particular Github Organization Team."," */","","var Team = function (_Requestable) {","  _inherits(Team, _Requestable);","","  /**","   * Create a Team.","   * @param {string} [teamId] - the id for the team","   * @param {Requestable.auth} [auth] - information required to authenticate to Github","   * @param {string} [apiBase=https://api.github.com] - the base Github API URL","   */","  function Team(teamId, auth, apiBase) {","    _classCallCheck(this, Team);","","    var _this = _possibleConstructorReturn(this, (Team.__proto__ || Object.getPrototypeOf(Team)).call(this, auth, apiBase));","","    _this.__teamId = teamId;","    return _this;","  }","","  /**","   * Get Team information","   * @see https://developer.github.com/v3/orgs/teams/#get-team","   * @param {Requestable.callback} [cb] - will receive the team","   * @return {Promise} - the promise for the http request","   */","","","  _createClass(Team, [{","    key: 'getTeam',","    value: function getTeam(cb) {","      log('Fetching Team ' + this.__teamId);","      return this._request('Get', '/teams/' + this.__teamId, undefined, cb);","    }","","    /**","     * List the Team's repositories","     * @see https://developer.github.com/v3/orgs/teams/#list-team-repos","     * @param {Requestable.callback} [cb] - will receive the list of repositories","     * @return {Promise} - the promise for the http request","     */","","  }, {","    key: 'listRepos',","    value: function listRepos(cb) {","      log('Fetching repositories for Team ' + this.__teamId);","      return this._requestAllPages('/teams/' + this.__teamId + '/repos', undefined, cb);","    }","","    /**","     * Edit Team information","     * @see https://developer.github.com/v3/orgs/teams/#edit-team","     * @param {object} options - Parameters for team edit","     * @param {string} options.name - The name of the team","     * @param {string} [options.description] - Team description","     * @param {string} [options.repo_names] - Repos to add the team to","     * @param {string} [options.privacy=secret] - The level of privacy the team should have. Can be either one","     * of: `secret`, or `closed`","     * @param {Requestable.callback} [cb] - will receive the updated team","     * @return {Promise} - the promise for the http request","     */","","  }, {","    key: 'editTeam',","    value: function editTeam(options, cb) {","      log('Editing Team ' + this.__teamId);","      return this._request('PATCH', '/teams/' + this.__teamId, options, cb);","    }","","    /**","     * List the users who are members of the Team","     * @see https://developer.github.com/v3/orgs/teams/#list-team-members","     * @param {object} options - Parameters for listing team users","     * @param {string} [options.role=all] - can be one of: `all`, `maintainer`, or `member`","     * @param {Requestable.callback} [cb] - will receive the list of users","     * @return {Promise} - the promise for the http request","     */","","  }, {","    key: 'listMembers',","    value: function listMembers(options, cb) {","      log('Getting members of Team ' + this.__teamId);","      return this._requestAllPages('/teams/' + this.__teamId + '/members', options, cb);","    }","","    /**","     * Get Team membership status for a user","     * @see https://developer.github.com/v3/orgs/teams/#get-team-membership","     * @param {string} username - can be one of: `all`, `maintainer`, or `member`","     * @param {Requestable.callback} [cb] - will receive the membership status of a user","     * @return {Promise} - the promise for the http request","     */","","  }, {","    key: 'getMembership',","    value: function getMembership(username, cb) {","      log('Getting membership of user ' + username + ' in Team ' + this.__teamId);","      return this._request('GET', '/teams/' + this.__teamId + '/memberships/' + username, undefined, cb);","    }","","    /**","     * Add a member to the Team","     * @see https://developer.github.com/v3/orgs/teams/#add-team-membership","     * @param {string} username - can be one of: `all`, `maintainer`, or `member`","     * @param {object} options - Parameters for adding a team member","     * @param {string} [options.role=member] - The role that this user should have in the team. Can be one","     * of: `member`, or `maintainer`","     * @param {Requestable.callback} [cb] - will receive the membership status of added user","     * @return {Promise} - the promise for the http request","     */","","  }, {","    key: 'addMembership',","    value: function addMembership(username, options, cb) {","      log('Adding user ' + username + ' to Team ' + this.__teamId);","      return this._request('PUT', '/teams/' + this.__teamId + '/memberships/' + username, options, cb);","    }","","    /**","     * Get repo management status for team","     * @see https://developer.github.com/v3/orgs/teams/#remove-team-membership","     * @param {string} owner - Organization name","     * @param {string} repo - Repo name","     * @param {Requestable.callback} [cb] - will receive the membership status of added user","     * @return {Promise} - the promise for the http request","     */","","  }, {","    key: 'isManagedRepo',","    value: function isManagedRepo(owner, repo, cb) {","      log('Getting repo management by Team ' + this.__teamId + ' for repo ' + owner + '/' + repo);","      return this._request204or404('/teams/' + this.__teamId + '/repos/' + owner + '/' + repo, undefined, cb);","    }","","    /**","     * Add or Update repo management status for team","     * @see https://developer.github.com/v3/orgs/teams/#add-or-update-team-repository","     * @param {string} owner - Organization name","     * @param {string} repo - Repo name","     * @param {object} options - Parameters for adding or updating repo management for the team","     * @param {string} [options.permission] - The permission to grant the team on this repository. Can be one","     * of: `pull`, `push`, or `admin`","     * @param {Requestable.callback} [cb] - will receive the membership status of added user","     * @return {Promise} - the promise for the http request","     */","","  }, {","    key: 'manageRepo',","    value: function manageRepo(owner, repo, options, cb) {","      log('Adding or Updating repo management by Team ' + this.__teamId + ' for repo ' + owner + '/' + repo);","      return this._request204or404('/teams/' + this.__teamId + '/repos/' + owner + '/' + repo, options, cb, 'PUT');","    }","","    /**","     * Remove repo management status for team","     * @see https://developer.github.com/v3/orgs/teams/#remove-team-repository","     * @param {string} owner - Organization name","     * @param {string} repo - Repo name","     * @param {Requestable.callback} [cb] - will receive the membership status of added user","     * @return {Promise} - the promise for the http request","     */","","  }, {","    key: 'unmanageRepo',","    value: function unmanageRepo(owner, repo, cb) {","      log('Remove repo management by Team ' + this.__teamId + ' for repo ' + owner + '/' + repo);","      return this._request204or404('/teams/' + this.__teamId + '/repos/' + owner + '/' + repo, undefined, cb, 'DELETE');","    }","","    /**","     * Delete Team","     * @see https://developer.github.com/v3/orgs/teams/#delete-team","     * @param {Requestable.callback} [cb] - will receive the list of repositories","     * @return {Promise} - the promise for the http request","     */","","  }, {","    key: 'deleteTeam',","    value: function deleteTeam(cb) {","      log('Deleting Team ' + this.__teamId);","      return this._request204or404('/teams/' + this.__teamId, undefined, cb, 'DELETE');","    }","  }]);","","  return Team;","}(_Requestable3.default);","","module.exports = Team;","//# sourceMappingURL=data:application/json;base64,","//# sourceMappingURL=Team.js.map",""],"l":{"3":10,"5":1,"7":1,"9":1,"11":1,"13":2,"15":1,"17":1,"19":1,"26":1,"32":1,"33":1,"41":1,"42":0,"44":0,"46":0,"47":0,"58":1,"61":0,"62":0,"75":0,"76":0,"95":0,"96":0,"111":0,"112":0,"126":0,"127":0,"144":0,"145":0,"160":0,"161":0,"179":0,"180":0,"195":0,"196":0,"209":0,"210":0,"214":1,"217":1}},"/home/travis/build/npmtest/node-npmtest-github-api/node_modules/github-api/dist/components/Markdown.js":{"path":"/home/travis/build/npmtest/node-npmtest-github-api/node_modules/github-api/dist/components/Markdown.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":0,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":0,"22":0,"23":1,"24":0,"25":0,"26":0,"27":1,"28":1,"29":0,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":0,"37":0,"38":1,"39":0,"40":1,"41":1},"b":{"1":[1,1],"2":[1,0],"3":[1,0],"4":[0,1],"5":[0,1],"6":[1,1],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0,0],"11":[0,1],"12":[1,0],"13":[1,1],"14":[1,0],"15":[1,0],"16":[0,0]},"f":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":1,"8":1,"9":0,"10":0},"fnMap":{"1":{"name":"(anonymous_1)","line":3,"loc":{"start":{"line":3,"column":19},"end":{"line":3,"column":31}}},"2":{"name":"defineProperties","line":3,"loc":{"start":{"line":3,"column":33},"end":{"line":3,"column":74}}},"3":{"name":"(anonymous_3)","line":3,"loc":{"start":{"line":3,"column":357},"end":{"line":3,"column":405}}},"4":{"name":"_interopRequireDefault","line":9,"loc":{"start":{"line":9,"column":0},"end":{"line":9,"column":37}}},"5":{"name":"_classCallCheck","line":11,"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":48}}},"6":{"name":"_possibleConstructorReturn","line":13,"loc":{"start":{"line":13,"column":0},"end":{"line":13,"column":48}}},"7":{"name":"_inherits","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":41}}},"8":{"name":"(anonymous_8)","line":25,"loc":{"start":{"line":25,"column":15},"end":{"line":25,"column":39}}},"9":{"name":"Markdown","line":34,"loc":{"start":{"line":34,"column":2},"end":{"line":34,"column":35}}},"10":{"name":"render","line":54,"loc":{"start":{"line":54,"column":11},"end":{"line":54,"column":40}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":564}},"2":{"start":{"line":3,"column":33},"end":{"line":3,"column":349}},"3":{"start":{"line":3,"column":76},"end":{"line":3,"column":347}},"4":{"start":{"line":3,"column":117},"end":{"line":3,"column":143}},"5":{"start":{"line":3,"column":144},"end":{"line":3,"column":199}},"6":{"start":{"line":3,"column":200},"end":{"line":3,"column":231}},"7":{"start":{"line":3,"column":232},"end":{"line":3,"column":286}},"8":{"start":{"line":3,"column":259},"end":{"line":3,"column":286}},"9":{"start":{"line":3,"column":287},"end":{"line":3,"column":345}},"10":{"start":{"line":3,"column":350},"end":{"line":3,"column":559}},"11":{"start":{"line":3,"column":407},"end":{"line":3,"column":475}},"12":{"start":{"line":3,"column":423},"end":{"line":3,"column":475}},"13":{"start":{"line":3,"column":476},"end":{"line":3,"column":536}},"14":{"start":{"line":3,"column":493},"end":{"line":3,"column":536}},"15":{"start":{"line":3,"column":537},"end":{"line":3,"column":556}},"16":{"start":{"line":5,"column":0},"end":{"line":5,"column":45}},"17":{"start":{"line":7,"column":0},"end":{"line":7,"column":58}},"18":{"start":{"line":9,"column":0},"end":{"line":9,"column":95}},"19":{"start":{"line":9,"column":39},"end":{"line":9,"column":93}},"20":{"start":{"line":11,"column":0},"end":{"line":11,"column":153}},"21":{"start":{"line":11,"column":50},"end":{"line":11,"column":151}},"22":{"start":{"line":11,"column":92},"end":{"line":11,"column":149}},"23":{"start":{"line":13,"column":0},"end":{"line":13,"column":240}},"24":{"start":{"line":13,"column":50},"end":{"line":13,"column":151}},"25":{"start":{"line":13,"column":63},"end":{"line":13,"column":149}},"26":{"start":{"line":13,"column":152},"end":{"line":13,"column":238}},"27":{"start":{"line":15,"column":0},"end":{"line":15,"column":494}},"28":{"start":{"line":15,"column":43},"end":{"line":15,"column":208}},"29":{"start":{"line":15,"column":106},"end":{"line":15,"column":206}},"30":{"start":{"line":15,"column":209},"end":{"line":15,"column":373}},"31":{"start":{"line":15,"column":374},"end":{"line":15,"column":492}},"32":{"start":{"line":15,"column":390},"end":{"line":15,"column":492}},"33":{"start":{"line":25,"column":0},"end":{"line":60,"column":25}},"34":{"start":{"line":26,"column":2},"end":{"line":26,"column":36}},"35":{"start":{"line":34,"column":2},"end":{"line":38,"column":3}},"36":{"start":{"line":35,"column":4},"end":{"line":35,"column":36}},"37":{"start":{"line":37,"column":4},"end":{"line":37,"column":127}},"38":{"start":{"line":52,"column":2},"end":{"line":57,"column":6}},"39":{"start":{"line":55,"column":6},"end":{"line":55,"column":61}},"40":{"start":{"line":59,"column":2},"end":{"line":59,"column":18}},"41":{"start":{"line":62,"column":0},"end":{"line":62,"column":26}}},"branchMap":{"1":{"line":3,"type":"binary-expr","locations":[{"start":{"line":3,"column":168},"end":{"line":3,"column":189}},{"start":{"line":3,"column":193},"end":{"line":3,"column":198}}]},"2":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":232},"end":{"line":3,"column":232}},{"start":{"line":3,"column":232},"end":{"line":3,"column":232}}]},"3":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":407},"end":{"line":3,"column":407}},{"start":{"line":3,"column":407},"end":{"line":3,"column":407}}]},"4":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":476},"end":{"line":3,"column":476}},{"start":{"line":3,"column":476},"end":{"line":3,"column":476}}]},"5":{"line":9,"type":"cond-expr","locations":[{"start":{"line":9,"column":70},"end":{"line":9,"column":73}},{"start":{"line":9,"column":76},"end":{"line":9,"column":92}}]},"6":{"line":9,"type":"binary-expr","locations":[{"start":{"line":9,"column":46},"end":{"line":9,"column":49}},{"start":{"line":9,"column":53},"end":{"line":9,"column":67}}]},"7":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":50},"end":{"line":11,"column":50}},{"start":{"line":11,"column":50},"end":{"line":11,"column":50}}]},"8":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":50},"end":{"line":13,"column":50}},{"start":{"line":13,"column":50},"end":{"line":13,"column":50}}]},"9":{"line":13,"type":"cond-expr","locations":[{"start":{"line":13,"column":226},"end":{"line":13,"column":230}},{"start":{"line":13,"column":233},"end":{"line":13,"column":237}}]},"10":{"line":13,"type":"binary-expr","locations":[{"start":{"line":13,"column":159},"end":{"line":13,"column":163}},{"start":{"line":13,"column":168},"end":{"line":13,"column":192}},{"start":{"line":13,"column":196},"end":{"line":13,"column":222}}]},"11":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":43},"end":{"line":15,"column":43}},{"start":{"line":15,"column":43},"end":{"line":15,"column":43}}]},"12":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":47},"end":{"line":15,"column":79}},{"start":{"line":15,"column":83},"end":{"line":15,"column":102}}]},"13":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":244},"end":{"line":15,"column":254}},{"start":{"line":15,"column":258},"end":{"line":15,"column":278}}]},"14":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":374},"end":{"line":15,"column":374}},{"start":{"line":15,"column":374},"end":{"line":15,"column":374}}]},"15":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":414},"end":{"line":15,"column":457}},{"start":{"line":15,"column":460},"end":{"line":15,"column":491}}]},"16":{"line":37,"type":"binary-expr","locations":[{"start":{"line":37,"column":45},"end":{"line":37,"column":63}},{"start":{"line":37,"column":67},"end":{"line":37,"column":98}}]}},"code":["'use strict';","","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();","","var _Requestable2 = require('./Requestable');","","var _Requestable3 = _interopRequireDefault(_Requestable2);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }","","function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }","","function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }filecopyright  2013 Michael Aufreiter (Development Seed) and 2016 Yahoo Inclicense    Licensed under {@link https://spdx.org/licenses/BSD-3-Clause-Clear.html BSD-3-Clause-Clear}ithub.js is freely distributableenders html from Markdown text"," */","var Markdown = function (_Requestable) {","  _inherits(Markdown, _Requestable);","","  /**","   * construct a Markdown","   * @param {Requestable.auth} auth - the credentials to authenticate to GitHub","   * @param {string} [apiBase] - the base Github API URL","   * @return {Promise} - the promise for the http request","   */","  function Markdown(auth, apiBase) {","    _classCallCheck(this, Markdown);","","    return _possibleConstructorReturn(this, (Markdown.__proto__ || Object.getPrototypeOf(Markdown)).call(this, auth, apiBase));","  }","","  /**","   * Render html from Markdown text.","   * @see https://developer.github.com/v3/markdown/#render-an-arbitrary-markdown-document","   * @param {Object} options - conversion options","   * @param {string} [options.text] - the markdown text to convert","   * @param {string} [options.mode=markdown] - can be either `markdown` or `gfm`","   * @param {string} [options.context] - repository name if mode is gfm","   * @param {Requestable.callback} [cb] - will receive the converted html","   * @return {Promise} - the promise for the http request","   */","","","  _createClass(Markdown, [{","    key: 'render',","    value: function render(options, cb) {","      return this._request('POST', '/markdown', options, cb);","    }","  }]);","","  return Markdown;","}(_Requestable3.default);","","module.exports = Markdown;","//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIk1hcmtkb3duLmpzIl0sIm5hbWVzIjpbIk1hcmtkb3duIiwiYXV0aCIsImFwaUJhc2UiLCJvcHRpb25zIiwiY2IiLCJfcmVxdWVzdCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7Ozs7QUFPQTs7Ozs7Ozs7OzsrZUFQQTs7Ozs7OztBQVNBOzs7SUFHTUEsUTs7O0FBQ0g7Ozs7OztBQU1BLG9CQUFZQyxJQUFaLEVBQWtCQyxPQUFsQixFQUEyQjtBQUFBOztBQUFBLCtHQUNsQkQsSUFEa0IsRUFDWkMsT0FEWTtBQUUxQjs7QUFFRDs7Ozs7Ozs7Ozs7Ozs7MkJBVU9DLE8sRUFBU0MsRSxFQUFJO0FBQ2pCLGFBQU8sS0FBS0MsUUFBTCxDQUFjLE1BQWQsRUFBc0IsV0FBdEIsRUFBbUNGLE9BQW5DLEVBQTRDQyxFQUE1QyxDQUFQO0FBQ0Y7Ozs7OztBQUdKRSxPQUFPQyxPQUFQLEdBQWlCUCxRQUFqQiIsImZpbGUiOiJNYXJrZG93bi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGZpbGVcbiAqIEBjb3B5cmlnaHQgIDIwMTMgTWljaGFlbCBBdWZyZWl0ZXIgKERldmVsb3BtZW50IFNlZWQpIGFuZCAyMDE2IFlhaG9vIEluYy5cbiAqIEBsaWNlbnNlICAgIExpY2Vuc2VkIHVuZGVyIHtAbGluayBodHRwczovL3NwZHgub3JnL2xpY2Vuc2VzL0JTRC0zLUNsYXVzZS1DbGVhci5odG1sIEJTRC0zLUNsYXVzZS1DbGVhcn0uXG4gKiAgICAgICAgICAgICBHaXRodWIuanMgaXMgZnJlZWx5IGRpc3RyaWJ1dGFibGUuXG4gKi9cblxuaW1wb3J0IFJlcXVlc3RhYmxlIGZyb20gJy4vUmVxdWVzdGFibGUnO1xuXG4vKipcbiAqIFJlbmRlcnMgaHRtbCBmcm9tIE1hcmtkb3duIHRleHRcbiAqL1xuY2xhc3MgTWFya2Rvd24gZXh0ZW5kcyBSZXF1ZXN0YWJsZSB7XG4gICAvKipcbiAgICAqIGNvbnN0cnVjdCBhIE1hcmtkb3duXG4gICAgKiBAcGFyYW0ge1JlcXVlc3RhYmxlLmF1dGh9IGF1dGggLSB0aGUgY3JlZGVudGlhbHMgdG8gYXV0aGVudGljYXRlIHRvIEdpdEh1YlxuICAgICogQHBhcmFtIHtzdHJpbmd9IFthcGlCYXNlXSAtIHRoZSBiYXNlIEdpdGh1YiBBUEkgVVJMXG4gICAgKiBAcmV0dXJuIHtQcm9taXNlfSAtIHRoZSBwcm9taXNlIGZvciB0aGUgaHR0cCByZXF1ZXN0XG4gICAgKi9cbiAgIGNvbnN0cnVjdG9yKGF1dGgsIGFwaUJhc2UpIHtcbiAgICAgIHN1cGVyKGF1dGgsIGFwaUJhc2UpO1xuICAgfVxuXG4gICAvKipcbiAgICAqIFJlbmRlciBodG1sIGZyb20gTWFya2Rvd24gdGV4dC5cbiAgICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIuZ2l0aHViLmNvbS92My9tYXJrZG93bi8jcmVuZGVyLWFuLWFyYml0cmFyeS1tYXJrZG93bi1kb2N1bWVudFxuICAgICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnMgLSBjb252ZXJzaW9uIG9wdGlvbnNcbiAgICAqIEBwYXJhbSB7c3RyaW5nfSBbb3B0aW9ucy50ZXh0XSAtIHRoZSBtYXJrZG93biB0ZXh0IHRvIGNvbnZlcnRcbiAgICAqIEBwYXJhbSB7c3RyaW5nfSBbb3B0aW9ucy5tb2RlPW1hcmtkb3duXSAtIGNhbiBiZSBlaXRoZXIgYG1hcmtkb3duYCBvciBgZ2ZtYFxuICAgICogQHBhcmFtIHtzdHJpbmd9IFtvcHRpb25zLmNvbnRleHRdIC0gcmVwb3NpdG9yeSBuYW1lIGlmIG1vZGUgaXMgZ2ZtXG4gICAgKiBAcGFyYW0ge1JlcXVlc3RhYmxlLmNhbGxiYWNrfSBbY2JdIC0gd2lsbCByZWNlaXZlIHRoZSBjb252ZXJ0ZWQgaHRtbFxuICAgICogQHJldHVybiB7UHJvbWlzZX0gLSB0aGUgcHJvbWlzZSBmb3IgdGhlIGh0dHAgcmVxdWVzdFxuICAgICovXG4gICByZW5kZXIob3B0aW9ucywgY2IpIHtcbiAgICAgIHJldHVybiB0aGlzLl9yZXF1ZXN0KCdQT1NUJywgJy9tYXJrZG93bicsIG9wdGlvbnMsIGNiKTtcbiAgIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBNYXJrZG93bjtcbiJdfQ==","//# sourceMappingURL=Markdown.js.map",""],"l":{"3":1,"5":1,"7":1,"9":1,"11":1,"13":1,"15":1,"25":1,"26":1,"34":1,"35":0,"37":0,"52":1,"55":0,"59":1,"62":1}},"/home/travis/build/npmtest/node-npmtest-github-api/node_modules/github-api/dist/components/Project.js":{"path":"/home/travis/build/npmtest/node-npmtest-github-api/node_modules/github-api/dist/components/Project.js","s":{"1":1,"2":1,"3":1,"4":16,"5":16,"6":16,"7":16,"8":16,"9":16,"10":1,"11":1,"12":1,"13":1,"14":0,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1,"27":0,"28":0,"29":1,"30":0,"31":0,"32":0,"33":1,"34":1,"35":0,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":0,"43":0,"44":0,"45":0,"46":1,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":1,"79":1},"b":{"1":[16,16],"2":[16,0],"3":[1,0],"4":[0,1],"5":[0,1],"6":[1,1],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0,0],"12":[0,1],"13":[1,0],"14":[1,1],"15":[1,0],"16":[1,0],"17":[0,0],"18":[0,0],"19":[0,0]},"f":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0},"fnMap":{"1":{"name":"(anonymous_1)","line":3,"loc":{"start":{"line":3,"column":19},"end":{"line":3,"column":31}}},"2":{"name":"defineProperties","line":3,"loc":{"start":{"line":3,"column":33},"end":{"line":3,"column":74}}},"3":{"name":"(anonymous_3)","line":3,"loc":{"start":{"line":3,"column":357},"end":{"line":3,"column":405}}},"4":{"name":"_interopRequireDefault","line":9,"loc":{"start":{"line":9,"column":0},"end":{"line":9,"column":37}}},"5":{"name":"_toConsumableArray","line":11,"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":33}}},"6":{"name":"_classCallCheck","line":13,"loc":{"start":{"line":13,"column":0},"end":{"line":13,"column":48}}},"7":{"name":"_possibleConstructorReturn","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":48}}},"8":{"name":"_inherits","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":41}}},"9":{"name":"(anonymous_9)","line":27,"loc":{"start":{"line":27,"column":14},"end":{"line":27,"column":38}}},"10":{"name":"Project","line":36,"loc":{"start":{"line":36,"column":3},"end":{"line":36,"column":39}}},"11":{"name":"getProject","line":55,"loc":{"start":{"line":55,"column":13},"end":{"line":55,"column":37}}},"12":{"name":"updateProject","line":69,"loc":{"start":{"line":69,"column":13},"end":{"line":69,"column":49}}},"13":{"name":"deleteProject","line":82,"loc":{"start":{"line":82,"column":13},"end":{"line":82,"column":40}}},"14":{"name":"listProjectColumns","line":95,"loc":{"start":{"line":95,"column":13},"end":{"line":95,"column":45}}},"15":{"name":"getProjectColumn","line":109,"loc":{"start":{"line":109,"column":13},"end":{"line":109,"column":50}}},"16":{"name":"createProjectColumn","line":123,"loc":{"start":{"line":123,"column":13},"end":{"line":123,"column":55}}},"17":{"name":"updateProjectColumn","line":138,"loc":{"start":{"line":138,"column":13},"end":{"line":138,"column":62}}},"18":{"name":"deleteProjectColumn","line":152,"loc":{"start":{"line":152,"column":13},"end":{"line":152,"column":53}}},"19":{"name":"moveProjectColumn","line":168,"loc":{"start":{"line":168,"column":13},"end":{"line":168,"column":61}}},"20":{"name":"listProjectCards","line":181,"loc":{"start":{"line":181,"column":13},"end":{"line":181,"column":43}}},"21":{"name":"(anonymous_21)","line":184,"loc":{"start":{"line":184,"column":47},"end":{"line":184,"column":63}}},"22":{"name":"(anonymous_22)","line":187,"loc":{"start":{"line":187,"column":40},"end":{"line":187,"column":58}}},"23":{"name":"(anonymous_23)","line":190,"loc":{"start":{"line":190,"column":17},"end":{"line":190,"column":43}}},"24":{"name":"(anonymous_24)","line":191,"loc":{"start":{"line":191,"column":46},"end":{"line":191,"column":69}}},"25":{"name":"(anonymous_25)","line":201,"loc":{"start":{"line":201,"column":18},"end":{"line":201,"column":33}}},"26":{"name":"listColumnCards","line":220,"loc":{"start":{"line":220,"column":13},"end":{"line":220,"column":49}}},"27":{"name":"getProjectCard","line":234,"loc":{"start":{"line":234,"column":13},"end":{"line":234,"column":49}}},"28":{"name":"createProjectCard","line":249,"loc":{"start":{"line":249,"column":13},"end":{"line":249,"column":60}}},"29":{"name":"updateProjectCard","line":264,"loc":{"start":{"line":264,"column":13},"end":{"line":264,"column":61}}},"30":{"name":"deleteProjectCard","line":278,"loc":{"start":{"line":278,"column":13},"end":{"line":278,"column":52}}},"31":{"name":"moveProjectCard","line":295,"loc":{"start":{"line":295,"column":13},"end":{"line":295,"column":67}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":564}},"2":{"start":{"line":3,"column":33},"end":{"line":3,"column":349}},"3":{"start":{"line":3,"column":76},"end":{"line":3,"column":347}},"4":{"start":{"line":3,"column":117},"end":{"line":3,"column":143}},"5":{"start":{"line":3,"column":144},"end":{"line":3,"column":199}},"6":{"start":{"line":3,"column":200},"end":{"line":3,"column":231}},"7":{"start":{"line":3,"column":232},"end":{"line":3,"column":286}},"8":{"start":{"line":3,"column":259},"end":{"line":3,"column":286}},"9":{"start":{"line":3,"column":287},"end":{"line":3,"column":345}},"10":{"start":{"line":3,"column":350},"end":{"line":3,"column":559}},"11":{"start":{"line":3,"column":407},"end":{"line":3,"column":475}},"12":{"start":{"line":3,"column":423},"end":{"line":3,"column":475}},"13":{"start":{"line":3,"column":476},"end":{"line":3,"column":536}},"14":{"start":{"line":3,"column":493},"end":{"line":3,"column":536}},"15":{"start":{"line":3,"column":537},"end":{"line":3,"column":556}},"16":{"start":{"line":5,"column":0},"end":{"line":5,"column":45}},"17":{"start":{"line":7,"column":0},"end":{"line":7,"column":58}},"18":{"start":{"line":9,"column":0},"end":{"line":9,"column":95}},"19":{"start":{"line":9,"column":39},"end":{"line":9,"column":93}},"20":{"start":{"line":11,"column":0},"end":{"line":11,"column":195}},"21":{"start":{"line":11,"column":35},"end":{"line":11,"column":193}},"22":{"start":{"line":11,"column":61},"end":{"line":11,"column":145}},"23":{"start":{"line":11,"column":126},"end":{"line":11,"column":143}},"24":{"start":{"line":11,"column":146},"end":{"line":11,"column":158}},"25":{"start":{"line":11,"column":168},"end":{"line":11,"column":191}},"26":{"start":{"line":13,"column":0},"end":{"line":13,"column":153}},"27":{"start":{"line":13,"column":50},"end":{"line":13,"column":151}},"28":{"start":{"line":13,"column":92},"end":{"line":13,"column":149}},"29":{"start":{"line":15,"column":0},"end":{"line":15,"column":240}},"30":{"start":{"line":15,"column":50},"end":{"line":15,"column":151}},"31":{"start":{"line":15,"column":63},"end":{"line":15,"column":149}},"32":{"start":{"line":15,"column":152},"end":{"line":15,"column":238}},"33":{"start":{"line":17,"column":0},"end":{"line":17,"column":494}},"34":{"start":{"line":17,"column":43},"end":{"line":17,"column":208}},"35":{"start":{"line":17,"column":106},"end":{"line":17,"column":206}},"36":{"start":{"line":17,"column":209},"end":{"line":17,"column":373}},"37":{"start":{"line":17,"column":374},"end":{"line":17,"column":492}},"38":{"start":{"line":17,"column":390},"end":{"line":17,"column":492}},"39":{"start":{"line":27,"column":0},"end":{"line":302,"column":25}},"40":{"start":{"line":28,"column":3},"end":{"line":28,"column":36}},"41":{"start":{"line":36,"column":3},"end":{"line":43,"column":4}},"42":{"start":{"line":37,"column":6},"end":{"line":37,"column":37}},"43":{"start":{"line":39,"column":6},"end":{"line":39,"column":151}},"44":{"start":{"line":41,"column":6},"end":{"line":41,"column":22}},"45":{"start":{"line":42,"column":6},"end":{"line":42,"column":19}},"46":{"start":{"line":53,"column":3},"end":{"line":299,"column":7}},"47":{"start":{"line":56,"column":9},"end":{"line":56,"column":73}},"48":{"start":{"line":70,"column":9},"end":{"line":70,"column":78}},"49":{"start":{"line":83,"column":9},"end":{"line":83,"column":76}},"50":{"start":{"line":96,"column":9},"end":{"line":96,"column":87}},"51":{"start":{"line":110,"column":9},"end":{"line":110,"column":77}},"52":{"start":{"line":124,"column":9},"end":{"line":124,"column":90}},"53":{"start":{"line":139,"column":9},"end":{"line":139,"column":82}},"54":{"start":{"line":153,"column":9},"end":{"line":153,"column":80}},"55":{"start":{"line":169,"column":9},"end":{"line":169,"column":107}},"56":{"start":{"line":182,"column":9},"end":{"line":182,"column":27}},"57":{"start":{"line":184,"column":9},"end":{"line":207,"column":12}},"58":{"start":{"line":185,"column":12},"end":{"line":185,"column":33}},"59":{"start":{"line":187,"column":12},"end":{"line":189,"column":16}},"60":{"start":{"line":188,"column":15},"end":{"line":188,"column":97}},"61":{"start":{"line":191,"column":12},"end":{"line":196,"column":19}},"62":{"start":{"line":192,"column":15},"end":{"line":192,"column":37}},"63":{"start":{"line":194,"column":15},"end":{"line":194,"column":63}},"64":{"start":{"line":195,"column":15},"end":{"line":195,"column":27}},"65":{"start":{"line":197,"column":12},"end":{"line":199,"column":13}},"66":{"start":{"line":198,"column":15},"end":{"line":198,"column":31}},"67":{"start":{"line":200,"column":12},"end":{"line":200,"column":25}},"68":{"start":{"line":202,"column":12},"end":{"line":205,"column":13}},"69":{"start":{"line":203,"column":15},"end":{"line":203,"column":23}},"70":{"start":{"line":204,"column":15},"end":{"line":204,"column":22}},"71":{"start":{"line":206,"column":12},"end":{"line":206,"column":22}},"72":{"start":{"line":221,"column":9},"end":{"line":221,"column":89}},"73":{"start":{"line":235,"column":9},"end":{"line":235,"column":84}},"74":{"start":{"line":250,"column":9},"end":{"line":250,"column":92}},"75":{"start":{"line":265,"column":9},"end":{"line":265,"column":89}},"76":{"start":{"line":279,"column":9},"end":{"line":279,"column":87}},"77":{"start":{"line":296,"column":9},"end":{"line":297,"column":13}},"78":{"start":{"line":301,"column":3},"end":{"line":301,"column":18}},"79":{"start":{"line":304,"column":0},"end":{"line":304,"column":25}}},"branchMap":{"1":{"line":3,"type":"binary-expr","locations":[{"start":{"line":3,"column":168},"end":{"line":3,"column":189}},{"start":{"line":3,"column":193},"end":{"line":3,"column":198}}]},"2":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":232},"end":{"line":3,"column":232}},{"start":{"line":3,"column":232},"end":{"line":3,"column":232}}]},"3":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":407},"end":{"line":3,"column":407}},{"start":{"line":3,"column":407},"end":{"line":3,"column":407}}]},"4":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":476},"end":{"line":3,"column":476}},{"start":{"line":3,"column":476},"end":{"line":3,"column":476}}]},"5":{"line":9,"type":"cond-expr","locations":[{"start":{"line":9,"column":70},"end":{"line":9,"column":73}},{"start":{"line":9,"column":76},"end":{"line":9,"column":92}}]},"6":{"line":9,"type":"binary-expr","locations":[{"start":{"line":9,"column":46},"end":{"line":9,"column":49}},{"start":{"line":9,"column":53},"end":{"line":9,"column":67}}]},"7":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":35},"end":{"line":11,"column":35}},{"start":{"line":11,"column":35},"end":{"line":11,"column":35}}]},"8":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":50},"end":{"line":13,"column":50}},{"start":{"line":13,"column":50},"end":{"line":13,"column":50}}]},"9":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":50},"end":{"line":15,"column":50}},{"start":{"line":15,"column":50},"end":{"line":15,"column":50}}]},"10":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":226},"end":{"line":15,"column":230}},{"start":{"line":15,"column":233},"end":{"line":15,"column":237}}]},"11":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":159},"end":{"line":15,"column":163}},{"start":{"line":15,"column":168},"end":{"line":15,"column":192}},{"start":{"line":15,"column":196},"end":{"line":15,"column":222}}]},"12":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":43},"end":{"line":17,"column":43}},{"start":{"line":17,"column":43},"end":{"line":17,"column":43}}]},"13":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":47},"end":{"line":17,"column":79}},{"start":{"line":17,"column":83},"end":{"line":17,"column":102}}]},"14":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":244},"end":{"line":17,"column":254}},{"start":{"line":17,"column":258},"end":{"line":17,"column":278}}]},"15":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":374},"end":{"line":17,"column":374}},{"start":{"line":17,"column":374},"end":{"line":17,"column":374}}]},"16":{"line":17,"type":"cond-expr","locations":[{"start":{"line":17,"column":414},"end":{"line":17,"column":457}},{"start":{"line":17,"column":460},"end":{"line":17,"column":491}}]},"17":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":52},"end":{"line":39,"column":69}},{"start":{"line":39,"column":73},"end":{"line":39,"column":103}}]},"18":{"line":197,"type":"if","locations":[{"start":{"line":197,"column":12},"end":{"line":197,"column":12}},{"start":{"line":197,"column":12},"end":{"line":197,"column":12}}]},"19":{"line":202,"type":"if","locations":[{"start":{"line":202,"column":12},"end":{"line":202,"column":12}},{"start":{"line":202,"column":12},"end":{"line":202,"column":12}}]}},"code":["'use strict';","","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();","","var _Requestable2 = require('./Requestable');","","var _Requestable3 = _interopRequireDefault(_Requestable2);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }","","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }","","function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }","","function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }filecopyright  2013 Michael Aufreiter (Development Seed) and 2016 Yahoo Inclicense    Licensed under {@link https://spdx.org/licenses/BSD-3-Clause-Clear.html BSD-3-Clause-Clear}ithub.js is freely distributableroject encapsulates the functionality to create, query, and modify cards and columns."," */","var Project = function (_Requestable) {","   _inherits(Project, _Requestable);","","   /**","    * Create a Project.","    * @param {string} id - the id of the project","    * @param {Requestable.auth} [auth] - information required to authenticate to Github","    * @param {string} [apiBase=https://api.github.com] - the base Github API URL","    */","   function Project(id, auth, apiBase) {","      _classCallCheck(this, Project);","","      var _this = _possibleConstructorReturn(this, (Project.__proto__ || Object.getPrototypeOf(Project)).call(this, auth, apiBase, 'inertia-preview'));","","      _this.__id = id;","      return _this;","   }","","   /**","    * Get information about a project","    * @see https://developer.github.com/v3/projects/#get-a-project","    * @param {Requestable.callback} cb - will receive the project information","    * @return {Promise} - the promise for the http request","    */","","","   _createClass(Project, [{","      key: 'getProject',","      value: function getProject(cb) {","         return this._request('GET', '/projects/' + this.__id, null, cb);","      }","","      /**","       * Edit a project","       * @see https://developer.github.com/v3/projects/#update-a-project","       * @param {Object} options - the description of the project","       * @param {Requestable.callback} cb - will receive the modified project","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: 'updateProject',","      value: function updateProject(options, cb) {","         return this._request('PATCH', '/projects/' + this.__id, options, cb);","      }","","      /**","       * Delete a project","       * @see https://developer.github.com/v3/projects/#delete-a-project","       * @param {Requestable.callback} cb - will receive true if the operation is successful","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: 'deleteProject',","      value: function deleteProject(cb) {","         return this._request('DELETE', '/projects/' + this.__id, null, cb);","      }","","      /**","       * Get information about all columns of a project","       * @see https://developer.github.com/v3/projects/columns/#list-project-columns","       * @param {Requestable.callback} [cb] - will receive the list of columns","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: 'listProjectColumns',","      value: function listProjectColumns(cb) {","         return this._requestAllPages('/projects/' + this.__id + '/columns', null, cb);","      }","","      /**","       * Get information about a column","       * @see https://developer.github.com/v3/projects/columns/#get-a-project-column","       * @param {string} colId - the id of the column","       * @param {Requestable.callback} cb - will receive the column information","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: 'getProjectColumn',","      value: function getProjectColumn(colId, cb) {","         return this._request('GET', '/projects/columns/' + colId, null, cb);","      }","","      /**","       * Create a new column","       * @see https://developer.github.com/v3/projects/columns/#create-a-project-column","       * @param {Object} options - the description of the column","       * @param {Requestable.callback} cb - will receive the newly created column","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: 'createProjectColumn',","      value: function createProjectColumn(options, cb) {","         return this._request('POST', '/projects/' + this.__id + '/columns', options, cb);","      }","","      /**","       * Edit a column","       * @see https://developer.github.com/v3/projects/columns/#update-a-project-column","       * @param {string} colId - the column id","       * @param {Object} options - the description of the column","       * @param {Requestable.callback} cb - will receive the modified column","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: 'updateProjectColumn',","      value: function updateProjectColumn(colId, options, cb) {","         return this._request('PATCH', '/projects/columns/' + colId, options, cb);","      }","","      /**","       * Delete a column","       * @see https://developer.github.com/v3/projects/columns/#delete-a-project-column","       * @param {string} colId - the column to be deleted","       * @param {Requestable.callback} cb - will receive true if the operation is successful","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: 'deleteProjectColumn',","      value: function deleteProjectColumn(colId, cb) {","         return this._request('DELETE', '/projects/columns/' + colId, null, cb);","      }","","      /**","       * Move a column","       * @see https://developer.github.com/v3/projects/columns/#move-a-project-column","       * @param {string} colId - the column to be moved","       * @param {string} position - can be one of first, last, or after:<column-id>,","       * where <column-id> is the id value of a column in the same project.","       * @param {Requestable.callback} cb - will receive true if the operation is successful","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: 'moveProjectColumn',","      value: function moveProjectColumn(colId, position, cb) {","         return this._request('POST', '/projects/columns/' + colId + '/moves', { position: position }, cb);","      }","","      /**","       * Get information about all cards of a project","       * @see https://developer.github.com/v3/projects/cards/#list-project-cards","       * @param {Requestable.callback} [cb] - will receive the list of cards","       * @return {Promise} - the promise for the http request","       */","","   }, {","      key: 'listProjectCards',","      value: function listProjectCards(cb) {","         var _this2 = this;","","         return this.listProjectColumns().then(function (_ref) {","            var data = _ref.data;","","            return Promise.all(data.map(function (column) {","               return _this2._requestAllPages('/projects/columns/' + column.id + '/cards', null);","            }));","         }).then(function (cardsInColumns) {","            var cards = cardsInColumns.reduce(function (prev, _ref2) {","               var data = _ref2.data;","","               prev.push.apply(prev, _toConsumableArray(data));","               return prev;","            }, []);","            if (cb) {","               cb(null, cards);","            }","            return cards;","         }).catch(function (err) {","            if (cb) {","               cb(err);","               return;","            }","            throw err;","         });","      }","","      /**","      * Get information about all cards of a column","      * @see https://developer.github.com/v3/projects/cards/#list-project-cards","      * @param {string} colId - the id of the column","      * @param {Requestable.callback} [cb] - will receive the list of cards","      * @return {Promise} - the promise for the http request","      */","","   }, {","      key: 'listColumnCards',","      value: function listColumnCards(colId, cb) {","         return this._requestAllPages('/projects/columns/' + colId + '/cards', null, cb);","      }","","      /**","      * Get information about a card","      * @see https://developer.github.com/v3/projects/cards/#get-a-project-card","      * @param {string} cardId - the id of the card","      * @param {Requestable.callback} cb - will receive the card information","      * @return {Promise} - the promise for the http request","      */","","   }, {","      key: 'getProjectCard',","      value: function getProjectCard(cardId, cb) {","         return this._request('GET', '/projects/columns/cards/' + cardId, null, cb);","      }","","      /**","      * Create a new card","      * @see https://developer.github.com/v3/projects/cards/#create-a-project-card","      * @param {string} colId - the column id","      * @param {Object} options - the description of the card","      * @param {Requestable.callback} cb - will receive the newly created card","      * @return {Promise} - the promise for the http request","      */","","   }, {","      key: 'createProjectCard',","      value: function createProjectCard(colId, options, cb) {","         return this._request('POST', '/projects/columns/' + colId + '/cards', options, cb);","      }","","      /**","      * Edit a card","      * @see https://developer.github.com/v3/projects/cards/#update-a-project-card","      * @param {string} cardId - the card id","      * @param {Object} options - the description of the card","      * @param {Requestable.callback} cb - will receive the modified card","      * @return {Promise} - the promise for the http request","      */","","   }, {","      key: 'updateProjectCard',","      value: function updateProjectCard(cardId, options, cb) {","         return this._request('PATCH', '/projects/columns/cards/' + cardId, options, cb);","      }","","      /**","      * Delete a card","      * @see https://developer.github.com/v3/projects/cards/#delete-a-project-card","      * @param {string} cardId - the card to be deleted","      * @param {Requestable.callback} cb - will receive true if the operation is successful","      * @return {Promise} - the promise for the http request","      */","","   }, {","      key: 'deleteProjectCard',","      value: function deleteProjectCard(cardId, cb) {","         return this._request('DELETE', '/projects/columns/cards/' + cardId, null, cb);","      }","","      /**","      * Move a card","      * @see https://developer.github.com/v3/projects/cards/#move-a-project-card","      * @param {string} cardId - the card to be moved","      * @param {string} position - can be one of top, bottom, or after:<card-id>,","      * where <card-id> is the id value of a card in the same project.","      * @param {string} colId - the id value of a column in the same project.","      * @param {Requestable.callback} cb - will receive true if the operation is successful","      * @return {Promise} - the promise for the http request","      */","","   }, {","      key: 'moveProjectCard',","      value: function moveProjectCard(cardId, position, colId, cb) {","         return this._request('POST', '/projects/columns/cards/' + cardId + '/moves', { position: position, column_id: colId }, // eslint-disable-line camelcase","         cb);","      }","   }]);","","   return Project;","}(_Requestable3.default);","","module.exports = Project;","//# sourceMappingURL=data:application/json;base64,","//# sourceMappingURL=Project.js.map",""],"l":{"3":16,"5":1,"7":1,"9":1,"11":1,"13":1,"15":1,"17":1,"27":1,"28":1,"36":1,"37":0,"39":0,"41":0,"42":0,"53":1,"56":0,"70":0,"83":0,"96":0,"110":0,"124":0,"139":0,"153":0,"169":0,"182":0,"184":0,"185":0,"187":0,"188":0,"191":0,"192":0,"194":0,"195":0,"197":0,"198":0,"200":0,"202":0,"203":0,"204":0,"206":0,"221":0,"235":0,"250":0,"265":0,"279":0,"296":0,"301":1,"304":1}}}